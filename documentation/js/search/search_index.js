var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMembersDialogData.html",[0,0.353,1,2.579]],["body/interfaces/AddMembersDialogData.html",[0,0.55,1,4.019,2,1.128,3,0.199,4,0.199,5,0.17,6,2.343,7,1.016,8,2.953,9,1.567,10,0.821,11,1.722,12,1.743,13,3.027,14,0.863,15,3.295,16,0.199,17,0.484,18,0.626,19,2.221,20,2.914,21,3.697,22,0.991,23,0.329,24,0.026,25,0.814,26,0.102,27,2.417,28,2.419,29,2.419,30,1.115,31,1.369,32,0.391,33,0.914,34,0.542,35,1.743,36,1.059,37,2.463,38,1.813,39,2.13,40,2.287,41,1.683,42,1.203,43,3.538,44,2.604,45,3.538,46,1.979,47,1.567,48,2.113,49,1.463,50,0.672,51,1.008,52,2.604,53,2.604,54,2.259,55,1.567,56,0.311,57,3.483,58,2.901,59,0.78,60,0.739,61,3.483,62,4.733,63,6.365,64,2.287,65,0.502,66,0.427,67,0.499,68,0.502,69,0.532,70,0.502,71,0.502,72,1.683,73,0.72,74,1.683,75,0.427,76,0.72,77,0.821,78,0.876,79,0.391,80,3.616,81,2.665,82,2.343,83,2.665,84,1.567,85,2.343,86,3.483,87,3.483,88,0.737,89,2.604,90,2.135,91,1.19,92,0.768,93,3.483,94,3.88,95,2.343,96,3.538,97,1.813,98,2.604,99,1.635,100,2.534,101,3.483,102,1.813,103,1.961,104,0.651,105,2.604,106,1.152,107,0.737,108,2.604,109,2.113,110,1.567,111,2.604,112,1.683,113,2.604,114,1.683,115,2.13,116,1.369,117,1.567,118,0.72,119,1.813,120,2.901,121,2.135,122,4.733,123,2.953,124,2.901,125,2.463,126,3.538,127,3.813,128,4.019,129,1.359,130,2.135,131,4.019,132,2.604,133,5.377,134,3.483,135,3.483,136,2.953,137,3.483,138,4.019,139,3.483,140,2.135,141,2.604,142,2.953,143,3.483,144,6.032,145,4.733,146,3.483,147,3.483,148,4.733,149,2.901,150,3.538,151,2.135,152,3.027,153,2.135,154,2.604,155,2.604,156,2.604,157,5.377,158,1.439,159,3.483,160,3.483,161,4.733,162,4.733,163,6.222,164,2.604,165,4.733,166,2.343,167,3.483,168,2.135,169,2.604,170,4.019,171,1.961,172,3.483,173,1.961,174,3.483,175,2.604,176,1.463,177,2.604,178,2.604,179,2.604,180,1.545,181,2.604,182,2.604,183,3.483,184,3.483,185,3.483,186,2.343,187,0.716,188,2.604,189,2.343,190,2.604,191,1.683,192,3.483,193,2.604,194,1.567,195,2.604,196,2.604,197,3.616,198,2.604,199,1.961,200,1.961,201,2.604,202,0.933,203,1.743,204,1.369,205,2.343,206,2.463,207,2.604,208,2.604,209,2.604,210,2.604,211,2.665,212,2.604,213,3.483,214,3.483,215,1.683,216,3.483,217,2.604,218,3.483,219,3.483,220,3.483,221,3.483,222,3.483,223,2.665,224,2.135,225,1.961,226,1.463,227,3.538,228,1.813,229,4.019,230,2.287,231,3.295,232,1.961,233,2.604,234,3.483,235,3.483,236,4.733,237,3.483,238,3.483,239,3.483,240,3.483,241,1.961,242,0.016,243,0.016]],["title/components/AddMembersDialogMobileComponent.html",[26,0.075,244,0.666]],["body/components/AddMembersDialogMobileComponent.html",[0,0.355,3,0.129,4,0.129,5,0.111,6,4.462,7,1.037,10,0.534,11,1.719,12,0.834,14,0.947,16,0.129,17,0.355,18,0.6,19,1.737,21,3.287,22,0.656,23,0.35,24,0.026,25,0.723,26,0.091,27,2.055,30,0.993,31,0.891,32,0.254,33,0.813,34,0.353,35,1.551,36,0.689,37,2.192,38,1.179,39,2.123,42,0.782,43,3.802,44,1.694,45,4.304,46,1.975,47,1.02,48,2.194,49,0.952,50,0.437,51,0.897,56,0.228,58,3.287,59,0.516,60,0.706,64,1.675,65,1,66,0.85,67,0.547,68,0.5,69,0.473,70,0.5,71,0.5,73,0.716,75,0.278,76,0.468,77,0.817,78,0.872,79,0.571,80,3.174,84,1.895,88,0.792,89,3.149,90,2.892,91,1.186,92,0.828,94,3.421,95,2.332,97,1.805,98,4.173,99,1.435,100,2.345,103,2.372,104,0.483,106,1.1,107,0.735,109,2.108,111,3.802,113,2.592,115,2.123,116,1.363,117,1.56,118,0.975,119,1.179,120,1.389,121,1.389,124,1.389,125,1.179,126,1.694,127,3.117,128,2.592,129,1.546,130,1.389,138,2.592,149,3.287,150,4.01,151,2.892,152,2.657,153,2.892,154,1.694,155,1.694,156,2.592,158,1.054,164,1.694,166,2.332,169,3.527,170,3.149,171,1.952,173,1.276,175,3.527,176,0.952,177,1.694,178,2.592,179,3.527,180,0.929,181,3.149,182,1.694,187,0.816,190,1.694,193,1.694,194,1.56,197,1.524,198,1.694,200,1.952,201,2.592,203,1.277,204,1.999,205,3.174,206,1.179,207,1.694,208,1.694,209,3.527,210,1.694,224,2.125,226,1.457,228,2.456,242,0.012,243,0.012,244,0.911,245,0.716,246,0.534,247,0.734,248,0.468,249,0.534,250,4.959,251,1.694,252,3.134,253,2.892,254,2.332,255,2.94,256,0.534,257,3.571,258,2.94,259,0.817,260,2.592,261,2.94,262,1.921,263,3.421,264,1.555,265,3.468,266,1.805,267,2.94,268,1.059,269,2.94,270,2.266,271,2.332,272,2.125,273,2.94,274,1.675,275,2.94,276,1.219,277,2.266,278,1.054,279,2.266,280,2.125,281,2.266,282,2.266,283,2.266,284,1.363,285,2.94,286,2.266,287,2.125,288,2.94,289,2.266,290,1.952,291,2.592,292,2.125,293,1.805,294,2.266,295,3.421,296,1.495,297,1.593,298,2.266,299,1.805,300,2.332,301,2.94,302,1.675,303,2.266,304,2.266,305,2.592,306,2.125,307,2.266,308,2.266,309,2.266,310,2.94,311,2.332,312,2.266,313,2.266,314,2.266,315,1.457,316,1.921,317,1.921,318,1.921,319,1.921,320,1.524,321,3.287,322,1.921,323,2.94,324,1.921,325,0.689,326,1.921,327,1.921,328,2.372,329,1.921,330,1.921,331,1.921,332,1.921,333,3.468,334,3.527,335,3.468,336,3.468,337,3.468,338,2.456,339,3.468,340,3.468,341,3.468,342,2.28,343,3.468,344,3.468,345,3.468,346,1.756,347,3.468,348,3.468,349,0.782,350,2.372,351,2.581,352,2.332,353,1.808,354,1.675,355,1.832,356,1.921,357,1.77,358,1.581,359,2.172,360,1.737,361,1.629,362,1.529,363,1.363,364,0.766,365,1.179,366,1.276,367,1.737,368,2.172,369,2.234,370,1.975,371,2.137,372,0.891,373,1.805,374,2.419,375,2.192,376,1.831,377,1.988,378,1.648,379,1.095,380,1.454,381,1.277,382,1.276,383,1.656,384,1.975,385,1.872,386,2.321,387,2.288,388,1.529,389,1.737,390,1.737,391,1.872,392,1.454,393,0.952,394,0.952,395,1.179,396,1.179,397,1.179,398,0.952,399,1.179,400,0.952,401,1.179,402,1.831,403,1.77,404,2.738,405,2.345,406,1.895,407,1.551,408,1.551,409,2.28,410,2.94,411,2.647,412,2.372,413,0.891,414,1.197,415,3.149,416,2.581,417,2.266,418,1.808,419,1.921,420,1.921,421,1.921,422,2.94,423,1.921,424,2.125,425,1.276,426,1.389,427,1.457,428,0.952,429,2.108,430,2.108,431,1.952,432,1.179,433,1.56,434,1.737,435,1.457,436,2.266,437,1.197,438,1.389,439,2.035,440,2.94,441,1.276,442,1.389,443,1.389,444,1.389,445,1.389,446,2.592,447,2.137,448,1.675,449,1.656,450,1.524,451,1.921,452,1.095,453,1.179,454,1.921,455,1.921,456,2.266,457,1.389,458,1.694,459,1.524,460,1.921,461,2.266,462,2.332,463,1.524,464,1.855,465,1.921,466,1.389,467,1.524,468,1.02,469,1.179,470,1.179,471,1.524,472,2.035,473,0.891,474,2.266,475,2.266,476,2.266,477,2.266,478,2.266,479,2.266,480,1.095,481,1.855,482,1.675,483,2.266,484,2.266,485,1.179,486,0.534,487,0.766,488,0.669,489,0.534,490,1.112,491,0.534,492,1.357,493,0.534,494,0.468,495,0.534,496,0.468,497,0.468,498,0.534,499,0.5,500,0.534,501,0.468,502,0.468,503,0.534,504,0.468,505,0.353,506,0.817,507,0.468,508,0.534,509,0.437,510,0.408,511,0.817,512,0.5,513,0.437,514,0.468,515,0.534,516,0.468,517,0.534,518,0.468,519,0.468,520,0.534,521,0.437,522,0.468,523,0.817,524,0.468,525,0.534,526,0.5,527,0.534,528,0.437,529,0.5,530,0.5,531,0.468,532,0.468,533,0.468,534,0.534,535,0.468,536,0.468,537,0.534,538,0.468,539,0.534,540,0.468,541,0.437,542,0.468,543,0.408,544,0.534,545,0.5,546,0.534,547,0.468,548,0.437,549,0.468,550,0.534,551,0.468,552,0.5,553,0.534,554,0.437,555,0.468,556,0.437,557,0.534,558,0.534]],["title/interfaces/AddMembersMobileData.html",[0,0.353,263,2.32]],["body/interfaces/AddMembersMobileData.html",[0,0.585,2,1.278,3,0.225,4,0.225,5,0.193,6,2.653,7,1.026,10,0.929,11,1.794,12,1.893,14,0.887,16,0.225,17,0.526,18,0.609,19,2.314,21,3.95,22,0.891,23,0.327,24,0.026,25,0.816,26,0.111,27,2.106,30,1.212,31,1.55,32,0.443,33,0.992,34,0.614,35,1.893,36,1.199,37,2.675,38,2.052,39,2.313,42,1.361,43,3.843,44,2.948,45,4.531,46,2.106,47,1.774,48,2.248,49,1.657,51,0.891,56,0.337,58,3.505,59,0.483,60,0.701,64,1.905,65,0.569,66,0.483,67,0.53,68,0.569,69,0.577,70,0.569,71,0.569,73,0.815,75,0.483,77,0.929,78,0.991,80,3.458,88,0.801,89,2.948,90,3.151,91,0.991,92,0.837,94,3.458,95,2.653,97,2.052,98,2.948,99,1.739,100,2.546,103,2.22,104,0.585,106,1.128,107,0.801,109,2.021,111,2.948,113,2.948,115,2.313,117,1.774,118,0.815,119,2.052,120,2.417,121,2.417,124,2.417,125,2.052,126,2.948,127,3.852,128,3.843,129,1.348,130,2.417,138,3.843,149,3.95,150,4.276,151,3.151,152,2.895,153,2.417,154,2.948,155,2.948,156,3.843,158,1.563,164,2.948,166,2.653,169,2.948,170,4.276,171,2.22,175,2.948,176,1.657,177,2.948,178,2.948,179,2.948,180,1.377,181,3.843,182,2.948,187,0.685,190,2.948,193,2.948,194,1.774,197,2.653,198,2.948,200,2.22,201,2.948,203,1.452,205,2.653,206,2.052,207,2.948,208,2.948,209,4.531,210,2.948,224,2.417,226,1.657,228,2.052,242,0.018,243,0.018,244,0.761,250,2.948,251,2.948,252,2.977,253,3.151,254,2.653,255,3.343,257,3.343,258,3.343,263,3.847,266,2.052,267,3.343,271,2.653,272,2.417,273,3.343,274,1.905,275,3.343,278,1.199,280,2.417,284,1.55,285,3.343,287,2.417,288,3.343,290,2.22,291,2.948,292,2.417,293,2.052,295,3.458,299,2.052,300,2.653,301,3.343,305,2.948,306,2.417,310,3.343,311,2.653,315,1.657,316,3.343,317,4.358,318,3.343,319,3.343,320,2.653,321,3.95,322,3.343,323,4.358,324,3.343,325,1.199,326,3.343,327,3.343,328,3.221,329,3.343,330,3.343,331,3.343,332,3.343]],["title/components/AppComponent.html",[26,0.075,494,0.713]],["body/components/AppComponent.html",[3,0.241,4,0.241,5,0.206,7,0.852,14,0.562,16,0.241,17,0.549,22,0.656,23,0.337,24,0.025,25,0.869,26,0.128,31,1.657,32,0.473,33,1.14,34,0.656,35,2.174,36,1.282,50,0.814,51,0.656,56,0.277,59,0.658,60,0.658,65,1.043,66,0.886,67,0.498,68,0.774,69,0.603,70,0.774,71,0.774,73,1.109,75,0.517,76,0.871,79,0.603,88,0.656,92,0.562,104,0.432,107,0.919,180,1.129,187,0.715,202,1.758,242,0.019,243,0.019,244,0.814,245,1.109,246,0.994,247,1.366,248,0.871,249,0.994,256,0.994,264,1.465,296,1.438,297,1.532,361,2.146,486,0.994,487,1.185,488,1.036,489,0.994,490,1.465,491,0.994,492,1.59,493,0.994,494,1.284,495,0.994,496,0.871,497,0.871,498,0.994,499,1.372,500,0.994,501,0.871,502,1.284,503,0.994,504,0.871,505,0.656,506,1.265,507,0.871,508,0.994,509,0.814,510,0.759,511,1.265,512,0.931,513,0.814,514,0.871,515,0.994,516,1.284,517,0.994,518,1.284,519,1.284,520,0.994,521,0.814,522,0.871,523,1.265,524,1.284,525,0.994,526,1.372,527,0.994,528,0.814,529,0.931,530,0.931,531,0.871,532,0.871,533,1.284,534,0.994,535,1.284,536,1.109,537,0.994,538,1.284,539,0.994,540,0.871,541,0.814,542,0.871,543,0.759,544,0.994,545,1.372,546,0.994,547,0.871,548,0.814,549,0.871,550,0.994,551,0.871,552,0.931,553,0.994,554,0.814,555,0.871,556,0.814,557,0.994,558,0.994,559,3.574,560,4.012,561,5.904,562,5.006,563,5.006,564,4.55,565,5.006,566,5.367,567,5.367,568,5.904,569,4.216,570,3.022,571,4.216,572,1.853,573,4.216,574,4.216,575,2.194,576,2.194,577,4.216,578,4.216,579,4.216,580,4.216,581,4.216,582,3.152,583,4.216,584,3.152,585,3.574,586,3.152,587,4.216,588,3.152,589,4.216,590,4.216,591,3.152,592,4.216,593,4.216]],["title/injectables/AppStateService.html",[594,2.114,595,2.114]],["body/injectables/AppStateService.html",[3,0.301,4,0.301,5,0.258,16,0.301,17,0.63,18,0.489,23,0.352,24,0.025,25,0.647,32,0.592,56,0.346,69,0.691,75,0.647,79,0.592,104,0.667,106,1.032,242,0.021,243,0.021,259,1.45,264,1.535,268,1.326,276,1.271,296,1.414,297,1.506,325,1.604,560,3.944,594,3.772,595,3.772,596,3.944,597,5.691,598,3.944,599,4.871,600,6.713,601,6.154,602,5.277,603,2.263,604,6.154,605,5.277,606,4.6,607,5.277,608,4.473,609,5.218]],["title/components/AuthActionComponent.html",[26,0.075,496,0.713]],["body/components/AuthActionComponent.html",[3,0.302,4,0.193,5,0.165,7,0.762,10,1.091,14,0.449,16,0.193,17,0.474,18,0.49,22,1.027,23,0.341,24,0.026,25,0.799,26,0.114,30,1.246,32,0.379,33,1.02,34,0.525,35,1.946,36,1.025,46,2.366,47,1.517,50,0.651,51,0.525,56,0.221,59,0.731,60,0.567,65,1.03,66,0.875,67,0.429,68,0.668,69,0.639,70,0.668,71,0.668,73,0.956,75,0.413,76,0.696,77,1.091,79,0.67,83,3.553,88,0.525,91,1.548,92,0.449,99,1.025,102,2.409,104,0.61,106,0.776,107,0.721,118,1.175,129,0.794,158,1.407,180,1.24,187,0.617,202,1.24,225,2.606,232,2.606,242,0.016,243,0.016,244,0.651,245,0.956,246,0.794,247,1.092,248,0.696,249,0.794,256,0.794,259,1.091,264,1.487,268,1.499,276,1.092,278,1.407,280,2.836,296,1.416,297,1.509,325,1.407,349,1.164,353,1.932,354,1.628,355,1.702,359,1.164,362,1.092,368,1.164,369,1.598,376,1.025,377,2.127,378,1.932,380,1.164,381,1.241,386,1.964,392,1.164,402,1.813,404,1.416,407,1.241,408,1.241,414,1.164,418,1.092,429,2.526,437,1.164,441,3.204,453,1.754,464,2.236,481,2.236,485,1.754,486,0.794,487,1.022,488,0.893,489,0.794,490,1.341,491,0.794,492,1.514,493,0.794,494,0.696,495,0.794,496,1.175,497,1.43,498,0.794,499,0.744,500,0.794,501,0.696,502,0.696,503,0.794,504,0.696,505,0.525,506,1.091,507,0.696,508,0.794,509,0.651,510,0.607,511,1.091,512,0.744,513,0.651,514,0.696,515,0.794,516,1.175,517,0.794,518,1.175,519,0.696,520,0.794,521,0.651,522,0.696,523,1.091,524,0.696,525,0.794,526,0.744,527,0.794,528,0.651,529,0.744,530,0.744,531,0.696,532,0.696,533,0.696,534,0.794,535,0.696,536,1.175,537,0.794,538,0.696,539,0.794,540,0.696,541,0.651,542,0.696,543,0.607,544,0.794,545,0.744,546,0.794,547,0.696,548,0.651,549,0.696,550,0.794,551,0.696,552,1.167,553,0.794,554,0.651,555,0.696,556,0.651,557,0.794,558,0.794,572,1.164,575,1.754,576,1.754,610,5.448,611,5.448,612,2.858,613,2.961,614,3.46,615,4.824,616,3.46,617,3.487,618,3.827,619,2.588,620,3.113,621,5.286,622,4.628,623,3.555,624,5.768,625,2.588,626,4.628,627,4.628,628,3.371,629,3.827,630,2.7,631,4.628,632,3.555,633,4.628,634,3.204,635,2.409,636,2.836,637,4.628,638,4.628,639,3.924,640,2.606,641,4.628,642,1.952,643,3.371,644,4.628,645,3.827,646,1.944,647,3.827,648,4.628,649,2.56,650,4.628,651,3.371,652,4.628,653,2.606,654,3.371,655,4.628,656,3.924,657,4.628,658,4.628,659,3.371,660,3.371,661,2.52,662,3.371,663,3.371,664,2.267,665,1.964,666,3.371,667,5.286,668,3.371,669,2.858,670,2.858,671,2.858,672,3.371,673,3.371,674,3.371,675,2.083,676,2.39,677,3.371,678,2.858,679,3.371,680,3.371,681,4.824,682,2.858,683,3.371,684,2.52,685,3.371,686,2.858,687,3.371,688,3.371,689,3.924,690,3.924,691,2.236,692,2.236,693,3.113,694,4.628,695,1.754,696,2.066,697,2.267,698,2.267,699,3.103,700,1.754,701,3.371,702,4.824,703,3.204,704,2.267,705,2.267,706,2.066]],["title/interfaces/BroadcastMessageData.html",[0,0.353,707,1.552]],["body/interfaces/BroadcastMessageData.html",[0,0.677,2,1.512,3,0.267,4,0.267,5,0.228,16,0.267,17,0.633,18,0.647,19,2.105,20,2.254,22,1.136,23,0.402,24,0.025,56,0.434,67,0.433,78,1.173,202,1.532,242,0.02,243,0.02,278,1.419,364,1.505,603,2.18,642,1.332,707,2.573,708,2.627,709,3.354,710,3.251,711,3.441,712,3.195,713,3.547,714,3.195,715,2.827,716,3.293,717,2.976,718,1.632,719,2.402,720,2.859,721,2.598,722,2.859,723,2.254,724,2.428,725,2.859,726,2.627,727,2.859,728,2.627,729,2.859,730,2.859,731,2.428,732,2.428,733,2.859,734,2.428,735,2.627,736,2.859,737,2.254,738,2.859,739,1.765,740,2.43,741,2.428,742,2.9,743,2.105,744,2.976,745,2.859,746,1.834,747,2.627,748,2.627,749,2.859,750,2.859,751,1.96,752,2.428,753,2.859,754,2.428,755,1.96,756,2.428,757,3.504,758,2.428]],["title/components/ChannelDialogComponent.html",[26,0.075,501,0.713]],["body/components/ChannelDialogComponent.html",[3,0.145,4,0.145,5,0.124,7,0.837,9,1.144,10,1.502,11,1.77,13,2.13,14,0.93,16,0.145,17,0.387,18,0.538,20,2.416,22,0.833,23,0.32,24,0.026,25,0.771,26,0.126,27,2.393,30,1.064,31,0.999,32,0.285,33,0.872,34,0.396,35,1.663,36,0.773,39,2.251,40,2.583,41,1.228,42,1.306,48,2.437,49,1.068,50,0.491,51,0.396,53,1.9,56,0.167,59,0.771,60,0.863,65,1.01,66,0.858,67,0.351,68,0.546,69,0.6,70,0.546,71,0.546,72,1.827,73,0.781,74,2.182,75,0.312,76,0.525,77,0.891,79,0.766,84,1.144,85,2.544,88,0.396,91,0.951,92,0.339,99,1.626,100,1.589,102,2.603,104,0.462,106,1,107,0.589,109,2.203,110,2.406,112,1.827,114,2.182,116,1.775,118,1.033,123,3.207,129,1.502,152,2.816,173,2.816,180,1.21,186,2.544,187,0.666,203,1.393,204,1.966,205,3.364,206,1.968,215,1.827,226,1.589,230,1.827,242,0.013,243,0.013,244,0.491,245,0.781,246,0.599,247,0.824,248,0.525,249,0.599,252,1.323,256,0.599,259,0.891,264,1.483,266,1.968,268,0.951,274,1.228,276,1.033,284,1.486,296,1.34,297,1.6,302,1.228,315,1.589,325,1.373,338,1.323,342,2.583,349,0.878,350,3.155,351,2.318,352,4.233,353,1.732,354,1.228,355,1.77,357,1.897,358,1.21,359,1.935,360,1.393,361,1.306,362,1.225,363,1.966,364,1.316,365,1.323,366,1.431,367,2.063,368,2.141,369,2.327,370,2.196,371,2.246,372,1.486,373,1.323,374,2.355,375,1.323,376,1.765,377,2.305,378,1.974,379,1.827,380,2.004,381,1.842,383,1.486,384,2.063,385,1.969,386,2.346,387,2.243,388,1.225,389,1.842,390,1.393,391,1.842,392,1.559,393,1.068,394,1.068,395,1.323,396,1.323,397,1.323,398,1.068,399,1.323,400,1.068,401,1.323,402,1.976,403,2.101,404,1.589,405,1.897,406,1.702,409,1.827,410,2.155,411,2.603,412,2.816,413,1.775,414,2.004,415,1.9,416,2.318,418,1.732,419,2.155,420,2.155,421,2.155,423,2.155,424,4.131,426,1.558,427,2.101,428,1.589,429,2.203,430,0.999,431,2.13,434,1.663,435,1.068,437,1.935,438,1.558,439,1.827,441,2.543,442,2.768,443,2.318,444,1.558,445,1.558,446,2.827,447,1.589,448,1.228,452,1.827,464,2.101,466,2.318,469,1.968,473,1.775,480,1.827,481,0.999,486,0.599,487,0.835,488,0.73,489,0.599,490,1.179,491,0.599,492,1.405,493,0.599,494,0.525,495,0.599,496,0.525,497,0.525,498,0.599,499,0.561,500,0.599,501,1.033,502,0.525,503,0.599,504,0.525,505,0.396,506,0.891,507,0.525,508,0.599,509,0.491,510,0.458,511,0.891,512,0.561,513,0.491,514,0.525,515,0.599,516,0.525,517,0.599,518,0.525,519,0.525,520,0.599,521,0.491,522,0.525,523,0.891,524,0.525,525,0.599,526,0.561,527,0.599,528,0.491,529,1.104,530,0.561,531,0.525,532,0.525,533,0.525,534,0.599,535,0.525,536,0.525,537,0.599,538,0.525,539,0.599,540,0.525,541,0.491,542,0.525,543,0.458,544,0.599,545,0.561,546,0.599,547,0.525,548,0.491,549,0.525,550,0.599,551,0.525,552,0.561,553,0.599,554,0.491,555,0.525,556,0.491,557,0.599,558,0.599,565,3.207,615,3.829,635,2.35,639,3.829,653,3.358,665,1.846,699,1.323,703,1.431,718,0.726,739,1.08,751,1.589,754,1.968,759,5.402,760,4.763,761,3.207,762,3.782,763,1.968,764,3.207,765,3.782,766,3.829,767,3.829,768,3.829,769,3.829,770,3.829,771,4.516,772,3.364,773,3.782,774,1.71,775,3.207,776,1.775,777,4.516,778,2.318,779,2.544,780,2.542,781,3.782,782,2.542,783,1.589,784,1.589,785,2.827,786,2.318,787,2.13,788,3.782,789,2.542,790,1.702,791,2.416,792,2.782,793,2.827,794,3.782,795,2.542,796,2.544,797,3.782,798,1.9,799,2.827,800,2.542,801,2.544,802,2.544,803,2.544,804,2.542,805,2.155,806,2.155,807,3.782,808,3.782,809,2.542,810,3.596,811,2.542,812,2.542,813,2.155,814,3.782,815,2.542,816,2.155,817,2.542,818,3.782,819,2.542,820,2.542,821,2.542,822,2.542,823,3.207,824,2.542,825,2.542,826,2.542,827,2.542,828,2.542,829,2.155,830,2.542,831,3.739,832,1.968,833,3.782,834,3.782,835,3.207,836,3.207,837,3.782,838,3.782,839,3.782,840,2.318,841,3.782,842,3.782,843,2.318,844,3.207,845,3.782,846,2.544,847,3.782,848,3.782,849,3.782,850,3.782,851,2.768,852,2.542,853,2.542,854,1.9,855,2.155,856,2.542,857,2.416,858,2.155,859,2.155,860,4.516,861,4.516,862,2.542,863,2.13,864,1.228,865,1.71,866,1.9,867,2.542,868,1.71,869,1.71,870,2.542,871,3.207,872,3.207,873,3.207,874,3.207,875,1.9,876,2.542,877,2.544,878,2.542,879,2.542,880,5.002,881,5.002,882,3.782,883,2.544,884,3.207,885,2.542,886,2.542,887,1.9,888,2.542]],["title/interfaces/ChannelMessageData.html",[0,0.353,758,1.795]],["body/interfaces/ChannelMessageData.html",[0,0.677,2,1.509,3,0.266,4,0.266,5,0.228,16,0.266,17,0.632,18,0.653,19,2.434,20,2.251,22,1.136,23,0.402,24,0.025,56,0.434,67,0.432,78,1.171,202,1.531,242,0.02,243,0.02,278,1.417,364,1.504,603,2.179,642,1.33,707,2.097,708,2.624,709,2.425,710,3.25,711,3.44,712,3.193,713,3.546,714,3.193,715,2.826,716,3.292,717,2.973,718,1.631,719,2.4,720,2.856,721,2.596,722,2.856,723,2.251,724,2.425,725,2.856,726,2.624,727,2.856,728,2.624,729,2.856,730,2.856,731,2.425,732,2.425,733,2.856,734,2.425,735,2.624,736,2.856,737,2.251,738,2.856,739,1.764,740,2.428,741,2.425,742,2.898,743,2.103,744,2.973,745,2.856,746,1.831,747,2.624,748,2.624,749,2.856,750,2.856,751,1.958,752,2.425,753,2.856,754,2.425,755,1.958,756,2.425,757,3.501,758,2.973]],["title/components/DirectMessagesComponent.html",[26,0.075,509,0.666]],["body/components/DirectMessagesComponent.html",[3,0.172,4,0.172,5,0.147,7,0.857,11,0.86,14,0.401,16,0.172,17,0.438,18,0.397,22,0.666,23,0.357,24,0.026,25,0.749,26,0.108,28,1.925,29,2.239,30,1.172,32,0.338,33,0.96,34,0.469,46,2.301,47,1.355,50,0.581,51,0.469,54,2.569,55,1.355,56,0.198,59,0.524,60,0.664,65,1.023,66,0.869,67,0.397,68,0.617,69,0.687,70,0.617,71,0.617,73,0.884,75,0.369,76,0.622,77,1.008,79,0.608,88,0.469,91,1.438,92,0.401,99,1.74,103,1.695,104,0.693,106,1.121,107,0.666,116,1.681,118,1.119,125,2.226,129,1.008,158,0.916,176,1.265,180,1.727,187,0.663,191,2.067,199,2.409,242,0.015,243,0.015,244,0.581,245,0.884,246,0.71,247,0.975,248,0.622,249,0.71,252,1.567,256,0.71,259,1.008,262,2.553,264,1.603,268,1.075,274,1.455,276,1.291,284,1.681,296,1.451,297,1.546,302,1.455,328,1.695,349,1.04,353,1.386,355,1.784,357,1.265,358,1.674,359,2.195,360,1.832,361,1.718,362,1.755,363,1.183,364,0.944,365,1.567,367,2.106,368,1.87,369,2.052,370,2.251,371,2.569,372,2.129,373,2.226,375,2.226,376,0.916,377,1.975,378,1.612,379,2.067,380,1.477,381,1.109,383,1.955,384,1.575,385,1.575,386,2.052,387,2.106,388,1.386,389,1.575,391,1.832,392,1.04,393,1.265,394,1.265,395,1.567,396,1.567,397,1.567,398,1.265,399,1.567,400,1.265,401,1.567,402,1.513,404,1.265,407,1.832,408,1.832,409,2.403,413,1.183,414,1.04,416,1.845,418,1.853,427,1.797,428,1.265,429,1.955,430,2.249,431,2.409,433,2.239,434,1.575,435,1.265,437,1.04,439,1.455,447,1.797,448,1.455,449,1.183,453,1.567,464,1.681,468,2.437,469,2.226,470,1.567,472,2.067,473,1.183,481,1.183,482,1.455,486,0.71,487,0.944,488,0.826,489,0.71,490,1.276,491,0.71,492,1.473,493,0.71,494,0.622,495,0.71,496,0.622,497,1.263,498,0.71,499,0.665,500,0.71,501,0.622,502,0.622,503,0.71,504,0.622,505,0.469,506,1.008,507,0.622,508,0.71,509,1.045,510,1.145,511,1.008,512,0.665,513,0.581,514,0.622,515,0.71,516,0.622,517,0.71,518,0.622,519,0.622,520,0.71,521,0.581,522,0.622,523,1.008,524,0.622,525,0.71,526,0.665,527,0.71,528,0.581,529,0.665,530,1.196,531,0.622,532,0.622,533,0.622,534,0.71,535,0.622,536,0.622,537,0.71,538,0.622,539,0.71,540,0.622,541,0.581,542,0.622,543,0.542,544,0.71,545,0.665,546,0.71,547,0.622,548,0.581,549,0.622,550,0.71,551,0.622,552,0.665,553,0.71,554,0.581,555,0.622,556,0.581,557,0.71,558,0.71,572,1.04,603,1.755,625,2.276,630,2.569,649,1.925,664,2.025,676,2.09,700,2.819,706,2.621,739,0.86,792,1.567,887,2.251,889,5.792,890,5.107,891,2.553,892,2.801,893,4.975,894,4.278,895,4.975,896,4.975,897,4.218,898,4.975,899,5.417,900,5.417,901,5.417,902,4.278,903,5.417,904,5.417,905,4.592,906,2.877,907,3.346,908,4.278,909,4.975,910,4.975,911,4.278,912,3.011,913,4.975,914,3.011,915,3.011,916,3.011,917,3.011,918,4.278,919,3.011,920,3.011,921,3.011,922,3.011,923,3.32,924,3.011,925,3.011,926,3.011,927,3.011,928,2.025,929,3.011,930,3.011,931,2.251,932,3.011,933,3.011,934,3.998,935,3.627,936,3.011,937,3.011,938,5.417,939,4.278,940,4.278,941,3.198,942,4.278,943,3.198,944,4.278,945,2.621,946,3.011,947,4.975,948,2.251,949,2.025,950,3.011,951,2.553,952,2.025,953,2.025,954,3.011,955,3.011,956,3.011,957,4.049,958,4.218,959,5.417,960,2.877,961,4.278,962,4.278,963,3.011,964,3.011,965,3.011,966,3.627,967,1.567,968,2.553,969,1.695,970,1.695,971,1.845,972,2.553,973,2.553,974,3.011,975,4.278,976,3.011,977,3.011,978,3.011,979,1.845,980,3.627,981,2.251,982,4.278,983,1.386,984,2.403,985,2.409,986,2.553,987,2.553,988,2.553,989,2.553,990,3.011,991,3.011,992,2.621,993,2.877,994,2.409,995,3.011,996,2.553,997,2.553,998,1.845]],["title/interfaces/EmojiItem.html",[0,0.353,999,2.32]],["body/interfaces/EmojiItem.html",[0,0.27,2,0.52,3,0.222,4,0.092,5,0.19,7,0.38,10,0.378,11,1.505,12,1.942,14,0.351,16,0.192,17,0.27,18,0.149,21,0.984,22,1.055,23,0.264,24,0.026,25,0.709,26,0.057,27,1.999,28,1.51,29,1.51,32,0.18,33,0.509,34,0.25,35,0.971,36,0.488,37,1.372,38,0.835,39,1.187,42,0.554,46,1.236,47,0.722,48,1.319,49,0.674,51,0.845,54,1.633,55,0.722,56,0.173,58,0.984,59,0.761,60,0.709,64,1.877,65,0.232,66,0.197,67,0.149,68,0.232,69,0.625,70,0.232,71,0.232,73,0.332,75,0.197,78,1.364,79,0.547,81,1.485,83,2.188,84,0.722,85,1.774,88,0.938,90,2.988,91,1.614,92,0.447,96,2.905,97,1.372,99,1.989,100,2.139,104,0.696,106,1.146,107,0.411,108,2.509,115,2.291,117,0.722,118,0.332,127,0.984,129,1.087,130,0.984,140,0.984,149,0.984,153,0.984,158,1.604,171,0.904,176,0.674,180,1.802,186,2.614,188,1.2,189,1.08,191,0.775,194,0.722,195,1.971,199,1.485,200,1.485,202,1.236,203,1.699,206,1.372,211,1.485,215,0.775,224,0.984,226,1.108,227,1.2,231,0.984,232,2.188,242,0.019,243,0.009,248,0.332,252,1.747,266,1.372,271,1.08,272,0.984,274,1.274,276,0.803,278,0.802,280,0.984,284,1.814,287,0.984,290,0.904,292,2.057,293,1.747,296,0.43,299,1.747,306,2.057,311,1.774,315,1.633,320,1.08,325,1.916,338,0.835,346,1.593,355,0.958,358,0.706,364,1.164,376,0.488,390,0.591,402,0.802,418,0.854,431,1.485,432,2.022,434,0.591,437,0.554,449,1.036,466,1.616,468,1.51,480,0.775,482,1.274,488,0.31,505,0.411,510,0.878,513,0.509,543,0.475,556,0.648,572,0.91,603,1.649,616,1.2,619,0.674,623,2.887,625,2.281,629,1.774,630,1.633,632,1.774,634,2.745,640,1.485,642,1.621,646,1.41,649,2.443,665,1.159,675,1.51,676,2.337,691,1.621,692,0.775,697,1.08,707,1.51,709,1.372,710,3.173,711,0.835,712,0.775,713,2.234,714,1.877,715,1.41,716,1.877,718,1.929,719,0.674,721,1.633,723,2.074,724,2.825,731,0.835,732,0.835,734,0.835,737,0.775,739,1.621,740,2.369,741,1.372,742,2.712,743,2.129,746,1.319,755,1.633,756,1.372,776,1.036,783,1.108,784,1.108,787,0.904,790,1.51,791,0.775,792,0.835,793,1.971,796,1.08,801,1.774,802,1.08,810,2.887,832,1.747,846,1.08,864,2.548,866,4.158,868,1.08,869,1.774,875,1.2,877,4.318,883,2.257,892,3.495,907,1.08,923,1.616,928,1.774,941,2.509,945,1.616,948,2.905,949,1.08,952,1.08,953,2.257,957,1.971,967,0.835,971,2.381,981,1.2,983,1.391,992,0.984,999,1.774,1000,1.2,1001,1.08,1002,1.2,1003,3.295,1004,2.236,1005,4.134,1006,1.08,1007,2.236,1008,2.236,1009,1.361,1010,2.845,1011,2.236,1012,1.2,1013,1.2,1014,2.236,1015,1.2,1016,2.236,1017,1.372,1018,1.2,1019,1.08,1020,4.815,1021,3.912,1022,1.485,1023,1.2,1024,1.361,1025,1.361,1026,1.361,1027,1.361,1028,2.845,1029,1.2,1030,1.89,1031,1.361,1032,1.361,1033,1.971,1034,1.2,1035,1.2,1036,0.984,1037,1.361,1038,1.361,1039,1.361,1040,1.361,1041,4.058,1042,3.806,1043,1.361,1044,2.022,1045,2.236,1046,1.2,1047,1.361,1048,1.2,1049,1.361,1050,2.257,1051,1.361,1052,2.509,1053,2.236,1054,2.845,1055,2.236,1056,4.317,1057,2.236,1058,1.2,1059,1.361,1060,1.361,1061,2.509,1062,3.912,1063,2.845,1064,2.257,1065,1.361,1066,1.971,1067,1.361,1068,2.845,1069,2.845,1070,1.361,1071,3.295,1072,1.361,1073,1.361,1074,2.236,1075,1.971,1076,1.361,1077,1.361,1078,1.361,1079,1.361,1080,1.971,1081,1.361,1082,3.295,1083,3.295,1084,3.295,1085,1.361,1086,1.361,1087,1.485,1088,2.236,1089,1.361,1090,1.361,1091,2.614,1092,1.361,1093,2.614,1094,1.361,1095,2.845,1096,1.2,1097,1.361,1098,1.361,1099,1.361,1100,1.361,1101,4.317,1102,1.08,1103,2.236,1104,3.295,1105,2.845,1106,3.912,1107,1.361,1108,1.2,1109,2.236,1110,1.89,1111,2.236,1112,1.361,1113,1.361,1114,0.722,1115,1.361,1116,0.984,1117,1.774,1118,1.361,1119,2.236,1120,2.236,1121,1.361,1122,3.295,1123,1.2,1124,4.134,1125,1.361,1126,1.361,1127,3.295,1128,3.295,1129,4.134,1130,3.295,1131,2.845,1132,2.845,1133,3.295,1134,2.845,1135,3.645,1136,2.905,1137,3.295,1138,3.639,1139,1.361,1140,1.361,1141,1.2,1142,1.2,1143,1.2,1144,2.188,1145,1.361,1146,1.361,1147,1.616,1148,1.361,1149,1.971,1150,2.236,1151,0.984,1152,1.361,1153,1.361,1154,1.08,1155,3.639,1156,1.361,1157,1.361,1158,3.209,1159,1.361,1160,1.361,1161,1.971,1162,2.236,1163,2.236,1164,4.134,1165,3.639,1166,3.912,1167,2.236,1168,2.236,1169,2.236,1170,3.295,1171,3.639,1172,2.236,1173,1.361,1174,3.209,1175,2.236,1176,2.845,1177,1.2,1178,1.361,1179,1.361,1180,1.361,1181,1.361,1182,2.236,1183,2.236,1184,1.361,1185,1.361,1186,2.236,1187,1.361,1188,1.361,1189,2.236,1190,3.295,1191,1.361,1192,2.845,1193,1.361,1194,1.2,1195,1.361,1196,1.361,1197,2.845,1198,1.361,1199,1.2,1200,1.08,1201,1.361,1202,1.2,1203,1.361,1204,1.361,1205,1.361,1206,1.361,1207,1.361,1208,1.361,1209,1.361,1210,1.361,1211,1.361,1212,1.361,1213,1.361,1214,1.361,1215,1.361,1216,2.236,1217,1.361,1218,1.361,1219,1.361,1220,1.361,1221,1.361,1222,1.361,1223,1.361,1224,1.361,1225,1.361,1226,1.361,1227,1.361,1228,1.361,1229,1.2,1230,1.361,1231,1.361,1232,1.361,1233,1.361,1234,1.361,1235,1.361,1236,1.361,1237,1.361,1238,1.616,1239,1.361,1240,1.2,1241,1.971,1242,1.2,1243,1.2,1244,1.2,1245,1.361,1246,4.317,1247,1.361,1248,1.361,1249,1.361,1250,2.236,1251,1.361,1252,1.361,1253,1.361,1254,4.602,1255,1.361,1256,1.361,1257,1.361,1258,1.361,1259,1.361,1260,3.639,1261,1.361,1262,1.361,1263,3.639,1264,2.236,1265,1.971,1266,1.361,1267,1.361,1268,2.236,1269,1.361,1270,0.775,1271,1.2,1272,1.361,1273,1.361,1274,1.361,1275,2.845,1276,1.361,1277,1.361,1278,1.361,1279,2.236,1280,2.905,1281,1.361,1282,1.971,1283,1.2,1284,1.361,1285,1.361,1286,2.614,1287,1.361,1288,1.361,1289,1.361,1290,1.361,1291,1.361,1292,1.361,1293,1.361,1294,2.236,1295,1.361,1296,1.361,1297,1.361,1298,1.361,1299,2.236,1300,1.361,1301,1.361,1302,1.971,1303,1.361,1304,2.236,1305,2.845,1306,1.361,1307,1.361,1308,1.361,1309,1.361,1310,1.361,1311,1.361,1312,1.361,1313,1.361,1314,1.361,1315,1.361,1316,1.361,1317,1.2,1318,1.361,1319,1.361,1320,1.361,1321,1.361,1322,1.361,1323,1.931,1324,1.2,1325,1.08,1326,1.361,1327,1.08,1328,1.361,1329,1.361,1330,2.845,1331,3.639,1332,2.236,1333,1.361,1334,1.361,1335,1.361,1336,1.361,1337,1.361,1338,1.361,1339,1.361,1340,1.361,1341,1.361,1342,1.361,1343,1.361,1344,1.361,1345,1.361,1346,2.236,1347,2.845,1348,1.361,1349,1.361,1350,1.361,1351,3.295,1352,2.509,1353,1.361,1354,1.361,1355,1.361,1356,2.236,1357,1.08,1358,1.361,1359,1.361,1360,1.361,1361,1.361,1362,1.361,1363,1.971,1364,1.361,1365,1.361,1366,1.361,1367,1.361,1368,1.361,1369,1.361,1370,1.361,1371,1.361,1372,1.361,1373,1.08,1374,1.361,1375,1.361,1376,1.361,1377,1.361,1378,1.361,1379,0.984,1380,1.361,1381,1.361,1382,1.361,1383,1.89,1384,1.361,1385,2.845,1386,2.236,1387,3.639,1388,1.08,1389,1.361,1390,1.361,1391,3.295,1392,1.361,1393,1.361,1394,1.361,1395,1.361,1396,1.361,1397,1.361,1398,1.361,1399,0.835,1400,1.361,1401,1.361,1402,1.361,1403,1.361,1404,1.361,1405,1.361,1406,2.236,1407,1.361,1408,1.361,1409,1.361,1410,1.361,1411,1.361,1412,1.2,1413,1.2,1414,1.361,1415,0.904,1416,1.361,1417,1.08,1418,1.361,1419,1.2,1420,1.361,1421,1.361,1422,1.361,1423,1.971,1424,1.361,1425,1.361,1426,1.361,1427,2.845,1428,1.361,1429,1.361,1430,1.361,1431,1.361,1432,1.361,1433,1.361,1434,1.361,1435,3.912,1436,3.912,1437,1.616,1438,1.361,1439,1.361,1440,2.236,1441,2.236,1442,1.361,1443,1.361,1444,2.236,1445,1.361,1446,2.236,1447,3.912,1448,1.774,1449,1.361,1450,2.236,1451,2.236,1452,1.361,1453,2.236,1454,1.971,1455,2.236,1456,1.774,1457,2.236,1458,1.08,1459,1.361,1460,1.361,1461,1.361,1462,1.361,1463,1.361,1464,1.361,1465,1.361,1466,1.361,1467,2.236,1468,1.971,1469,1.361,1470,1.2,1471,1.361,1472,1.361,1473,2.236,1474,1.361,1475,1.361,1476,1.361,1477,2.236,1478,1.361,1479,1.2,1480,1.361,1481,2.845,1482,1.361,1483,1.361,1484,1.361,1485,1.361,1486,2.236,1487,1.361,1488,1.361,1489,1.361,1490,1.361,1491,1.361,1492,2.236,1493,2.236,1494,2.236,1495,2.236,1496,2.236,1497,1.774,1498,1.361,1499,1.361,1500,1.361,1501,1.361,1502,1.361,1503,2.236,1504,1.361,1505,2.236,1506,1.361,1507,2.845,1508,1.361,1509,1.361,1510,1.361,1511,1.361,1512,1.361,1513,1.361,1514,1.361,1515,0.835,1516,1.361,1517,3.295,1518,1.361,1519,1.2,1520,1.361,1521,1.361,1522,1.361,1523,1.2,1524,1.361,1525,1.361,1526,1.361,1527,1.361,1528,1.361,1529,2.236,1530,1.361,1531,1.361,1532,1.361,1533,1.361,1534,1.361,1535,1.361,1536,1.361,1537,1.361,1538,1.361,1539,1.361,1540,1.361,1541,1.08,1542,1.361]],["title/interfaces/FirestoreMessageData.html",[0,0.353,744,1.795]],["body/interfaces/FirestoreMessageData.html",[0,0.683,2,1.563,3,0.276,4,0.276,5,0.236,10,1.137,16,0.276,17,0.667,18,0.541,19,2.149,20,2.331,22,1.132,23,0.372,24,0.025,56,0.438,67,0.541,78,1.213,202,1.746,242,0.02,243,0.02,278,1.775,364,1.515,603,2.197,642,1.377,707,2.171,708,2.717,709,2.511,710,3.031,711,3.037,712,2.819,713,3.392,714,2.819,715,2.636,716,3.149,717,3.037,718,1.791,719,2.452,720,2.957,721,2.636,722,2.957,723,2.331,724,2.511,725,2.957,726,2.717,727,2.957,728,2.717,729,2.957,730,2.957,731,2.511,732,2.511,733,2.957,734,2.511,735,2.717,736,2.957,737,2.331,738,2.957,739,1.791,740,2.466,741,2.511,742,2.933,743,2.149,744,3.392,745,3.577,746,2.294,747,3.286,748,3.286,749,3.577,750,3.577,751,2.027,752,2.511,753,2.957,754,2.511,755,2.027,756,2.511,757,3.577,758,2.511]],["title/components/FooterComponent.html",[26,0.075,516,0.713]],["body/components/FooterComponent.html",[3,0.27,4,0.27,5,0.231,7,0.896,14,0.629,24,0.025,25,0.706,26,0.134,32,0.53,50,0.911,51,0.735,56,0.31,59,0.579,60,0.706,65,1.048,66,0.891,67,0.534,68,0.831,69,0.647,70,0.831,71,0.831,75,0.579,76,0.975,79,0.647,88,0.735,92,0.629,104,0.483,187,0.767,242,0.02,243,0.02,244,0.911,245,1.19,246,1.113,248,0.975,249,1.113,256,1.113,486,1.113,487,1.271,488,1.112,489,1.113,490,1.525,491,1.113,492,1.625,493,1.113,494,0.975,495,1.113,496,0.975,497,0.975,498,1.113,499,1.042,500,1.113,501,0.975,502,0.975,503,1.113,504,0.975,505,0.735,506,1.357,507,0.975,508,1.113,509,0.911,510,0.85,511,1.357,512,1.042,513,0.911,514,0.975,515,1.113,516,1.337,517,1.113,518,0.975,519,0.975,520,1.113,521,0.911,522,0.975,523,1.357,524,0.975,525,1.113,526,1.042,527,1.113,528,0.911,529,1.042,530,1.042,531,0.975,532,0.975,533,0.975,534,1.113,535,0.975,536,0.975,537,1.113,538,0.975,539,1.113,540,0.975,541,0.911,542,0.975,543,0.85,544,1.113,545,1.042,546,1.113,547,0.975,548,0.911,549,0.975,550,1.113,551,0.975,552,1.042,553,1.113,554,0.911,555,0.975,556,0.911,557,1.113,558,1.113,562,5.269,572,1.63,1543,4.003,1544,4.883,1545,5.759,1546,3.529,1547,5.759,1548,4.305,1549,4.883]],["title/components/HeaderComponent.html",[26,0.075,518,0.713]],["body/components/HeaderComponent.html",[3,0.216,4,0.216,5,0.185,7,0.809,14,0.504,16,0.216,17,0.512,18,0.351,23,0.286,24,0.025,25,0.731,26,0.121,27,1.843,30,1.322,32,0.425,33,1.082,34,0.59,50,0.731,51,0.59,56,0.249,59,0.464,60,0.614,65,1.037,66,0.881,67,0.464,68,0.722,69,0.67,70,0.722,71,0.722,73,1.034,75,0.464,76,0.782,77,1.18,79,0.63,88,0.59,92,0.504,99,1.522,104,0.388,106,0.94,107,0.59,118,1.232,129,1.502,168,3.437,187,0.667,204,1.968,242,0.017,243,0.017,244,0.731,245,1.034,246,0.892,247,1.227,248,0.782,249,0.892,256,0.892,259,1.18,264,1.462,268,0.952,276,1.034,296,1.341,297,1.429,342,1.83,346,1.936,349,1.307,353,2.106,355,1.771,358,1.341,359,2.201,360,1.843,361,1.728,362,1.933,363,1.488,364,1.238,367,1.843,368,1.307,369,2.201,370,1.843,371,2.356,372,2.505,373,1.971,374,2.507,376,1.152,377,2.244,378,1.817,380,1.936,381,1.394,383,1.968,384,1.394,385,1.394,386,2.142,387,1.394,388,1.622,389,1.394,390,1.394,391,1.394,392,1.307,402,1.887,405,2.103,406,1.704,407,2.065,408,2.065,411,2.605,412,2.132,413,1.488,414,1.728,429,2.204,433,1.704,434,1.843,435,1.591,439,1.83,446,2.831,447,2.103,448,1.83,449,1.488,452,1.83,464,2.204,472,1.83,473,1.968,480,2.418,481,1.488,486,0.892,487,1.105,488,0.966,489,0.892,490,1.406,491,0.892,492,1.555,493,0.892,494,0.782,495,0.892,496,0.782,497,0.782,498,0.892,499,0.836,500,0.892,501,0.782,502,0.782,503,0.892,504,0.782,505,0.59,506,1.18,507,0.782,508,0.892,509,0.731,510,0.682,511,1.18,512,0.836,513,0.731,514,0.782,515,0.892,516,0.782,517,0.892,518,1.232,519,0.782,520,0.892,521,0.731,522,0.782,523,1.18,524,0.782,525,0.892,526,0.836,527,0.892,528,0.731,529,0.836,530,0.836,531,0.782,532,0.782,533,0.782,534,0.892,535,0.782,536,0.782,537,0.892,538,0.782,539,0.892,540,0.782,541,0.731,542,0.782,543,0.682,544,0.892,545,0.836,546,0.892,547,0.782,548,0.731,549,0.782,550,0.892,551,0.782,552,0.836,553,0.892,554,0.731,555,0.782,556,0.731,557,0.892,558,0.892,570,3.359,572,1.307,603,1.227,630,2.678,642,1.771,695,3.229,696,2.321,703,3.157,831,3.742,857,2.418,859,3.211,871,3.211,872,3.211,873,3.211,874,3.211,969,2.819,1550,3.211,1551,4.244,1552,5.608,1553,5.006,1554,5.608,1555,5.967,1556,4.244,1557,5.608,1558,2.831,1559,5.006,1560,3.787,1561,3.787,1562,3.787,1563,2.321,1564,3.787,1565,5.006,1566,3.787,1567,3.787,1568,5.006,1569,3.367,1570,3.211,1571,4.244,1572,3.656,1573,5.967,1574,3.787,1575,2.547,1576,3.787,1577,2.132,1578,2.831,1579,5.26,1580,5.006,1581,3.787,1582,5.006,1583,3.787,1584,5.006,1585,5.006,1586,3.787,1587,3.787,1588,3.787,1589,3.787,1590,3.787,1591,3.787,1592,3.787]],["title/components/ImprintComponent.html",[26,0.075,519,0.713]],["body/components/ImprintComponent.html",[3,0.252,4,0.252,5,0.216,7,0.87,14,0.589,16,0.252,18,0.41,23,0.252,24,0.025,25,0.775,26,0.13,30,1.422,32,0.496,34,0.688,50,0.853,51,0.688,56,0.29,59,0.542,60,0.678,65,1.045,66,0.888,67,0.513,68,0.798,69,0.621,70,0.798,71,0.798,75,0.542,76,0.913,77,1.303,79,0.678,88,0.688,92,0.589,104,0.452,106,1.012,107,0.688,118,1.306,187,0.737,242,0.019,243,0.019,244,0.853,245,1.142,246,1.041,248,0.913,249,1.041,256,1.041,259,1.303,264,1.422,268,1.111,276,1.142,486,1.041,487,1.221,488,1.067,489,1.041,490,1.49,491,1.041,492,1.605,493,1.041,494,0.913,495,1.041,496,0.913,497,0.913,498,1.041,499,0.976,500,1.041,501,0.913,502,0.913,503,1.041,504,0.913,505,0.688,506,1.303,507,0.913,508,1.041,509,0.853,510,0.796,511,1.303,512,0.976,513,0.853,514,0.913,515,1.041,516,1.246,517,1.041,518,1.246,519,1.306,520,1.041,521,0.853,522,0.913,523,1.303,524,0.913,525,1.041,526,0.976,527,1.041,528,0.853,529,0.976,530,0.976,531,0.913,532,0.913,533,0.913,534,1.041,535,0.913,536,0.913,537,1.041,538,0.913,539,1.041,540,0.913,541,0.853,542,0.913,543,0.796,544,1.041,545,0.976,546,1.041,547,0.913,548,0.853,549,0.913,550,1.041,551,0.913,552,0.976,553,1.041,554,0.853,555,0.913,556,0.853,557,1.041,558,1.041,575,2.3,576,2.3,691,2.671,692,2.671,1174,4.133,1546,3.388,1548,4.133,1563,2.708,1593,3.747,1594,5.529,1595,5.529,1596,5.529,1597,5.36,1598,3.747,1599,5.63,1600,4.42,1601,4.42,1602,4.42,1603,3.747,1604,3.747,1605,4.687,1606,4.687,1607,5.529,1608,5.529,1609,4.687,1610,4.687,1611,4.687,1612,4.687,1613,4.687,1614,4.687,1615,4.687,1616,4.687,1617,5.529,1618,4.42,1619,5.529,1620,5.529,1621,5.529,1622,4.42]],["title/components/InnerChannelComponent.html",[26,0.075,521,0.666]],["body/components/InnerChannelComponent.html",[3,0.137,4,0.137,5,0.117,7,0.965,10,0.565,11,1.565,14,0.799,16,0.137,17,0.371,18,0.528,19,1.333,22,1.046,23,0.37,24,0.026,25,0.718,26,0.094,28,1.63,29,1.963,30,1.028,32,0.269,33,0.842,34,0.374,39,2.347,42,0.828,46,2.096,47,1.08,48,2.357,49,1.008,50,0.463,51,0.913,53,1.793,56,0.157,59,0.718,60,0.867,65,1.005,66,0.854,67,0.509,68,0.522,69,0.586,70,0.522,71,0.522,73,0.748,75,0.294,76,0.496,77,0.853,78,1.221,79,0.763,81,2.039,84,1.63,88,0.374,91,1.582,92,0.695,97,1.885,99,1.586,104,0.669,106,1.006,107,0.757,109,1.714,110,1.08,115,1.63,116,2.402,118,1.004,129,1.483,151,2.219,152,2.736,158,0.73,180,1.525,187,0.647,200,2.039,202,1.302,211,2.039,215,1.75,223,1.351,233,2.707,241,2.736,242,0.013,243,0.013,244,0.463,245,1.004,246,0.565,247,0.777,248,0.496,249,0.565,256,0.565,259,0.853,264,1.576,268,1.431,274,1.75,276,1.3,278,1.101,284,2.473,290,2.039,291,2.707,293,1.885,296,1.469,297,1.565,299,1.885,302,1.159,321,1.47,325,1.668,334,2.707,346,1.25,349,0.828,353,1.173,355,1.673,357,1.522,358,1.607,359,2.173,360,2.019,361,1.893,362,1.899,363,1.714,364,0.963,365,1.249,366,1.351,367,2.158,368,1.801,369,2.071,370,2.344,371,2.674,372,2.155,373,2.529,374,2.042,376,0.73,377,1.893,378,1.69,379,2.898,380,0.828,381,0.883,383,2.357,384,2.019,385,2.019,386,1.25,387,1.333,388,0.777,389,1.606,390,0.883,391,2.019,392,1.506,393,2.191,394,2.191,395,2.714,396,2.714,397,2.714,398,2.191,399,2.714,400,2.191,401,2.714,402,1.101,403,2.042,407,1.606,408,1.606,413,0.943,414,1.25,416,2.219,418,1.98,427,1.008,428,1.008,429,2.155,430,2.238,431,1.351,433,1.08,437,0.828,447,2.042,453,2.27,454,2.034,455,2.034,464,2.155,481,0.943,486,0.565,487,0.799,488,0.699,489,0.565,490,1.145,491,0.565,492,1.381,493,0.565,494,0.496,495,0.565,496,0.496,497,0.496,498,0.565,499,0.53,500,0.565,501,1.004,502,0.496,503,0.565,504,0.496,505,0.374,506,0.853,507,0.496,508,0.565,509,0.463,510,0.432,511,0.853,512,0.53,513,0.699,514,1.239,515,0.565,516,0.496,517,0.565,518,0.496,519,0.496,520,0.565,521,0.938,522,1.211,523,0.853,524,0.496,525,0.565,526,0.53,527,0.565,528,0.463,529,0.53,530,0.53,531,0.496,532,0.496,533,0.496,534,0.565,535,0.496,536,0.496,537,0.565,538,0.496,539,0.565,540,0.496,541,0.463,542,0.496,543,0.432,544,0.565,545,0.53,546,0.565,547,0.496,548,0.463,549,0.496,550,0.565,551,0.496,552,0.53,553,0.565,554,0.463,555,0.901,556,0.842,557,0.565,558,0.565,599,3.261,603,1.173,625,2.304,635,1.885,640,2.039,642,1.387,649,2.186,656,3.07,675,1.08,676,1.833,695,1.885,699,2.714,717,2.27,743,2.158,760,1.793,769,3.698,770,3.698,776,1.423,790,2.186,791,2.348,796,2.436,803,3.268,816,2.034,823,3.07,829,2.034,832,2.854,887,1.793,897,3.698,905,4.12,906,2.436,980,3.07,983,1.69,984,2.107,985,2.456,986,2.034,987,2.034,988,2.034,989,2.034,998,1.47,1006,2.934,1019,2.436,1029,2.707,1034,2.707,1035,2.707,1042,2.707,1050,2.436,1066,1.793,1087,2.039,1114,1.63,1123,1.793,1144,2.736,1240,2.707,1282,2.707,1323,1.63,1413,2.707,1415,2.039,1417,2.436,1468,1.793,1497,2.436,1541,2.436,1570,2.034,1579,4.12,1623,5.695,1624,5.022,1625,2.034,1626,4.362,1627,4.362,1628,3.622,1629,4.362,1630,3.698,1631,4.362,1632,4.362,1633,4.859,1634,3.622,1635,4.362,1636,3.622,1637,4.859,1638,3.622,1639,4.362,1640,2.399,1641,3.698,1642,4.12,1643,3.622,1644,2.219,1645,3.622,1646,2.707,1647,3.07,1648,2.399,1649,2.399,1650,4.859,1651,2.399,1652,3.622,1653,3.622,1654,2.399,1655,3.622,1656,4.859,1657,3.622,1658,3.622,1659,2.399,1660,2.399,1661,4.827,1662,2.399,1663,3.622,1664,2.399,1665,4.859,1666,2.399,1667,2.399,1668,3.622,1669,3.622,1670,3.622,1671,2.399,1672,3.622,1673,3.622,1674,3.622,1675,2.399,1676,2.436,1677,3.622,1678,3.622,1679,2.399,1680,2.399,1681,2.399,1682,3.07,1683,2.399,1684,3.622,1685,2.399,1686,3.622,1687,2.399,1688,3.622,1689,3.622,1690,2.399,1691,2.399,1692,2.034,1693,3.622,1694,3.622,1695,2.399,1696,3.268,1697,3.622,1698,2.399,1699,2.399,1700,2.399,1701,2.399,1702,2.399,1703,2.399,1704,2.034,1705,2.399,1706,2.399,1707,2.399,1708,2.399,1709,3.622,1710,2.399,1711,2.399,1712,3.632,1713,3.622,1714,2.399,1715,2.399,1716,2.399,1717,2.034,1718,2.399,1719,2.399,1720,2.399,1721,2.399,1722,2.399,1723,2.399,1724,2.399,1725,2.399,1726,2.399,1727,3.622,1728,5.216,1729,2.399,1730,2.399,1731,2.436,1732,3.622,1733,3.622,1734,3.622]],["title/components/IntroComponent.html",[26,0.075,524,0.713]],["body/components/IntroComponent.html",[3,0.261,4,0.261,5,0.224,7,0.884,14,0.61,16,0.261,18,0.425,23,0.261,24,0.025,25,0.751,26,0.133,30,1.445,32,0.514,33,1.183,34,0.713,50,0.884,51,0.713,56,0.3,59,0.561,60,0.693,65,1.047,66,0.889,67,0.524,68,0.815,69,0.635,70,0.815,71,0.815,75,0.561,76,0.946,77,1.332,79,0.688,88,0.713,92,0.61,104,0.469,106,0.947,107,0.713,118,1.322,176,1.923,187,0.753,242,0.02,243,0.02,244,0.884,245,1.167,246,1.079,248,0.946,249,1.079,256,1.079,259,1.332,264,1.332,268,1.151,276,0.946,486,1.079,487,1.248,488,1.091,489,1.079,490,1.509,491,1.079,492,1.616,493,1.079,494,0.946,495,1.079,496,0.946,497,0.946,498,1.079,499,1.011,500,1.079,501,0.946,502,0.946,503,1.079,504,0.946,505,0.713,506,1.332,507,0.946,508,1.079,509,0.884,510,0.824,511,1.332,512,1.011,513,0.884,514,0.946,515,1.079,516,0.946,517,1.079,518,0.946,519,0.946,520,1.079,521,0.884,522,0.946,523,1.332,524,1.322,525,1.079,526,1.011,527,1.079,528,0.884,529,1.011,530,1.011,531,0.946,532,0.946,533,0.946,534,1.079,535,0.946,536,0.946,537,1.079,538,0.946,539,1.079,540,0.946,541,0.884,542,0.946,543,0.824,544,1.079,545,1.011,546,1.079,547,0.946,548,0.884,549,0.946,550,1.079,551,0.946,552,1.011,553,1.079,554,0.884,555,0.946,556,0.884,557,1.079,558,1.079,570,3.182,572,1.58,630,2.814,1546,3.463,1558,3.422,1563,2.805,1735,3.881,1736,5.651,1737,5.651,1738,5.651,1739,4.578,1740,4.578,1741,3.422,1742,4.578]],["title/interfaces/Member.html",[0,0.353,187,0.46]],["body/interfaces/Member.html",[0,0.554,2,1.754,3,0.309,4,0.309,5,0.264,16,0.309,17,0.64,18,0.579,22,1.116,23,0.387,24,0.025,56,0.355,78,1.701,79,0.76,187,0.832,242,0.022,243,0.022,619,2.843,740,2.66,1743,4.591]],["title/components/MemberListDialogComponent.html",[26,0.075,528,0.666]],["body/components/MemberListDialogComponent.html",[0,0.368,3,0.136,4,0.136,5,0.116,7,0.926,9,1.07,10,1.14,11,1.887,12,2.203,13,3.673,14,0.917,15,3.582,16,0.136,17,0.368,18,0.619,19,1.781,22,0.675,23,0.367,24,0.026,25,0.696,26,0.112,27,1.597,28,2.338,29,2.692,30,1.022,31,0.934,32,0.267,33,0.837,34,0.37,37,2.258,38,1.237,40,2.64,41,2.64,42,0.821,48,2.468,49,0.999,50,0.459,51,0.675,54,2.384,55,1.07,56,0.236,59,0.696,60,0.779,64,1.737,65,1.004,66,0.854,67,0.449,68,0.519,69,0.487,70,0.519,71,0.519,72,1.737,73,0.743,74,2.096,75,0.291,76,0.491,77,0.848,78,1.306,79,0.637,81,3.291,82,2.419,84,2.63,88,0.37,92,0.943,102,1.872,103,2.025,104,0.624,105,3.243,106,1.076,107,0.753,109,2.148,110,2.459,112,1.149,114,2.64,115,1.618,116,1.901,117,1.618,118,0.999,119,1.237,120,2.204,121,2.204,124,2.204,125,2.703,129,1.377,131,3.243,132,1.777,141,1.777,158,0.723,180,0.637,187,0.935,191,2.096,194,1.618,196,2.688,199,1.339,202,1.296,203,2.012,204,0.934,212,1.777,215,1.737,228,2.517,229,3.616,230,2.337,231,2.659,241,2.723,242,0.013,243,0.013,244,0.459,245,0.743,246,0.56,247,0.77,248,0.491,249,0.56,252,1.237,256,0.56,259,0.848,260,2.688,264,1.558,268,1.216,269,3.049,276,1.207,295,4.565,296,0.637,297,0.679,302,1.737,321,1.457,325,0.723,328,1.339,334,2.688,338,1.872,346,1.242,349,0.821,350,2.025,351,2.204,352,1.599,353,1.839,354,1.149,355,1.862,357,1.511,358,1.603,359,2.105,360,1.781,361,1.67,362,1.683,363,1.414,364,1.068,365,1.872,366,1.339,367,2.152,368,2.139,369,2.294,370,2.339,371,2.669,372,1.414,373,1.872,374,1.511,375,1.872,376,1.58,377,2.018,378,1.683,379,2.096,380,1.498,381,0.875,382,1.339,383,2.297,384,1.324,385,1.324,386,2.193,387,2.281,388,1.567,389,0.875,390,0.875,391,1.597,392,1.67,393,1.511,394,1.511,395,1.872,396,1.872,397,1.872,398,1.511,399,1.872,400,1.511,401,1.872,402,1.58,403,0.999,404,2.603,405,2.032,406,1.07,407,1.324,408,1.324,409,2.337,413,1.901,414,1.498,415,2.688,418,1.77,424,2.204,425,1.339,426,1.457,427,2.384,428,2.032,429,1.901,430,2.148,432,1.872,433,1.618,434,1.324,435,0.999,437,0.821,439,1.149,447,0.999,448,1.149,449,1.414,450,2.419,452,1.149,453,1.872,462,1.599,463,1.599,464,2.042,466,2.204,467,1.599,468,1.618,469,1.237,470,1.237,471,1.599,472,1.737,473,1.414,481,1.414,482,1.149,485,1.237,486,0.56,487,0.794,488,0.694,489,0.56,490,1.14,491,0.56,492,1.377,493,0.56,494,0.491,495,0.56,496,0.491,497,0.491,498,0.56,499,0.525,500,0.56,501,0.491,502,0.491,503,0.56,504,0.491,505,0.884,506,0.848,507,0.491,508,0.56,509,0.459,510,0.428,511,0.848,512,0.525,513,0.459,514,0.491,515,0.56,516,0.491,517,0.56,518,0.491,519,0.491,520,0.56,521,0.459,522,0.491,523,0.848,524,0.491,525,0.56,526,0.525,527,0.56,528,0.934,529,0.525,530,1.206,531,0.491,532,0.491,533,0.491,534,0.56,535,0.491,536,0.491,537,0.56,538,0.491,539,0.56,540,0.491,541,0.459,542,0.491,543,0.428,544,0.56,545,0.525,546,0.56,547,0.491,548,0.459,549,0.491,550,0.56,551,0.491,552,0.525,553,0.56,554,0.459,555,0.491,556,0.459,557,0.56,558,0.56,646,2.032,665,1.887,700,1.872,739,1.027,743,1.324,763,2.954,776,1.705,779,2.419,783,1.511,784,1.511,785,2.688,786,2.204,791,1.737,799,2.688,805,2.015,806,3.049,857,1.149,869,2.419,906,2.419,931,1.777,983,1.77,984,1.737,992,1.457,993,1.599,994,2.443,996,2.015,997,2.015,998,1.457,1110,2.723,1114,1.618,1144,3.077,1147,2.204,1270,2.64,1323,1.618,1415,3.077,1448,2.419,1515,2.517,1556,3.049,1577,2.025,1644,2.204,1744,4.47,1745,4.47,1746,4.101,1747,3.597,1748,3.597,1749,4.101,1750,3.678,1751,3.678,1752,3.678,1753,2.377,1754,3.676,1755,2.419,1756,2.419,1757,2.377,1758,3.049,1759,2.377,1760,3.049,1761,2.377,1762,4.633,1763,2.377,1764,3.049,1765,3.049,1766,2.377,1767,2.688,1768,2.377,1769,3.049,1770,2.377,1771,2.377,1772,2.688,1773,2.377,1774,2.377,1775,2.688,1776,3.049,1777,3.049,1778,2.377,1779,2.377,1780,3.049,1781,2.377,1782,3.049,1783,2.377,1784,2.419,1785,2.377,1786,2.015,1787,1.777,1788,1.599,1789,2.015,1790,1.149,1791,2.015,1792,1.777,1793,2.015,1794,2.015,1795,1.457,1796,1.777,1797,1.777,1798,2.015,1799,2.015,1800,2.015,1801,2.015,1802,2.688,1803,1.777,1804,1.599,1805,2.015,1806,2.015,1807,2.015,1808,2.015,1809,2.015,1810,2.377,1811,2.377,1812,2.377,1813,2.377,1814,2.377,1815,2.015,1816,2.377,1817,2.377,1818,2.377,1819,2.377]],["title/interfaces/MemberListDialogData.html",[0,0.353,1754,2.32]],["body/interfaces/MemberListDialogData.html",[0,0.581,2,1.257,3,0.222,4,0.222,5,0.19,7,0.968,9,1.746,10,0.914,11,1.915,12,2.302,13,3.778,14,0.92,15,3.691,16,0.222,17,0.521,18,0.633,19,2.302,22,0.938,23,0.291,24,0.026,25,0.787,26,0.123,27,2.089,28,2.814,29,2.814,30,1.199,31,1.525,32,0.436,33,0.982,34,0.604,37,2.647,38,2.019,40,2.742,41,2.742,42,1.34,48,2.57,49,1.63,51,0.604,54,2.384,55,1.746,56,0.334,59,0.766,60,0.787,64,1.875,65,0.56,66,0.476,67,0.36,68,0.56,69,0.571,70,0.56,71,0.56,72,1.875,73,0.802,74,1.875,75,0.476,77,0.914,78,1.426,79,0.436,81,3.391,82,2.61,84,2.289,92,0.855,102,2.019,103,2.864,104,0.64,105,2.901,106,1.076,107,0.792,109,1.999,110,2.289,112,1.875,114,2.91,115,1.746,117,1.746,118,0.802,119,2.019,120,3.117,121,3.117,124,3.117,125,3.254,131,4.242,132,2.901,141,2.901,158,1.18,180,1.04,187,0.936,191,1.875,194,1.746,196,2.901,199,2.185,202,1.363,203,2.089,212,2.901,215,1.875,228,2.019,229,4.503,230,2.91,231,3.478,241,2.185,242,0.018,243,0.018,295,4.589,321,2.378,325,1.18,328,2.185,338,2.019,358,1.04,432,2.019,450,2.61,468,1.746,505,0.884,528,0.749,530,0.857,646,2.137,665,2.215,743,1.429,763,2.953,776,1.525,779,2.61,783,1.63,784,1.63,785,2.901,786,2.378,791,1.875,799,2.901,931,2.901,983,1.838,1110,2.864,1114,1.746,1144,3.195,1147,2.378,1270,2.742,1323,1.746,1415,3.195,1448,2.61,1515,2.647,1644,2.378,1744,2.61,1745,2.61,1746,3.29,1749,3.29,1750,3.29,1751,3.29,1752,3.29,1754,4.052,1755,2.61,1756,2.61,1758,3.29,1760,3.29,1762,4.811,1764,3.29,1765,3.29,1767,2.901,1769,3.29,1772,2.901,1775,2.901,1776,3.29,1777,3.29,1780,3.29,1782,3.29,1784,2.61,1788,2.61,1789,3.29,1790,1.875,1791,3.29,1792,2.901,1793,3.29,1794,3.29,1795,2.378,1796,2.901,1797,2.901,1798,3.29,1799,3.29,1800,3.29,1801,3.29,1802,3.803,1803,2.901,1804,2.61,1805,3.29,1806,3.29,1807,3.29,1808,3.29,1809,3.29]],["title/components/MemberSectionDialogComponent.html",[26,0.075,531,0.713]],["body/components/MemberSectionDialogComponent.html",[3,0.199,4,0.199,5,0.17,7,0.995,9,1.567,10,1.267,11,1.951,14,0.94,16,0.199,17,0.484,18,0.439,23,0.363,24,0.025,25,0.739,26,0.116,28,2.129,29,2.419,31,1.368,32,0.391,33,1.037,34,0.542,35,1.979,36,1.059,40,3.005,41,1.682,42,1.202,50,0.672,51,0.939,56,0.229,59,0.58,60,0.58,65,1.032,66,0.877,67,0.439,68,0.683,69,0.531,70,0.683,71,0.683,72,2.286,73,0.977,74,2.597,75,0.427,76,0.719,79,0.715,82,3.183,88,0.542,91,1.189,92,0.829,104,0.356,106,0.967,107,0.898,109,2.445,110,2.714,112,2.286,117,2.129,125,1.812,129,1.115,187,0.936,189,3.183,191,2.786,203,2.123,204,1.368,226,1.988,228,3.001,230,2.286,242,0.016,243,0.016,244,0.672,245,0.977,246,0.82,247,1.128,248,0.719,249,0.82,256,0.82,259,1.115,261,4.012,264,1.5,268,1.189,276,0.977,284,2.267,290,2.664,296,0.933,297,0.994,302,1.682,349,1.202,350,2.664,351,2.9,352,2.342,353,1.741,355,1.351,357,1.988,358,1.44,359,2.082,360,1.282,361,1.202,362,1.128,364,0.769,367,1.742,368,1.634,369,2.082,370,1.979,371,2.258,376,1.634,377,1.634,378,1.128,380,1.202,384,1.282,385,1.282,386,2.197,387,2.29,388,1.128,391,1.282,392,1.202,402,1.634,403,1.988,404,2.614,405,2.721,406,1.567,407,1.742,408,1.742,413,1.86,414,1.202,418,1.128,424,2.9,426,2.134,427,1.463,428,1.463,430,2.267,433,1.567,434,1.282,435,1.463,449,1.86,462,2.342,463,2.342,467,2.342,471,2.342,473,1.368,486,0.82,487,1.045,488,0.913,489,0.82,490,1.359,491,0.82,492,1.526,493,0.82,494,0.719,495,0.82,496,0.719,497,0.719,498,0.82,499,0.769,500,0.82,501,0.719,502,0.719,503,0.82,504,0.719,505,0.542,506,1.115,507,0.719,508,0.82,509,0.672,510,0.627,511,1.115,512,0.769,513,0.672,514,0.719,515,0.82,516,0.719,517,0.82,518,0.719,519,0.719,520,0.82,521,0.672,522,0.719,523,1.115,524,0.719,525,0.82,526,0.769,527,0.82,528,0.672,529,0.769,530,0.769,531,1.285,532,1.457,533,0.719,534,0.82,535,0.719,536,0.719,537,0.82,538,0.719,539,0.82,540,0.719,541,0.672,542,0.719,543,0.627,544,0.82,545,0.769,546,0.82,547,0.719,548,0.672,549,0.719,550,0.82,551,0.719,552,0.769,553,0.82,554,0.672,555,0.719,556,0.672,557,0.82,558,0.82,653,2.664,665,1.856,700,2.462,743,1.742,764,4.889,774,2.342,776,2.267,857,1.682,906,3.183,907,4.057,983,1.533,984,1.682,998,2.134,1017,2.462,1019,3.183,1144,2.664,1238,2.9,1302,3.537,1399,2.462,1415,3.247,1417,3.183,1523,3.537,1712,4.018,1744,4.356,1745,4.356,1772,4.311,1803,3.537,1820,4.732,1821,4.732,1822,4.732,1823,4.311,1824,4.889,1825,3.482,1826,4.012,1827,3.482,1828,3.482,1829,3.482,1830,2.952,1831,2.952,1832,3.482]],["title/interfaces/Message.html",[0,0.353,718,0.985]],["body/interfaces/Message.html",[0,0.658,2,1.375,3,0.242,4,0.242,5,0.207,16,0.242,17,0.606,18,0.673,19,2.368,20,3.01,22,1.136,23,0.412,24,0.025,56,0.422,67,0.394,78,1.566,202,1.444,242,0.019,243,0.019,278,1.291,364,1.474,603,2.297,642,1.212,707,1.91,708,2.39,709,2.209,710,3.175,711,2.805,712,2.604,713,3.475,714,2.604,715,2.761,716,3.226,717,2.805,718,1.691,719,2.618,720,2.601,721,2.702,722,2.601,723,3.01,724,3.243,725,3.819,726,3.508,727,3.819,728,3.508,729,3.819,730,3.819,731,3.243,732,3.243,733,3.819,734,3.243,735,3.508,736,3.819,737,3.01,738,3.819,739,1.691,740,2.328,741,2.209,742,2.804,743,1.985,744,2.805,745,2.601,746,1.668,747,2.39,748,2.39,749,2.601,750,2.601,751,1.783,752,2.209,753,2.601,754,2.209,755,1.783,756,2.209,757,3.303,758,2.209]],["title/interfaces/MessageContent.html",[0,0.353,719,1.449]],["body/interfaces/MessageContent.html",[0,0.682,2,1.552,3,0.274,4,0.274,5,0.234,16,0.274,17,0.64,18,0.628,19,2.14,20,2.315,22,1.133,23,0.371,24,0.025,56,0.437,67,0.444,78,1.204,202,1.557,242,0.02,243,0.02,278,1.457,364,1.436,603,2.194,642,1.785,707,2.156,708,2.698,709,2.493,710,3.022,711,3.024,712,2.807,713,3.384,714,2.807,715,2.628,716,3.142,718,1.659,719,2.628,720,2.936,721,2.628,722,2.936,723,2.315,724,2.493,725,2.936,726,2.698,727,2.936,728,2.698,729,2.936,730,2.936,731,2.493,732,2.493,733,2.936,734,2.493,735,2.698,736,2.936,737,2.315,738,2.936,739,1.933,740,2.662,741,3.255,742,3.084,743,2.394,744,3.024,745,2.936,746,1.883,747,2.698,748,2.698,749,2.936,750,2.936,751,2.013,752,2.493,753,2.936,754,2.493,755,2.013,756,2.493,757,3.561,758,2.493]],["title/interfaces/MessageContent-3.html",[0,0.295,719,1.212,792,1.501]],["body/interfaces/MessageContent-3.html",[0,0.269,2,0.518,3,0.221,4,0.091,5,0.189,7,0.379,10,0.377,11,1.503,12,1.939,14,0.35,16,0.191,17,0.269,18,0.397,21,0.98,22,1.058,23,0.263,24,0.026,25,0.708,26,0.057,27,1.996,28,1.506,29,1.506,32,0.18,33,0.507,34,0.249,35,0.968,36,0.486,37,1.368,38,0.832,39,1.183,42,0.552,46,1.232,47,0.719,48,1.315,49,0.672,51,0.844,54,1.629,55,0.719,56,0.173,58,0.98,59,0.76,60,0.708,64,1.873,65,0.231,66,0.196,67,0.148,68,0.231,69,0.624,70,0.231,71,0.231,73,0.33,75,0.196,78,1.363,79,0.547,81,1.48,83,2.183,84,0.719,85,1.768,88,0.938,90,2.983,91,1.612,92,0.446,96,2.898,97,1.368,99,1.988,100,2.136,104,0.696,106,1.145,107,0.409,108,2.502,115,2.287,117,0.719,118,0.33,127,0.98,129,1.085,130,0.98,140,0.98,149,0.98,153,0.98,158,1.601,171,0.9,176,0.672,180,1.802,186,2.607,188,1.195,189,1.075,191,0.772,194,0.719,195,1.965,199,1.48,200,1.48,202,1.234,203,1.696,206,1.368,211,1.48,215,0.772,224,0.98,226,1.104,227,1.195,231,0.98,232,2.183,242,0.019,243,0.009,248,0.33,252,1.742,266,1.368,271,1.075,272,0.98,274,1.27,276,0.801,278,0.799,280,0.98,284,1.81,287,0.98,290,0.9,292,2.051,293,1.742,296,0.428,299,1.742,306,2.051,311,1.768,315,1.629,320,1.075,325,1.915,338,0.832,346,1.59,355,0.955,358,0.704,364,1.197,376,0.486,390,0.589,402,0.799,418,0.851,431,1.48,432,2.017,434,0.589,437,0.552,449,1.033,466,1.611,468,1.506,480,0.772,482,1.27,488,0.309,505,0.409,510,0.876,513,0.507,543,0.473,556,0.646,572,0.907,603,1.647,616,1.195,619,0.672,623,2.881,625,2.278,629,1.768,630,1.629,632,1.768,634,2.74,640,1.48,642,1.675,646,1.406,649,2.439,665,1.155,675,1.506,676,2.334,691,1.617,692,0.772,697,1.075,707,1.506,709,1.368,710,3.171,711,0.832,712,0.772,713,2.229,714,1.873,715,1.406,716,1.873,718,1.928,719,1.104,721,1.104,723,2.069,724,2.821,731,0.832,732,0.832,734,0.832,737,0.772,739,1.719,740,2.457,741,2.017,742,2.739,743,2.16,746,1.315,755,1.629,756,1.368,776,1.033,783,1.104,784,1.104,787,0.9,790,1.506,791,0.772,792,0.832,793,1.965,796,1.075,801,1.768,802,1.075,810,2.881,832,1.742,846,1.075,864,2.544,866,4.153,868,1.075,869,1.768,875,1.195,877,4.171,883,2.251,892,3.492,907,1.075,923,1.611,928,1.768,941,2.502,945,1.611,948,2.898,949,1.075,952,1.075,953,2.251,957,1.965,967,0.832,971,2.376,981,1.195,983,1.388,992,0.98,999,1.075,1000,1.195,1001,1.075,1002,1.195,1003,2.837,1004,1.355,1005,2.837,1006,1.075,1007,2.228,1008,2.228,1009,1.355,1010,2.837,1011,2.228,1012,1.195,1013,1.195,1014,2.837,1015,1.965,1016,2.837,1017,1.742,1018,1.965,1019,1.075,1020,4.809,1021,3.905,1022,1.48,1023,1.195,1024,1.355,1025,1.355,1026,1.355,1027,1.355,1028,2.837,1029,1.195,1030,1.884,1031,1.355,1032,1.355,1033,1.965,1034,1.195,1035,1.195,1036,0.98,1037,1.355,1038,1.355,1039,1.355,1040,1.355,1041,4.053,1042,3.8,1043,1.355,1044,2.017,1045,2.228,1046,1.195,1047,1.355,1048,1.195,1049,1.355,1050,2.251,1051,1.355,1052,2.502,1053,2.228,1054,2.837,1055,2.228,1056,4.31,1057,2.228,1058,1.195,1059,1.355,1060,1.355,1061,2.502,1062,3.905,1063,2.837,1064,2.251,1065,1.355,1066,1.965,1067,1.355,1068,2.837,1069,2.837,1070,1.355,1071,3.286,1072,1.355,1073,1.355,1074,2.228,1075,1.965,1076,1.355,1077,1.355,1078,1.355,1079,1.355,1080,1.965,1081,1.355,1082,3.286,1083,3.286,1084,3.286,1085,1.355,1086,1.355,1087,1.48,1088,2.228,1089,1.355,1090,1.355,1091,2.607,1092,1.355,1093,2.607,1094,1.355,1095,2.837,1096,1.195,1097,1.355,1098,1.355,1099,1.355,1100,1.355,1101,4.31,1102,1.075,1103,2.228,1104,3.286,1105,2.837,1106,3.905,1107,1.355,1108,1.195,1109,2.228,1110,1.884,1111,2.228,1112,1.355,1113,1.355,1114,0.719,1115,1.355,1116,0.98,1117,1.768,1118,1.355,1119,2.228,1120,2.228,1121,1.355,1122,3.286,1123,1.195,1124,4.126,1125,1.355,1126,1.355,1127,3.286,1128,3.286,1129,4.126,1130,3.286,1131,2.837,1132,2.837,1133,3.286,1134,2.837,1135,3.638,1136,2.898,1137,3.286,1138,3.631,1139,1.355,1140,1.355,1141,1.195,1142,1.195,1143,1.195,1144,2.183,1145,1.355,1146,1.355,1147,1.611,1148,1.355,1149,1.965,1150,2.228,1151,0.98,1152,1.355,1153,1.355,1154,1.075,1155,3.631,1156,1.355,1157,1.355,1158,3.202,1159,1.355,1160,1.355,1161,1.965,1162,2.228,1163,2.228,1164,4.126,1165,3.631,1166,3.905,1167,2.228,1168,2.228,1169,2.228,1170,3.286,1171,3.631,1172,2.228,1173,1.355,1174,3.202,1175,2.228,1176,2.837,1177,1.195,1178,1.355,1179,1.355,1180,1.355,1181,1.355,1182,2.228,1183,2.228,1184,1.355,1185,1.355,1186,2.228,1187,1.355,1188,1.355,1189,2.228,1190,3.286,1191,1.355,1192,2.837,1193,1.355,1194,1.195,1195,1.355,1196,1.355,1197,2.837,1198,1.355,1199,1.195,1200,1.075,1201,1.355,1202,1.195,1203,1.355,1204,1.355,1205,1.355,1206,1.355,1207,1.355,1208,1.355,1209,1.355,1210,1.355,1211,1.355,1212,1.355,1213,1.355,1214,1.355,1215,1.355,1216,2.228,1217,1.355,1218,1.355,1219,1.355,1220,1.355,1221,1.355,1222,1.355,1223,1.355,1224,1.355,1225,1.355,1226,1.355,1227,1.355,1228,1.355,1229,1.195,1230,1.355,1231,1.355,1232,1.355,1233,1.355,1234,1.355,1235,1.355,1236,1.355,1237,1.355,1238,1.611,1239,1.355,1240,1.195,1241,1.965,1242,1.195,1243,1.195,1244,1.195,1245,1.355,1246,4.31,1247,1.355,1248,1.355,1249,1.355,1250,2.228,1251,1.355,1252,1.355,1253,1.355,1254,4.596,1255,1.355,1256,1.355,1257,1.355,1258,1.355,1259,1.355,1260,3.631,1261,1.355,1262,1.355,1263,3.631,1264,2.228,1265,1.965,1266,1.355,1267,1.355,1268,2.228,1269,1.355,1270,0.772,1271,1.195,1272,1.355,1273,1.355,1274,1.355,1275,2.837,1276,1.355,1277,1.355,1278,1.355,1279,2.228,1280,2.898,1281,1.355,1282,1.965,1283,1.195,1284,1.355,1285,1.355,1286,2.607,1287,1.355,1288,1.355,1289,1.355,1290,1.355,1291,1.355,1292,1.355,1293,1.355,1294,2.228,1295,1.355,1296,1.355,1297,1.355,1298,1.355,1299,2.228,1300,1.355,1301,1.355,1302,1.965,1303,1.355,1304,2.228,1305,2.837,1306,1.355,1307,1.355,1308,1.355,1309,1.355,1310,1.355,1311,1.355,1312,1.355,1313,1.355,1314,1.355,1315,1.355,1316,1.355,1317,1.195,1318,1.355,1319,1.355,1320,1.355,1321,1.355,1322,1.355,1323,1.927,1324,1.195,1325,1.075,1326,1.355,1327,1.075,1328,1.355,1329,1.355,1330,2.837,1331,3.631,1332,2.228,1333,1.355,1334,1.355,1335,1.355,1336,1.355,1337,1.355,1338,1.355,1339,1.355,1340,1.355,1341,1.355,1342,1.355,1343,1.355,1344,1.355,1345,1.355,1346,2.228,1347,2.837,1348,1.355,1349,1.355,1350,1.355,1351,3.286,1352,2.502,1353,1.355,1354,1.355,1355,1.355,1356,2.228,1357,1.075,1358,1.355,1359,1.355,1360,1.355,1361,1.355,1362,1.355,1363,1.965,1364,1.355,1365,1.355,1366,1.355,1367,1.355,1368,1.355,1369,1.355,1370,1.355,1371,1.355,1372,1.355,1373,1.075,1374,1.355,1375,1.355,1376,1.355,1377,1.355,1378,1.355,1379,0.98,1380,1.355,1381,1.355,1382,1.355,1383,1.884,1384,1.355,1385,2.837,1386,2.228,1387,3.631,1388,1.075,1389,1.355,1390,1.355,1391,3.286,1392,1.355,1393,1.355,1394,1.355,1395,1.355,1396,1.355,1397,1.355,1398,1.355,1399,0.832,1400,1.355,1401,1.355,1402,1.355,1403,1.355,1404,1.355,1405,1.355,1406,2.228,1407,1.355,1408,1.355,1409,1.355,1410,1.355,1411,1.355,1412,1.195,1413,1.195,1414,1.355,1415,0.9,1416,1.355,1417,1.075,1418,1.355,1419,1.195,1420,1.355,1421,1.355,1422,1.355,1423,1.965,1424,1.355,1425,1.355,1426,1.355,1427,2.837,1428,1.355,1429,1.355,1430,1.355,1431,1.355,1432,1.355,1433,1.355,1434,1.355,1435,3.905,1436,3.905,1437,1.611,1438,1.355,1439,1.355,1440,2.228,1441,2.228,1442,1.355,1443,1.355,1444,2.228,1445,1.355,1446,2.228,1447,3.905,1448,1.768,1449,1.355,1450,2.228,1451,2.228,1452,1.355,1453,2.228,1454,1.965,1455,2.228,1456,1.768,1457,2.228,1458,1.075,1459,1.355,1460,1.355,1461,1.355,1462,1.355,1463,1.355,1464,1.355,1465,1.355,1466,1.355,1467,2.228,1468,1.965,1469,1.355,1470,1.195,1471,1.355,1472,1.355,1473,2.228,1474,1.355,1475,1.355,1476,1.355,1477,2.228,1478,1.355,1479,1.195,1480,1.355,1481,2.837,1482,1.355,1483,1.355,1484,1.355,1485,1.355,1486,2.228,1487,1.355,1488,1.355,1489,1.355,1490,1.355,1491,1.355,1492,2.228,1493,2.228,1494,2.228,1495,2.228,1496,2.228,1497,1.768,1498,1.355,1499,1.355,1500,1.355,1501,1.355,1502,1.355,1503,2.228,1504,1.355,1505,2.228,1506,1.355,1507,2.837,1508,1.355,1509,1.355,1510,1.355,1511,1.355,1512,1.355,1513,1.355,1514,1.355,1515,0.832,1516,1.355,1517,3.286,1518,1.355,1519,1.195,1520,1.355,1521,1.355,1522,1.355,1523,1.195,1524,1.355,1525,1.355,1526,1.355,1527,1.355,1528,1.355,1529,2.228,1530,1.355,1531,1.355,1532,1.355,1533,1.355,1534,1.355,1535,1.355,1536,1.355,1537,1.355,1538,1.355,1539,1.355,1540,1.355,1541,1.075,1542,1.355]],["title/components/NewPasswortComponent.html",[26,0.075,533,0.713]],["body/components/NewPasswortComponent.html",[3,0.134,4,0.134,5,0.115,7,0.622,10,0.841,12,1.771,14,0.313,16,0.204,17,0.365,18,0.331,22,0.929,23,0.323,24,0.026,25,0.745,26,0.112,27,2.082,30,1.016,32,0.264,33,0.832,34,0.366,36,1.085,50,0.454,51,0.366,56,0.154,59,0.714,60,0.437,65,1.004,66,0.853,67,0.331,68,0.515,69,0.581,70,0.515,71,0.515,73,0.737,75,0.288,76,0.486,77,0.841,79,0.54,88,0.366,91,1.209,92,0.313,95,2.4,99,1.572,104,0.596,106,0.598,107,0.556,114,1.724,116,1.402,118,0.994,129,1.283,158,0.715,168,2.187,173,2.009,176,0.988,180,1.155,187,0.475,204,1.402,217,2.667,225,2.009,242,0.012,243,0.012,244,0.454,245,0.737,246,0.554,247,0.762,248,0.486,249,0.554,254,2.4,256,0.554,259,0.841,264,1.433,268,1.464,276,1.124,292,2.187,296,1.385,297,1.663,325,1.572,342,2.63,346,1.488,349,0.812,353,2.278,354,1.137,355,1.992,357,0.988,358,1.515,359,2.248,360,2.196,361,1.661,362,2.03,363,1.694,364,1.062,367,1.771,368,1.879,369,2.248,370,2.004,372,0.925,374,2.376,376,1.655,377,2.278,378,2.002,380,1.952,381,0.866,382,1.325,383,1.402,384,1.314,385,1.314,386,2.189,387,1.904,388,1.156,389,1.587,390,0.866,391,1.587,392,1.488,393,0.988,394,0.988,398,0.988,400,0.988,402,1.849,403,2.448,404,2.021,405,1.499,406,1.059,407,2.145,408,2.082,409,1.137,411,2.943,412,2.427,413,1.402,414,1.488,418,1.887,425,3.184,427,0.988,428,0.988,429,2.429,430,2.139,434,1.314,435,0.988,437,2.1,438,1.442,439,1.137,441,2.427,442,2.187,443,1.442,444,1.442,445,1.442,447,2.173,448,1.137,452,1.137,457,1.442,464,2.593,470,1.224,472,1.137,473,1.694,480,1.724,481,2.032,482,1.137,485,1.224,486,0.554,487,0.788,488,0.689,489,0.554,490,1.134,491,0.554,492,1.373,493,0.554,494,0.486,495,0.554,496,0.486,497,1.31,498,0.554,499,0.519,500,0.554,501,0.486,502,0.486,503,0.554,504,0.486,505,0.366,506,0.841,507,0.486,508,0.554,509,0.454,510,0.424,511,0.841,512,0.519,513,0.454,514,0.486,515,0.554,516,0.994,517,0.554,518,0.994,519,0.486,520,0.554,521,0.454,522,0.486,523,0.841,524,0.486,525,0.554,526,0.519,527,0.554,528,0.454,529,0.519,530,0.519,531,0.486,532,0.486,533,0.994,534,0.554,535,0.486,536,1.203,537,0.554,538,0.486,539,0.554,540,0.486,541,0.454,542,0.486,543,0.424,544,0.554,545,0.519,546,0.554,547,0.486,548,0.454,549,0.486,550,0.554,551,0.486,552,0.519,553,0.554,554,0.454,555,0.486,556,0.454,557,0.554,558,0.554,572,1.232,575,1.224,576,1.224,588,4.62,603,1.675,613,2.504,617,3.925,618,4.091,624,4.794,625,1.811,629,3.478,630,2.597,632,3.236,634,3.065,635,1.857,636,2.187,642,1.764,645,3.236,653,2.009,664,1.582,665,1.785,669,3.654,670,1.995,675,1.059,676,0.988,695,2.691,696,1.442,698,1.582,699,2.833,703,1.325,704,2.4,705,1.582,706,2.642,718,1.789,739,1.476,740,2.032,752,2.833,761,3.025,778,2.187,783,1.499,784,1.499,790,1.605,791,1.724,801,2.4,802,2.4,843,1.442,851,4.019,857,1.137,863,1.325,864,3.188,865,1.582,967,1.857,970,3.986,971,1.442,983,1.396,984,1.137,985,1.325,994,2.709,1017,1.857,1048,2.667,1238,2.187,1243,2.667,1357,2.4,1373,2.4,1379,2.187,1383,2.009,1399,2.504,1437,2.187,1458,3.236,1569,2.4,1572,2.642,1575,1.582,1577,1.325,1731,2.899,1741,1.759,1784,2.4,1790,1.137,1795,2.642,1824,3.025,1833,5.24,1834,1.995,1835,3.222,1836,3.222,1837,4.311,1838,3.568,1839,4.227,1840,4.311,1841,5.171,1842,3.866,1843,3.025,1844,3.596,1845,4.811,1846,2.353,1847,4.079,1848,4.384,1849,3.568,1850,3.025,1851,3.025,1852,3.568,1853,3.025,1854,2.353,1855,2.667,1856,3.568,1857,3.025,1858,3.025,1859,3.568,1860,2.353,1861,3.568,1862,2.353,1863,3.025,1864,3.025,1865,3.596,1866,3.025,1867,3.568,1868,2.353,1869,5.655,1870,5.655,1871,3.025,1872,2.353,1873,3.568,1874,3.025,1875,3.654,1876,2.353,1877,3.025,1878,2.353,1879,3.568,1880,2.353,1881,3.222,1882,3.025,1883,1.995,1884,2.353,1885,2.353,1886,2.353,1887,3.568,1888,3.568,1889,2.353,1890,2.353,1891,4.311,1892,3.596,1893,2.353,1894,2.353,1895,2.353,1896,1.582,1897,2.353,1898,2.353,1899,2.353,1900,2.353,1901,2.667,1902,1.995,1903,2.353,1904,2.353,1905,3.568,1906,1.995,1907,2.353,1908,2.353,1909,2.353,1910,1.759,1911,1.995,1912,1.995,1913,2.667,1914,1.995,1915,3.568,1916,2.353,1917,1.442,1918,1.995,1919,1.995,1920,1.995,1921,3.025,1922,3.025,1923,1.582,1924,1.759,1925,2.353,1926,1.759,1927,1.759,1928,1.759,1929,1.582,1930,1.759,1931,1.759,1932,1.759,1933,1.759,1934,1.759,1935,1.759,1936,1.759,1937,1.759,1938,3.222,1939,1.759,1940,1.759,1941,1.759,1942,2.667,1943,1.759,1944,1.759,1945,1.442,1946,1.759,1947,3.222,1948,1.995,1949,2.4,1950,2.353,1951,2.4,1952,2.667,1953,1.759,1954,1.995,1955,1.759,1956,1.759,1957,1.759,1958,1.759,1959,2.667,1960,1.759,1961,3.222,1962,2.667]],["title/components/PasswortResetComponent.html",[26,0.075,535,0.713]],["body/components/PasswortResetComponent.html",[3,0.119,4,0.119,5,0.101,7,0.575,10,1.275,14,0.277,16,0.185,17,0.332,18,0.502,22,1.047,23,0.352,24,0.026,25,0.721,26,0.086,27,2.06,30,0.94,32,0.233,33,0.77,34,0.324,36,0.632,50,0.401,51,0.324,56,0.136,59,0.552,60,0.397,65,0.993,66,0.843,67,0.301,68,0.468,69,0.582,70,0.468,71,0.468,73,0.67,75,0.255,76,0.429,77,0.764,79,0.693,88,0.324,91,0.815,92,0.277,99,0.986,100,1.362,102,1.688,104,0.213,106,0.669,107,0.324,116,1.274,118,0.824,129,1.22,158,0.986,173,1.826,176,0.873,180,1.387,187,0.432,202,1.387,204,1.274,242,0.011,243,0.011,244,0.401,245,0.67,246,0.49,247,0.673,248,0.429,249,0.49,253,1.987,254,2.181,256,0.49,259,0.764,264,1.487,268,1.36,272,1.987,276,1.188,278,0.986,296,1.387,297,1.544,315,1.362,325,1.575,342,2.704,346,1.377,349,0.717,353,2.26,354,1.004,355,1.996,357,1.362,358,1.387,359,2.216,360,2.165,361,1.687,362,2.044,363,1.567,364,0.995,367,1.659,368,1.788,369,2.216,370,1.907,372,0.817,374,2.416,376,1.702,377,2.272,378,1.999,379,1.567,380,1.932,381,0.765,382,1.17,383,1.274,384,1.194,385,1.194,386,2.178,387,1.907,388,1.05,389,1.907,390,0.765,391,1.468,392,1.377,393,0.873,394,0.873,398,0.873,400,0.873,402,1.788,403,2.351,404,1.893,405,1.362,406,1.459,407,2.06,408,1.992,409,1.004,411,2.912,412,2.246,413,1.567,414,1.377,418,1.905,425,2.916,427,0.873,428,0.873,429,2.425,430,2.035,433,0.935,434,1.659,435,1.362,437,2.156,438,1.273,439,1.567,440,1.761,441,2.246,442,2.444,443,1.273,444,1.273,445,1.273,447,1.893,448,1.567,452,1.004,457,1.273,458,1.553,459,1.398,464,2.573,469,1.688,470,1.081,472,1.004,473,1.771,480,1.567,481,1.771,482,1.004,485,1.081,486,0.49,487,0.716,488,0.626,489,0.49,490,1.062,491,0.49,492,1.319,493,0.49,494,0.429,495,0.49,496,0.429,497,1.188,498,0.49,499,0.459,500,0.49,501,0.429,502,0.429,503,0.49,504,0.429,505,0.324,506,0.764,507,0.429,508,0.49,509,0.401,510,0.374,511,0.764,512,0.459,513,0.401,514,0.429,515,0.49,516,0.931,517,0.49,518,0.931,519,0.429,520,0.49,521,0.401,522,0.429,523,0.764,524,0.429,525,0.49,526,0.459,527,0.49,528,0.401,529,0.459,530,0.459,531,0.429,532,0.429,533,0.429,534,0.49,535,0.931,536,1.315,537,0.49,538,0.429,539,0.49,540,0.429,541,0.401,542,0.429,543,0.374,544,0.49,545,0.459,546,0.49,547,0.429,548,0.401,549,0.429,550,0.49,551,0.429,552,0.459,553,0.49,554,0.401,555,0.429,556,0.77,557,0.49,558,0.49,572,1.12,575,1.081,576,1.081,582,2.424,584,1.553,586,4.759,591,1.553,603,1.678,613,2.543,617,2.444,618,4.243,619,2.842,625,2.416,630,2.176,634,1.17,636,1.273,642,1.597,647,2.181,649,2.028,653,2.246,664,1.398,665,1.687,671,2.749,675,1.459,676,1.893,678,1.761,691,3.016,692,3.016,693,3.287,695,2.815,696,1.987,698,1.398,699,2.912,700,1.688,703,1.17,704,2.683,705,1.398,706,2.762,717,1.081,718,1.597,739,1.395,740,1.921,751,1.676,752,1.688,778,1.273,783,0.873,784,0.873,787,1.17,790,2.028,791,1.567,803,2.683,810,4.243,840,3.174,843,1.273,851,4.054,854,1.553,855,2.749,857,1.004,863,1.17,864,3.163,865,1.398,892,2.916,970,3.962,983,1.46,984,1.004,985,1.17,994,2.537,1017,1.688,1033,3.368,1036,2.444,1044,1.081,1075,2.424,1080,2.424,1087,1.17,1151,3.315,1154,2.181,1200,1.398,1238,1.987,1283,1.553,1286,3.031,1323,0.935,1325,2.181,1383,1.826,1388,3.031,1399,1.688,1437,2.444,1458,2.181,1569,2.181,1572,2.762,1575,1.398,1577,1.17,1578,1.553,1676,3.031,1731,2.683,1775,1.553,1790,1.927,1795,2.995,1835,2.981,1836,2.981,1839,3.653,1842,3.653,1843,2.749,1844,3.368,1847,2.749,1848,3.381,1850,1.761,1853,2.749,1857,2.749,1858,2.749,1863,2.749,1864,1.761,1871,2.749,1874,2.749,1875,3.381,1877,3.381,1881,3.653,1883,1.761,1892,3.368,1896,1.398,1901,3.368,1906,1.761,1910,1.553,1911,1.761,1912,1.761,1914,3.381,1917,2.444,1918,1.761,1919,1.761,1920,1.761,1921,2.749,1922,2.749,1923,1.398,1924,1.553,1926,1.553,1927,1.553,1928,1.553,1929,1.398,1930,1.553,1931,1.553,1932,1.553,1933,1.553,1934,1.553,1935,1.553,1936,1.553,1937,1.553,1938,2.981,1939,1.553,1940,1.553,1941,1.553,1942,2.424,1943,1.553,1944,1.553,1945,1.273,1946,1.553,1947,2.981,1948,1.761,1949,2.181,1951,2.683,1952,2.981,1953,1.553,1954,1.761,1955,1.553,1956,1.553,1957,1.553,1958,1.553,1959,2.424,1960,1.553,1961,2.981,1962,2.424,1963,5.398,1964,1.761,1965,3.988,1966,3.243,1967,3.988,1968,3.988,1969,3.988,1970,3.988,1971,3.243,1972,3.243,1973,3.243,1974,3.243,1975,1.761,1976,3.243,1977,1.761,1978,2.078,1979,3.243,1980,2.078,1981,1.761,1982,2.078,1983,2.078,1984,3.988,1985,2.078,1986,3.381,1987,3.988,1988,3.988,1989,2.078,1990,3.243,1991,2.078,1992,3.243,1993,3.243,1994,2.078,1995,3.243,1996,2.078,1997,4.745,1998,3.243,1999,3.243,2000,3.243,2001,2.078,2002,3.243,2003,3.243,2004,2.078,2005,3.243,2006,3.243,2007,4.586,2008,2.078,2009,2.749,2010,2.749,2011,5.179,2012,4.506,2013,3.243,2014,3.243,2015,3.243,2016,2.078,2017,3.243,2018,3.243,2019,2.078,2020,3.243,2021,2.078,2022,4.506,2023,3.243,2024,3.243,2025,2.749,2026,2.078,2027,2.078,2028,2.078,2029,1.761,2030,1.761,2031,1.761,2032,2.078,2033,2.078,2034,1.761,2035,2.078,2036,2.078,2037,3.243,2038,2.078,2039,2.078,2040,1.761,2041,2.078,2042,2.078,2043,2.078,2044,3.243,2045,2.078,2046,3.381,2047,2.078,2048,2.078,2049,1.761,2050,2.078,2051,2.078,2052,2.078,2053,2.078,2054,2.078,2055,3.243,2056,2.078,2057,2.078,2058,1.761,2059,1.553,2060,1.761,2061,2.078,2062,2.078,2063,1.761,2064,2.078,2065,2.078,2066,2.078,2067,2.078,2068,2.078,2069,1.553,2070,1.761,2071,2.424,2072,3.368,2073,3.243,2074,3.243,2075,3.243,2076,3.243,2077,2.181,2078,4.506,2079,2.749,2080,2.749,2081,2.749,2082,2.181,2083,2.078,2084,2.181,2085,1.761,2086,1.761,2087,1.761,2088,2.078,2089,2.078]],["title/components/PrivacyComponent.html",[26,0.075,538,0.713]],["body/components/PrivacyComponent.html",[3,0.14,4,0.14,5,0.12,7,0.639,14,0.328,16,0.14,18,0.228,23,0.14,24,0.024,25,0.603,26,0.096,30,1.043,32,0.276,34,0.383,50,0.475,51,0.383,56,0.161,59,0.301,60,0.452,65,1.007,66,0.856,67,0.342,68,0.532,69,0.414,70,0.532,71,0.532,75,0.301,76,0.508,77,0.869,79,0.497,88,0.383,92,0.328,104,0.252,106,0.825,107,0.383,118,1.016,136,3.128,140,4.201,142,4.693,187,0.491,242,0.013,243,0.013,244,0.475,245,0.762,246,0.58,248,0.508,249,0.58,256,0.58,259,0.869,264,1.043,268,0.618,276,0.762,346,2.039,486,0.58,487,0.814,488,0.712,489,0.58,490,1.159,491,0.58,492,1.392,493,0.58,494,0.508,495,0.58,496,0.508,497,0.508,498,0.58,499,0.543,500,0.58,501,0.508,502,0.508,503,0.58,504,0.508,505,0.383,506,0.869,507,0.508,508,0.58,509,0.475,510,0.443,511,0.869,512,0.543,513,0.475,514,0.508,515,0.58,516,0.915,517,0.58,518,0.915,519,0.508,520,0.58,521,0.475,522,0.508,523,0.869,524,0.508,525,0.58,526,0.543,527,0.58,528,0.475,529,0.543,530,0.543,531,0.508,532,0.508,533,0.508,534,0.58,535,0.508,536,0.508,537,0.58,538,1.016,539,0.58,540,0.508,541,0.475,542,0.508,543,0.443,544,0.58,545,0.543,546,0.58,547,0.508,548,0.475,549,0.508,550,0.58,551,0.508,552,0.543,553,0.58,554,0.475,555,0.508,556,0.475,557,0.58,558,0.58,575,1.28,576,1.28,691,1.782,692,2.377,792,1.92,836,5.215,840,4.071,844,3.128,846,3.309,851,2.261,969,2.77,971,4.241,979,2.261,1324,3.678,1325,4.413,1379,4.383,1546,2.261,1549,3.128,1563,1.507,1597,4.171,1598,2.085,1599,4.693,1603,2.085,1604,2.085,1605,3.128,1606,4.171,1609,5.006,1610,3.128,1611,3.128,1613,3.128,1614,3.128,1615,3.128,1616,3.128,1717,3.128,1788,4.611,1790,3.418,1792,3.678,1795,4.071,1796,2.758,1896,3.309,1917,3.015,2046,5.006,2059,4.828,2060,3.128,2063,4.693,2072,4.598,2077,3.972,2079,4.171,2080,4.171,2081,5.632,2082,2.482,2084,2.482,2090,2.085,2091,3.69,2092,3.69,2093,2.459,2094,2.459,2095,2.459,2096,5.905,2097,3.69,2098,7.061,2099,6.151,2100,3.69,2101,5.536,2102,4.92,2103,6.562,2104,6.459,2105,6.151,2106,4.693,2107,3.69,2108,3.69,2109,5.536,2110,5.536,2111,5.536,2112,3.69,2113,3.69,2114,3.69,2115,5.536,2116,3.69,2117,3.69,2118,3.69,2119,3.69,2120,3.69,2121,3.69,2122,5.905,2123,6.814,2124,3.69,2125,3.69,2126,3.69,2127,3.69,2128,3.69,2129,6.814,2130,3.69,2131,5.536,2132,6.562,2133,3.69,2134,3.69,2135,3.69,2136,3.69,2137,3.69,2138,3.69,2139,3.69,2140,3.69,2141,3.69,2142,3.69,2143,3.69,2144,3.69,2145,3.69,2146,3.69,2147,3.69,2148,4.92,2149,3.69,2150,3.69,2151,3.69,2152,3.69,2153,3.69,2154,3.69,2155,4.92,2156,3.69,2157,4.92,2158,5.006,2159,3.69,2160,3.69,2161,5.536,2162,3.69,2163,3.69,2164,3.69,2165,4.92,2166,4.92,2167,3.69,2168,4.92,2169,3.69,2170,4.92,2171,3.69,2172,5.905,2173,3.69,2174,3.69,2175,3.69,2176,3.69,2177,3.69,2178,3.69,2179,3.69,2180,3.69,2181,3.69,2182,3.69,2183,3.69,2184,3.69,2185,3.69,2186,3.69,2187,3.69,2188,3.69,2189,3.69,2190,3.69,2191,3.69,2192,3.69,2193,3.69,2194,6.151,2195,4.92,2196,4.92,2197,4.92,2198,6.151,2199,5.905,2200,4.92,2201,6.151,2202,3.69,2203,6.151,2204,3.69,2205,3.69,2206,3.69,2207,3.69,2208,3.69,2209,2.459,2210,3.69,2211,3.69,2212,3.69,2213,3.69,2214,4.92,2215,5.536,2216,3.69,2217,3.69,2218,3.69,2219,4.92,2220,4.92,2221,4.92,2222,3.69,2223,6.151,2224,6.151,2225,4.92,2226,3.69,2227,3.69,2228,3.69,2229,3.69,2230,3.309,2231,3.69,2232,5.905,2233,5.905,2234,5.536,2235,3.69,2236,5.905,2237,4.171,2238,5.536,2239,4.92,2240,4.92,2241,3.69,2242,3.69,2243,3.69,2244,3.128,2245,3.69,2246,4.92,2247,3.69,2248,5.905,2249,3.69,2250,3.69,2251,3.69,2252,3.69,2253,5.536,2254,3.69,2255,3.69,2256,3.69,2257,3.69,2258,3.69,2259,3.69,2260,3.69,2261,4.92,2262,3.69,2263,3.69,2264,4.92,2265,3.69,2266,3.69,2267,3.69,2268,3.69,2269,3.69,2270,3.69,2271,3.69,2272,3.69,2273,3.69,2274,3.69,2275,3.69,2276,3.69,2277,3.69,2278,3.69,2279,3.69,2280,3.69,2281,3.69,2282,3.69,2283,3.69,2284,4.92,2285,3.69,2286,4.92,2287,4.92,2288,3.69,2289,3.69,2290,3.69,2291,3.69,2292,3.69,2293,4.92,2294,3.69,2295,3.69,2296,3.69,2297,5.536,2298,4.92,2299,4.92,2300,4.92,2301,3.69,2302,3.69,2303,3.69,2304,3.69,2305,3.69,2306,3.69,2307,3.69,2308,3.69,2309,3.69,2310,3.69,2311,3.69,2312,3.69,2313,4.92,2314,3.69,2315,5.905,2316,3.69,2317,3.69,2318,3.69,2319,3.69,2320,3.69,2321,3.69,2322,2.758,2323,3.69,2324,3.69,2325,3.69,2326,3.69,2327,3.69,2328,3.69,2329,3.69,2330,3.69,2331,3.69,2332,3.69,2333,3.69,2334,3.69,2335,2.459]],["title/components/ProfilDialogComponent.html",[26,0.075,541,0.666]],["body/components/ProfilDialogComponent.html",[0,0.275,3,0.326,4,0.153,5,0.131,7,0.672,9,1.207,10,0.927,11,1.899,12,1.449,13,2.89,14,0.9,16,0.225,17,0.403,18,0.432,22,1.013,23,0.346,24,0.026,25,0.7,26,0.101,30,1.098,31,1.054,32,0.301,33,0.899,34,0.418,35,1.716,36,0.816,39,1.207,40,2.76,41,1.296,42,0.926,50,0.518,51,0.418,54,2.481,55,1.207,56,0.258,59,0.329,60,0.482,65,1.014,66,0.862,67,0.365,68,0.568,69,0.442,70,0.568,71,0.568,72,1.901,73,0.813,74,2.251,75,0.329,76,0.554,77,0.927,78,0.989,79,0.614,88,0.418,91,1.374,92,0.357,104,0.604,106,1.036,107,0.799,109,2.246,110,2.46,112,1.901,114,2.251,116,2.018,118,1.06,119,1.396,129,1.391,187,0.524,203,1.89,204,1.054,223,1.51,225,2.216,226,1.653,230,1.901,241,2.89,242,0.014,243,0.014,244,0.518,245,0.813,246,0.632,247,0.869,248,0.554,249,0.632,256,0.632,259,0.927,264,1.518,268,0.674,276,1.06,296,1.375,297,1.465,299,3.269,300,4.073,302,1.296,315,2.639,342,1.296,349,0.926,350,1.51,351,1.644,353,1.962,354,1.901,355,1.929,356,2.274,357,2.675,358,1.683,359,2.091,360,1.449,361,1.358,362,2.002,363,1.832,364,1.029,365,1.396,366,2.89,367,2.013,368,1.772,369,1.973,370,2.104,371,2.401,372,1.832,374,1.958,375,2.048,376,1.737,377,2.246,378,2.002,380,1.772,381,1.449,383,2.38,384,1.716,385,1.716,386,2.038,387,2.174,388,1.771,389,1.449,390,0.988,391,1.716,392,1.358,393,1.653,394,1.653,395,2.048,396,2.048,397,2.048,398,1.653,399,2.048,400,1.653,401,2.048,402,1.417,403,2.297,404,2.639,405,1.653,407,1.716,408,1.716,409,1.296,411,2.048,414,1.772,416,1.644,418,2.002,424,1.644,425,2.216,426,1.644,427,1.127,428,1.127,429,2.148,430,2.018,433,1.771,434,0.988,435,1.127,437,1.609,447,1.653,449,2.148,453,1.396,457,1.644,459,1.804,460,2.274,464,1.832,465,3.336,468,2.31,470,1.396,472,2.251,473,1.054,481,1.832,482,1.901,485,1.396,486,0.632,487,0.869,488,0.759,489,0.632,490,1.21,491,0.632,492,1.427,493,0.632,494,0.554,495,0.632,496,0.554,497,0.554,498,0.632,499,0.592,500,0.632,501,0.554,502,0.554,503,0.632,504,0.554,505,0.726,506,0.927,507,0.554,508,0.632,509,0.518,510,0.483,511,0.927,512,0.592,513,0.518,514,0.554,515,0.632,516,0.554,517,0.632,518,0.554,519,0.554,520,0.632,521,0.518,522,0.554,523,0.927,524,0.554,525,0.632,526,0.592,527,0.632,528,0.518,529,0.592,530,0.592,531,0.554,532,0.554,533,0.554,534,0.632,535,0.554,536,0.554,537,0.632,538,0.554,539,0.632,540,0.554,541,1.14,542,1.412,543,0.483,544,0.632,545,0.592,546,0.632,547,0.554,548,0.518,549,0.554,550,0.632,551,0.554,552,0.592,553,0.632,554,0.518,555,0.554,556,0.518,557,0.632,558,0.632,606,3.484,619,2.544,635,2.425,642,0.766,665,1.358,691,1.901,692,1.901,695,2.973,699,2.973,700,1.396,739,1.123,746,1.054,751,1.653,755,1.653,763,1.396,772,3.453,774,1.804,775,2.274,776,1.832,783,1.653,784,1.653,786,2.411,798,2.005,843,1.644,854,2.005,923,2.856,943,4.271,945,3.618,960,2.647,969,2.216,983,1.51,984,2.251,985,2.624,992,1.644,993,2.647,994,1.51,1022,2.216,1030,2.216,1044,2.048,1114,1.771,1151,2.411,1270,3.214,1271,4.271,1323,1.771,1327,2.647,1456,2.647,1515,2.672,1572,2.856,1577,1.51,1696,1.804,1755,2.647,1786,2.274,1787,2.005,1790,1.901,1804,1.804,1823,2.005,1830,2.274,1929,3.135,1945,1.644,1949,2.647,2009,4.635,2069,2.941,2077,3.453,2082,2.647,2336,4.863,2337,4.863,2338,2.941,2339,3.951,2340,4.352,2341,4.352,2342,4.352,2343,4.352,2344,3.843,2345,3.935,2346,3.336,2347,2.682,2348,3.336,2349,2.682,2350,3.336,2351,2.941,2352,2.647,2353,2.682,2354,3.336,2355,3.336,2356,2.682,2357,3.336,2358,3.336,2359,2.941,2360,3.336,2361,2.941,2362,2.941,2363,3.336,2364,3.336,2365,3.336,2366,3.336,2367,2.682,2368,2.411,2369,2.682,2370,3.336,2371,2.274,2372,3.336,2373,2.274,2374,3.336,2375,2.274,2376,3.336,2377,2.274,2378,3.951,2379,3.951,2380,2.274,2381,2.274,2382,2.274,2383,2.274,2384,2.274,2385,3.935,2386,3.935,2387,3.935,2388,2.682,2389,2.682,2390,4.66,2391,3.935,2392,2.682,2393,3.935,2394,3.935,2395,2.682,2396,3.935,2397,2.682,2398,2.682,2399,2.682]],["title/interfaces/ProfileData.html",[0,0.353,2344,2.32]],["body/interfaces/ProfileData.html",[0,0.442,2,1.399,3,0.311,4,0.247,5,0.211,9,1.943,10,1.018,11,1.936,12,1.59,13,3.068,14,0.903,16,0.247,17,0.558,22,1.108,23,0.369,24,0.026,25,0.792,26,0.118,30,1.284,31,1.697,32,0.485,33,1.052,34,0.672,35,2.006,36,1.313,39,2.452,40,2.884,41,2.086,42,1.491,54,2.508,55,1.943,56,0.358,65,0.623,66,0.529,68,0.623,69,0.485,70,0.623,71,0.623,72,2.086,73,0.892,74,2.086,75,0.529,77,1.018,78,1.085,79,0.485,91,1.37,104,0.611,106,1.084,107,0.848,109,2.142,110,2.452,112,2.086,114,2.086,118,0.892,119,2.247,203,2.006,223,2.431,225,2.431,226,1.814,230,2.632,241,2.431,242,0.019,243,0.019,299,3.364,300,4.217,315,2.716,358,1.157,449,2.142,468,2.452,505,0.672,541,1.21,542,1.233,606,3.228,619,2.289,635,2.247,665,1.881,746,2.142,751,1.814,755,1.814,763,2.836,772,2.904,776,1.697,783,1.814,784,1.814,786,2.646,923,3.339,943,4.833,945,3.659,969,2.431,1022,2.431,1030,2.431,1044,2.247,1114,1.943,1270,2.884,1323,1.943,1327,2.904,1456,2.904,1515,3.107,1696,4.217,1755,2.904,1790,2.086,1804,2.904,1823,4.073,2069,3.228,2077,3.665,2082,2.904,2336,3.228,2337,3.228,2338,3.228,2339,3.661,2340,5.481,2341,5.481,2342,5.481,2343,3.661,2344,4.217,2346,3.661,2348,3.661,2350,3.661,2351,3.228,2352,2.904,2354,3.661,2355,3.661,2357,3.661,2358,3.661,2359,3.228,2360,3.661,2361,3.228,2362,3.228,2363,3.661,2364,3.661,2365,3.661,2366,3.661,2368,2.646,2370,4.62,2371,3.661,2372,4.62,2373,3.661,2374,4.62,2375,3.661,2376,4.62,2377,3.661,2378,5.061,2379,5.061,2380,3.661,2381,3.661,2382,3.661,2383,3.661,2384,3.661]],["title/components/SelectedMembersDialogComponent.html",[26,0.075,50,0.666]],["body/components/SelectedMembersDialogComponent.html",[3,0.198,4,0.198,5,0.169,7,1.032,9,1.557,10,1.263,11,1.959,14,0.925,15,2.888,16,0.363,17,0.482,18,0.437,23,0.355,24,0.025,25,0.705,26,0.116,31,1.36,32,0.389,33,1.034,34,0.539,40,3,41,2.588,42,1.195,50,1.248,51,1.05,52,4.834,56,0.227,59,0.424,60,0.578,65,1.032,66,0.876,67,0.437,68,0.68,69,0.529,70,0.68,71,0.68,72,2.276,73,0.973,74,2.588,75,0.424,76,0.715,79,0.646,84,1.557,88,0.539,92,0.766,94,4.048,104,0.354,106,1.041,107,0.896,109,2.44,110,2.708,112,2.276,114,3.069,116,1.852,129,1.11,187,0.827,191,2.276,194,2.12,197,2.327,203,2.118,204,1.852,211,2.653,225,2.653,226,1.98,228,2.994,230,2.276,242,0.016,243,0.016,244,0.668,245,0.973,246,0.815,247,1.121,248,0.715,249,0.815,256,0.815,259,1.11,260,3.522,264,1.497,266,2.452,268,1.184,276,1.107,278,1.433,302,1.672,346,1.627,349,1.195,353,1.121,355,0.988,358,1.541,359,2.194,360,1.735,361,1.627,362,1.526,363,1.36,364,0.764,365,1.801,366,1.948,367,1.973,368,2.078,369,2.289,370,2.286,371,2.609,372,1.36,373,1.801,374,2.251,375,1.801,376,1.83,377,2.144,378,1.863,379,1.672,380,1.627,381,1.274,382,1.948,383,1.852,384,1.973,385,1.973,386,2.144,387,2.118,388,1.526,389,1.735,390,1.735,391,1.973,392,1.627,393,1.454,394,1.454,395,1.801,396,1.801,397,1.801,398,1.454,399,1.801,400,1.454,401,1.801,402,1.629,403,1.98,405,2.609,406,1.557,407,1.735,408,1.735,413,1.36,414,1.195,418,1.121,422,2.934,430,2.106,449,1.36,450,3.604,451,2.934,452,1.672,453,1.801,462,2.327,463,2.327,467,2.327,471,2.327,473,1.36,486,0.815,487,1.04,488,0.909,489,0.815,490,1.356,491,0.815,492,1.524,493,0.815,494,0.715,495,0.815,496,0.715,497,0.715,498,0.815,499,0.764,500,0.815,501,0.715,502,0.715,503,0.815,504,0.715,505,0.539,506,1.11,507,0.715,508,0.815,509,0.668,510,0.623,511,1.11,512,0.764,513,0.668,514,0.715,515,0.815,516,0.715,517,0.815,518,0.715,519,0.715,520,0.815,521,0.668,522,0.715,523,1.11,524,0.715,525,0.815,526,0.764,527,0.815,528,0.668,529,0.764,530,1.183,531,0.715,532,0.715,533,0.715,534,0.815,535,0.715,536,0.715,537,0.815,538,0.715,539,0.815,540,0.715,541,0.668,542,0.715,543,0.623,544,0.815,545,0.764,546,0.815,547,0.715,548,0.668,549,0.715,550,0.815,551,0.715,552,0.764,553,0.815,554,0.668,555,0.715,556,0.668,557,0.815,558,0.815,635,2.788,665,1.85,700,2.452,721,2.417,743,2.118,763,2.452,772,3.869,774,2.327,776,2.365,798,2.587,857,2.276,967,2.452,983,1.736,998,2.121,1017,2.788,1087,2.653,1114,2.12,1399,2.452,1676,3.169,1784,3.169,1831,2.934,2400,5.482,2401,4.712,2402,4.712,2403,3.46,2404,4.712,2405,4.712,2406,3.46,2407,3.46,2408,3.46,2409,3.46,2410,4.712]],["title/interfaces/ThreadChannelParentDoc.html",[0,0.353,2411,2.579]],["body/interfaces/ThreadChannelParentDoc.html",[0,0.244,2,0.773,3,0.136,4,0.136,5,0.117,11,1.383,12,0.879,15,1.463,16,0.136,17,0.445,18,0.596,19,1.916,20,3.072,22,1.079,23,0.342,24,0.026,25,0.8,26,0.113,28,1.623,29,1.623,30,0.85,32,0.268,33,0.696,34,0.372,46,1.916,47,1.074,48,2.045,49,1.003,54,2.186,55,1.074,56,0.157,59,0.638,60,0.748,65,0.344,66,0.533,67,0.221,68,0.344,69,0.696,70,0.344,71,0.344,73,0.493,75,0.293,77,0.562,78,1.559,79,0.657,83,2.448,88,1.017,91,1.093,92,0.481,97,1.242,99,2.071,100,1.003,102,2.263,104,0.712,106,0.981,107,0.562,115,2.341,118,0.493,129,0.85,152,1.344,158,0.726,168,1.463,171,1.344,176,1.827,180,1.782,187,0.481,202,0.639,206,1.242,215,2.341,223,3.648,232,1.344,242,0.013,243,0.013,253,3.801,259,0.562,274,2.101,276,1.001,278,1.322,284,1.418,287,1.463,293,2.522,325,1.985,346,0.824,353,2.036,355,1.485,362,0.773,364,1.255,378,0.773,388,0.773,389,0.879,432,1.242,488,0.696,502,1.001,504,0.898,505,0.755,507,0.898,509,0.696,510,0.43,514,0.898,521,0.696,522,0.493,540,0.745,543,0.649,547,0.745,548,1.301,549,0.898,554,0.696,555,1.075,556,1.004,595,3.189,599,1.784,603,1.94,609,4.818,623,1.605,625,2.458,636,1.463,640,1.344,642,1.863,645,1.605,646,1.003,649,2.791,665,2.237,675,1.074,676,2.565,710,2.101,712,2.514,714,2.514,716,2.745,717,1.877,718,1.833,721,1.827,723,2.101,726,2.93,728,3.724,735,2.448,737,2.827,739,1.71,742,2.181,746,0.938,747,2.031,751,1.003,776,0.938,779,2.925,783,1.003,784,1.003,787,1.344,790,1.074,832,1.242,835,3.686,863,1.344,864,1.153,868,1.605,884,4.109,890,1.784,892,3.2,928,2.426,979,1.463,983,1.57,993,1.605,1001,1.605,1006,1.605,1030,2.729,1036,2.665,1041,1.784,1061,1.784,1064,2.925,1091,2.426,1110,2.031,1116,1.463,1117,1.605,1135,1.784,1136,1.784,1141,1.784,1142,1.784,1143,1.784,1147,1.463,1149,1.784,1154,3.5,1158,1.784,1161,1.784,1177,2.696,1241,1.784,1244,2.696,1265,4.563,1280,2.696,1352,1.784,1357,1.605,1363,2.696,1383,1.344,1399,1.242,1412,1.784,1419,2.696,1423,1.784,1479,1.784,1497,4.029,1515,1.877,1541,1.605,1551,4.109,1624,1.784,1630,2.023,1641,3.058,1642,3.686,1644,1.463,1646,2.696,1647,2.023,1676,1.605,1682,2.023,1692,2.023,1756,2.925,1802,1.784,1826,2.023,1851,2.023,1855,1.784,1910,1.784,1945,1.463,2070,3.058,2351,1.784,2411,3.89,2412,2.023,2413,3.607,2414,2.023,2415,2.387,2416,2.387,2417,3.607,2418,3.607,2419,2.023,2420,1.784,2421,2.387,2422,2.023,2423,2.387,2424,2.387,2425,2.023,2426,2.387,2427,2.387,2428,2.387,2429,2.387,2430,2.387,2431,2.387,2432,2.387,2433,2.387,2434,2.387,2435,2.387,2436,2.387,2437,3.607,2438,2.387,2439,2.387,2440,2.387,2441,2.387,2442,2.387,2443,2.387,2444,2.387,2445,2.387,2446,2.387,2447,3.607,2448,2.387,2449,4.846,2450,2.387,2451,2.387,2452,2.387,2453,2.387,2454,2.387,2455,2.387,2456,2.387,2457,2.387,2458,2.387,2459,2.387,2460,2.387,2461,2.387,2462,2.387,2463,2.387,2464,2.387,2465,2.387,2466,2.023,2467,2.387,2468,4.348,2469,2.387,2470,2.387,2471,2.387,2472,4.348,2473,2.387,2474,4.348,2475,3.607,2476,4.846,2477,2.387,2478,2.387,2479,2.387,2480,4.846,2481,4.846,2482,2.387,2483,2.387,2484,5.204,2485,4.846,2486,4.348,2487,2.387,2488,2.387,2489,3.607,2490,4.348,2491,2.387,2492,4.348,2493,3.607,2494,2.387,2495,3.607,2496,2.387,2497,2.387,2498,3.607,2499,2.387,2500,3.607,2501,4.348,2502,5.473,2503,3.607,2504,3.607,2505,2.387,2506,2.387,2507,2.387,2508,4.846,2509,3.607,2510,2.387,2511,4.846,2512,2.023,2513,3.607,2514,2.387,2515,3.607,2516,2.387,2517,2.387,2518,2.023,2519,1.784,2520,2.023,2521,2.023,2522,2.387,2523,2.387,2524,2.387,2525,5.683,2526,2.387,2527,5.204,2528,2.387,2529,5.204,2530,2.387,2531,2.387,2532,2.387,2533,2.387,2534,3.607,2535,2.387,2536,2.387,2537,2.387,2538,2.387,2539,3.607,2540,2.387,2541,3.607,2542,2.387,2543,2.387,2544,2.387,2545,2.387,2546,2.387,2547,2.387,2548,2.387,2549,2.387,2550,2.387,2551,2.387,2552,2.387,2553,2.387,2554,2.387,2555,3.607,2556,2.387,2557,2.387,2558,2.387,2559,3.607,2560,2.387,2561,4.109,2562,2.387,2563,2.387,2564,3.607,2565,3.607,2566,2.387,2567,2.387,2568,2.387,2569,2.387,2570,2.387,2571,3.607,2572,2.023,2573,2.387,2574,2.387,2575,2.387,2576,2.387,2577,4.846,2578,2.387,2579,2.387,2580,2.387,2581,2.387,2582,2.387,2583,2.387,2584,2.387,2585,2.387,2586,2.387,2587,2.387,2588,3.607,2589,2.387,2590,2.387,2591,2.387,2592,2.387,2593,2.387,2594,2.387,2595,3.607,2596,2.387,2597,3.607,2598,2.387,2599,2.387,2600,2.387,2601,2.387,2602,2.387,2603,2.387,2604,2.387,2605,2.387,2606,2.387,2607,3.607,2608,2.387,2609,3.607,2610,2.387,2611,2.387,2612,2.387,2613,2.387,2614,2.387,2615,2.387,2616,2.387,2617,2.387,2618,2.387,2619,2.387,2620,2.387,2621,2.387,2622,2.387,2623,2.387,2624,2.426,2625,2.387,2626,2.387,2627,2.387,2628,2.387,2629,2.387,2630,3.607,2631,2.387,2632,2.387,2633,2.387,2634,2.387,2635,2.387,2636,2.387,2637,2.387,2638,2.387,2639,2.387,2640,2.387,2641,2.387,2642,2.387,2643,2.387,2644,2.387,2645,3.607,2646,2.387,2647,2.387,2648,2.387,2649,2.023,2650,2.387,2651,2.387,2652,2.387,2653,2.387,2654,2.387,2655,2.387]],["title/injectables/UserService.html",[46,1.27,594,2.114]],["body/injectables/UserService.html",[3,0.154,4,0.154,5,0.132,10,0.636,11,1.129,16,0.154,18,0.614,22,1.078,23,0.378,24,0.026,25,0.702,32,0.303,46,1.896,56,0.177,59,0.744,66,0.331,69,0.578,75,0.331,78,1.294,79,0.748,91,1.805,99,1.566,100,2.854,104,0.7,106,1.101,107,0.616,158,1.667,168,3.156,180,1.887,202,1.784,211,2.227,232,3.225,242,0.014,243,0.014,259,0.932,264,1.594,266,2.058,268,1.663,276,1.391,284,2.024,293,2.058,297,1.129,315,2.164,325,1.882,328,3.591,497,1.345,536,0.817,560,2.019,572,0.932,582,2.019,584,2.019,591,3.85,594,2.423,595,3.626,596,2.019,608,2.289,613,2.68,614,2.956,617,2.867,619,2.71,620,3.464,625,2.989,630,2.486,634,2.227,642,1.635,646,2.406,647,2.66,649,3.14,661,2.019,675,2.467,676,2.884,681,5.469,684,2.019,693,2.66,715,1.661,787,2.9,790,1.779,803,2.66,840,2.423,864,2.931,934,4.081,935,2.289,949,3.464,951,3.352,952,2.66,958,4.647,960,2.66,966,4.366,967,2.058,970,2.227,972,5.144,973,2.289,1022,2.227,1036,2.867,1044,1.405,1087,2.227,1091,2.66,1116,3.51,1117,2.66,1229,4.281,1242,2.019,1270,1.91,1286,3.464,1323,1.779,1373,2.66,1388,3.464,1437,3.156,1454,2.019,1519,4.423,1661,2.289,1696,2.66,1704,2.289,1712,2.956,1741,2.019,1756,2.66,1787,4.098,1790,1.305,1855,2.956,1865,2.956,1896,1.816,1902,3.352,1917,1.655,1923,2.66,1975,2.289,2007,4.366,2029,2.289,2030,4.647,2031,2.289,2034,2.289,2040,5.144,2049,2.289,2058,3.352,2071,2.019,2237,2.289,2322,2.019,2359,2.956,2361,2.956,2362,2.956,2368,3.156,2422,2.289,2519,2.956,2561,5.248,2649,4.366,2656,2.289,2657,3.352,2658,3.954,2659,3.954,2660,5.15,2661,3.954,2662,3.954,2663,3.954,2664,4.679,2665,4.679,2666,4.679,2667,3.954,2668,3.954,2669,3.954,2670,3.954,2671,5.15,2672,3.954,2673,5.016,2674,2.7,2675,2.7,2676,3.954,2677,2.7,2678,3.954,2679,3.954,2680,2.7,2681,2.7,2682,6.292,2683,5.15,2684,2.7,2685,3.954,2686,2.7,2687,3.954,2688,2.7,2689,3.954,2690,3.954,2691,2.7,2692,3.954,2693,5.15,2694,4.366,2695,2.7,2696,6.19,2697,5.15,2698,2.7,2699,3.954,2700,3.954,2701,2.7,2702,5.482,2703,2.7,2704,2.7,2705,3.352,2706,2.7,2707,2.7,2708,3.954,2709,2.7,2710,3.954,2711,2.7,2712,3.954,2713,2.7,2714,3.954,2715,2.7,2716,3.954,2717,3.954,2718,2.7,2719,3.954,2720,3.954,2721,3.954,2722,2.7,2723,3.954,2724,2.7,2725,2.7,2726,2.7,2727,2.7,2728,2.7,2729,2.7,2730,2.7,2731,2.7,2732,2.289,2733,2.7,2734,2.7,2735,2.7,2736,2.7,2737,5.728,2738,5.917,2739,4.679,2740,4.679,2741,4.679,2742,3.954,2743,2.7,2744,5.482,2745,4.679,2746,2.7,2747,2.7,2748,2.7,2749,2.7,2750,3.954,2751,2.7,2752,2.7,2753,2.7,2754,2.7,2755,2.7,2756,2.7,2757,2.7,2758,2.7,2759,2.7,2760,2.289,2761,2.7,2762,3.954,2763,2.7,2764,2.7,2765,3.954,2766,2.7,2767,2.7,2768,2.7,2769,3.954,2770,3.954,2771,2.7,2772,2.7,2773,2.7,2774,4.679,2775,4.679,2776,3.954,2777,2.7,2778,2.7,2779,2.7,2780,3.954,2781,3.954,2782,3.954,2783,2.7,2784,2.7,2785,3.954,2786,2.7,2787,2.7]],["title/components/VerifyEmailComponent.html",[26,0.075,551,0.713]],["body/components/VerifyEmailComponent.html",[3,0.133,4,0.133,5,0.114,7,0.619,10,0.55,14,0.311,16,0.202,17,0.363,18,0.398,22,0.996,23,0.322,24,0.026,25,0.729,26,0.111,27,2.076,30,1.214,32,0.262,33,0.828,34,0.363,35,1.579,36,0.709,50,0.45,51,0.363,56,0.153,59,0.286,60,0.434,65,1.003,66,0.852,67,0.329,68,0.511,69,0.398,70,0.511,71,0.511,73,0.732,75,0.286,76,0.482,77,0.835,79,0.578,80,2.384,88,0.363,91,1.363,92,0.311,104,0.577,107,0.363,116,1.393,117,1.595,118,0.989,129,1.129,158,1.078,173,1.996,180,1.38,187,0.472,194,2.155,204,1.393,233,3.58,242,0.012,243,0.012,244,0.45,245,0.732,246,0.55,247,0.756,248,0.482,249,0.55,256,0.55,259,0.835,264,1.402,268,1.078,276,0.989,278,1.078,284,1.393,296,1.283,297,1.367,306,2.172,315,2.279,325,1.566,342,2.807,346,1.224,349,0.805,353,2.277,354,1.127,355,1.999,357,0.98,358,1.38,359,2.207,360,2.234,361,1.779,362,2.106,363,1.685,364,1.057,367,1.897,368,2.159,369,2.275,370,2.076,371,0.98,372,0.917,374,2.5,376,1.767,377,2.31,378,2.071,379,1.712,380,2.006,381,0.859,382,1.313,383,0.917,384,1.305,385,1.305,386,2.159,387,1.897,388,1.148,389,1.763,390,0.859,391,1.579,392,1.48,393,0.98,394,0.98,398,0.98,400,0.98,402,1.809,403,2.441,404,2.012,405,1.489,406,1.049,407,2.076,408,1.997,409,1.127,411,2.934,412,2.414,413,1.393,414,1.224,418,1.882,425,3.054,427,1.801,428,1.801,429,2.424,430,2.025,433,1.049,434,1.579,435,0.98,437,2.185,438,1.429,439,1.127,441,1.996,442,2.628,443,1.429,444,1.429,445,1.429,447,2.012,448,1.127,452,1.127,457,1.429,458,1.743,459,1.569,464,2.59,469,1.845,470,1.214,472,1.127,473,1.882,480,1.712,481,1.685,485,1.214,486,0.55,487,0.783,488,0.684,489,0.55,490,1.129,491,0.55,492,1.369,493,0.55,494,0.482,495,0.55,496,0.482,497,0.886,498,0.55,499,0.515,500,0.55,501,0.482,502,0.482,503,0.55,504,0.482,505,0.878,506,0.835,507,0.482,508,0.55,509,0.45,510,0.42,511,0.835,512,0.515,513,0.45,514,0.482,515,0.55,516,0.989,517,0.55,518,0.989,519,0.482,520,0.55,521,0.45,522,0.482,523,0.835,524,0.482,525,0.55,526,0.515,527,0.55,528,0.45,529,0.515,530,0.515,531,0.482,532,0.482,533,0.482,534,0.55,535,0.482,536,0.482,537,0.55,538,0.482,539,0.55,540,0.482,541,0.45,542,0.482,543,0.42,544,0.55,545,0.515,546,0.55,547,0.482,548,0.45,549,0.482,550,0.55,551,1.121,552,1.411,553,0.55,554,0.45,555,0.482,556,0.45,557,0.55,558,0.55,572,1.224,575,1.214,576,1.214,613,3.158,619,2.953,620,3.793,625,2.628,630,2.441,636,2.172,640,1.996,642,1.732,646,2.441,647,3.222,649,2.155,653,1.996,661,1.743,675,1.595,676,2.279,682,1.977,684,2.65,686,3.005,689,3.005,691,2.98,692,2.98,693,2.384,695,2.934,696,2.172,697,1.569,698,1.569,699,3.024,702,1.977,703,1.313,704,1.569,705,1.569,706,2.935,718,1.785,739,1.47,740,2.283,790,1.595,840,2.172,843,1.429,851,3.833,857,1.712,863,1.313,864,2.875,865,1.569,934,2.884,970,3.991,983,0.756,984,1.127,985,1.313,994,2.697,1044,1.845,1050,2.384,1093,2.384,1114,1.595,1116,2.935,1151,3.324,1200,1.569,1202,2.65,1379,2.172,1558,1.743,1563,1.429,1569,2.384,1572,2.935,1575,1.569,1577,1.313,1578,1.743,1731,2.884,1836,3.205,1839,4.055,1842,3.851,1844,4.055,1881,4.215,1882,3.005,1892,3.205,1901,2.65,1913,4.215,1917,2.172,1923,3.222,1924,1.743,1926,1.743,1927,1.743,1928,1.743,1929,1.569,1930,1.743,1931,1.743,1932,1.743,1933,1.743,1934,1.743,1935,1.743,1936,1.743,1937,1.743,1938,3.205,1939,1.743,1940,1.743,1941,1.743,1942,2.65,1943,1.743,1944,1.743,1945,1.429,1946,1.743,1947,3.205,1949,2.384,1951,2.384,1952,2.65,1953,1.743,1955,1.743,1956,1.743,1957,1.743,1958,1.743,1959,2.65,1960,1.743,1961,3.205,1962,2.65,1997,1.977,2010,3.005,2071,2.65,2072,2.65,2084,2.384,2085,1.977,2086,1.977,2087,1.977,2158,3.005,2322,2.65,2338,3.58,2368,2.172,2694,4.061,2732,1.977,2760,3.005,2788,5.145,2789,5.145,2790,1.977,2791,3.545,2792,4.79,2793,4.288,2794,3.545,2795,5.152,2796,4.288,2797,4.288,2798,3.545,2799,3.545,2800,2.332,2801,3.545,2802,3.545,2803,2.332,2804,3.545,2805,3.545,2806,3.545,2807,3.545,2808,3.545,2809,2.332,2810,2.332,2811,5.425,2812,5.425,2813,2.332,2814,5.951,2815,2.332,2816,2.332,2817,3.005,2818,2.332,2819,3.545,2820,2.332,2821,2.332,2822,2.332,2823,2.332,2824,3.545,2825,4.79,2826,2.332,2827,3.545,2828,2.332,2829,2.332,2830,3.545,2831,3.545,2832,3.545,2833,3.545,2834,3.545,2835,3.545,2836,3.545,2837,3.545,2838,2.332,2839,2.332,2840,3.545,2841,2.332,2842,2.332]],["title/components/WelcomeScreenComponent.html",[26,0.075,554,0.666]],["body/components/WelcomeScreenComponent.html",[3,0.263,4,0.263,5,0.225,7,0.887,14,0.614,24,0.025,25,0.565,26,0.133,32,0.517,50,0.889,51,0.717,56,0.302,59,0.565,60,0.786,65,1.047,66,0.89,67,0.526,68,0.818,69,0.637,70,0.664,71,0.818,75,0.565,76,0.951,79,0.637,88,0.717,92,0.614,104,0.471,140,3.476,187,0.756,242,0.02,243,0.02,244,0.889,245,1.172,246,1.085,248,0.951,249,1.085,256,1.085,486,1.085,487,1.252,488,1.095,489,1.085,490,1.512,491,1.085,492,1.618,493,1.085,494,0.951,495,1.085,496,0.951,497,0.951,498,1.085,499,1.017,500,1.085,501,0.951,502,0.951,503,1.085,504,0.951,505,0.717,506,1.337,507,0.951,508,1.085,509,0.889,510,0.829,511,1.337,512,1.017,513,0.889,514,0.951,515,1.085,516,0.951,517,1.085,518,0.951,519,0.951,520,1.085,521,0.889,522,0.951,523,1.337,524,0.951,525,1.085,526,1.017,527,1.085,528,0.889,529,1.017,530,1.017,531,0.951,532,0.951,533,0.951,534,1.085,535,0.951,536,0.951,537,1.085,538,0.951,539,1.085,540,0.951,541,0.889,542,0.951,543,0.829,544,1.085,545,1.017,546,1.085,547,0.951,548,0.889,549,0.951,550,1.085,551,0.951,552,1.017,553,1.085,554,1.238,555,1.404,556,1.186,557,1.085,558,1.085,570,3.194,690,4.809,831,4.24,832,2.952,969,3.194,1546,3.476,1788,3.816,2106,4.809,2420,3.443,2843,3.905,2844,3.905,2845,5.673,2846,5.673,2847,5.673,2848,4.809,2849,5.673,2850,5.673,2851,6.416,2852,5.673,2853,5.673,2854,4.809,2855,5.673]],["title/coverage.html",[2856,3.986]],["body/coverage.html",[0,0.72,1,3.098,5,0.202,6,4.154,7,0.988,8,4.5,9,3.101,14,0.823,23,0.335,24,0.025,26,0.156,46,1.526,48,1.629,50,0.8,52,3.098,54,1.741,59,0.508,60,0.651,76,0.856,92,0.823,129,1.667,187,0.552,242,0.019,243,0.019,244,0.8,250,3.968,251,3.968,263,2.787,388,1.72,437,2.255,494,0.856,496,0.856,499,0.915,501,0.856,502,0.856,504,0.856,507,0.856,509,0.8,512,0.915,514,0.856,516,0.856,518,0.856,519,0.856,521,0.8,524,0.856,526,0.915,528,0.8,529,0.915,531,0.856,532,1.096,533,0.856,535,0.856,538,0.856,540,0.856,541,0.8,543,0.746,545,0.915,547,0.856,549,0.856,551,0.856,554,0.8,559,3.513,586,3.098,588,3.098,594,3.785,595,2.539,597,3.513,598,3.098,610,3.513,611,3.513,612,3.513,707,1.865,708,3.595,718,1.183,719,2.595,744,2.156,758,2.156,759,3.513,760,3.098,813,3.513,858,3.513,889,3.513,890,3.098,891,4.965,999,2.787,1000,4.378,1001,3.939,1002,4.378,1543,3.513,1550,3.513,1593,3.513,1623,3.513,1624,3.098,1625,4.5,1735,3.513,1743,3.513,1744,3.939,1745,3.939,1754,2.787,1833,3.513,1834,3.513,1963,3.513,1964,3.513,2090,3.513,2230,2.787,2244,3.513,2336,3.968,2337,3.968,2344,2.787,2400,3.513,2411,3.968,2412,4.5,2414,3.513,2419,4.5,2420,3.098,2425,3.513,2624,3.57,2656,3.513,2788,3.513,2789,3.513,2790,3.513,2817,4.965,2843,3.513,2844,3.513,2856,3.513,2857,3.513,2858,4.144,2859,4.144,2860,5.857,2861,4.144,2862,5.857,2863,5.857,2864,4.144,2865,4.144,2866,4.144,2867,6.176,2868,5.308,2869,3.513,2870,3.513,2871,6.385,2872,4.144,2873,4.144,2874,4.144,2875,4.144,2876,4.144,2877,4.144,2878,4.144,2879,5.857,2880,4.144,2881,4.144,2882,4.144,2883,6.385,2884,4.144,2885,4.144,2886,4.144,2887,4.144,2888,4.144,2889,4.144,2890,4.144,2891,4.144,2892,4.144,2893,4.144,2894,5.857,2895,4.144,2896,4.144,2897,4.144,2898,4.144,2899,4.144,2900,4.144,2901,4.144,2902,4.144,2903,4.144,2904,4.144,2905,4.144,2906,4.144,2907,4.965,2908,5.857,2909,5.308,2910,4.144,2911,4.144,2912,5.308,2913,4.144,2914,4.144,2915,4.965,2916,4.144,2917,5.308,2918,3.513,2919,5.308,2920,3.513,2921,4.144,2922,4.144,2923,4.144,2924,4.144,2925,5.308,2926,4.144,2927,4.144,2928,4.144,2929,4.144,2930,4.144,2931,4.144,2932,4.144,2933,4.144,2934,4.144,2935,4.144,2936,4.144,2937,4.144,2938,4.144,2939,4.144,2940,3.513,2941,3.513,2942,4.144,2943,3.513]],["title/dependencies.html",[2944,2.445,2945,3.1]],["body/dependencies.html",[24,0.025,32,0.599,34,0.831,36,1.622,242,0.022,243,0.022,572,1.842,585,4.523,613,2.776,778,3.269,877,3.588,1012,3.988,1013,3.988,1815,4.523,2945,3.988,2946,5.335,2947,7.045,2948,5.335,2949,6.194,2950,5.335,2951,5.335,2952,5.335,2953,5.335,2954,6.194,2955,5.251,2956,5.335,2957,5.335,2958,5.335,2959,5.335,2960,5.335,2961,5.335,2962,5.335,2963,5.335,2964,6.194,2965,5.335,2966,5.335,2967,5.335,2968,5.335,2969,5.335,2970,5.335,2971,5.335,2972,5.335]],["title/index.html",[16,0.165,2973,2.884,2974,2.884]],["body/index.html",[3,0.198,4,0.198,5,0.23,7,0.917,14,0.461,18,0.576,24,0.026,51,0.539,59,0.705,60,0.761,64,2.276,66,0.705,67,0.497,79,0.646,83,1.948,88,0.734,91,0.87,92,0.461,100,2.417,104,0.65,151,2.121,166,3.169,187,0.461,202,1.262,217,2.587,223,1.948,242,0.016,243,0.016,245,0.973,253,2.888,305,4.005,338,3.132,342,1.672,346,1.195,350,2.653,358,0.927,375,1.801,432,1.801,449,2.261,468,2.12,469,2.452,487,1.04,497,1.107,505,1.021,510,1.036,513,1.11,522,0.715,532,0.715,536,0.715,542,0.715,548,1.266,552,0.764,555,0.973,563,2.934,564,2.934,570,3.496,598,2.587,613,3.132,614,2.587,617,3.525,618,3.169,619,2.528,620,2.327,645,4.048,646,1.454,715,2.528,718,1.529,721,1.454,742,2.12,746,1.852,748,2.653,754,2.452,755,2.251,763,1.801,778,3.805,792,1.801,832,3.412,863,2.653,883,2.327,892,3.733,953,2.327,960,2.327,967,1.801,968,4.543,970,3.017,979,2.121,1015,3.522,1017,1.801,1022,1.948,1023,4.005,1046,2.587,1052,2.587,1058,2.587,1064,2.327,1093,2.327,1096,2.587,1102,3.169,1108,2.587,1110,1.948,1199,2.587,1270,2.779,1383,2.653,1470,4.005,1544,2.934,1548,2.587,1571,2.934,1612,2.934,1644,2.888,1646,2.587,1767,2.587,1865,2.587,1866,2.934,1913,2.587,1951,3.604,1977,2.934,1981,3.995,1986,4.877,2025,2.934,2059,2.587,2084,3.169,2230,2.327,2368,2.888,2466,4.877,2512,2.934,2518,3.995,2519,2.587,2520,2.934,2521,2.934,2572,3.995,2624,2.327,2657,5.102,2673,2.934,2705,5.102,2848,4.543,2854,5.387,2857,4.543,2943,2.934,2945,3.522,2955,2.934,2975,4.712,2976,5.358,2977,3.46,2978,3.46,2979,4.712,2980,4.712,2981,3.46,2982,3.46,2983,4.3,2984,4.712,2985,4.712,2986,5.753,2987,5.358,2988,5.753,2989,4.712,2990,5.753,2991,5.358,2992,3.46,2993,2.934,2994,3.46,2995,4.712,2996,3.46,2997,4.712,2998,4.712,2999,5.753,3000,4.712,3001,4.712,3002,3.46,3003,3.46,3004,3.46,3005,3.46,3006,3.46,3007,3.46,3008,3.46,3009,4.712,3010,3.46,3011,4.712,3012,3.46,3013,3.46,3014,3.46,3015,3.46,3016,4.712,3017,5.358,3018,4.712,3019,4.712,3020,3.46,3021,4.712,3022,5.358,3023,4.543,3024,3.46,3025,3.46,3026,3.46,3027,3.46,3028,3.46,3029,3.46,3030,5.358,3031,3.46,3032,4.712,3033,3.46,3034,4.712,3035,4.712,3036,5.358,3037,3.46,3038,3.46,3039,3.46,3040,5.358,3041,3.46,3042,3.46,3043,3.46,3044,3.46,3045,4.712,3046,3.46,3047,3.46,3048,3.46,3049,3.46,3050,4.712,3051,3.46,3052,3.46,3053,3.46,3054,3.46,3055,3.46,3056,3.46,3057,3.46,3058,3.46,3059,3.46,3060,3.46,3061,3.46,3062,3.46,3063,5.358,3064,3.46,3065,3.46,3066,3.46,3067,3.46,3068,3.46,3069,3.46,3070,3.46,3071,3.46,3072,4.712,3073,4.712,3074,4.712,3075,4.712,3076,3.46,3077,3.46,3078,3.46,3079,3.46,3080,6.557,3081,3.46,3082,3.46,3083,3.46,3084,4.712,3085,3.46,3086,4.712,3087,3.46,3088,3.46,3089,3.46,3090,4.712,3091,3.46,3092,3.46,3093,3.46,3094,3.46,3095,3.46,3096,3.46,3097,3.46,3098,3.46,3099,3.46,3100,3.46,3101,3.46,3102,3.46,3103,3.46,3104,3.46,3105,3.46,3106,3.46,3107,3.46,3108,3.46,3109,3.46,3110,3.46,3111,3.46,3112,3.46,3113,3.46,3114,3.46,3115,3.46,3116,3.46,3117,3.46,3118,3.46,3119,3.46,3120,3.46,3121,3.46,3122,3.46,3123,3.46,3124,3.46,3125,3.46,3126,3.46,3127,3.46,3128,3.46,3129,3.46,3130,3.46,3131,3.46,3132,3.46,3133,3.46,3134,3.46,3135,3.46,3136,3.46,3137,3.46,3138,3.46,3139,3.46,3140,3.46,3141,3.46,3142,3.46,3143,3.46,3144,3.46,3145,3.46,3146,3.46,3147,3.46,3148,3.46]],["title/modules.html",[3149,3.986]],["body/modules.html",[24,0.022,242,0.022,243,0.022,3149,4.786]],["title/overview.html",[2983,3.515]],["body/overview.html",[2,1.82,24,0.022,242,0.022,243,0.022,245,1.16,596,4.199,979,3.443,2230,3.779,2907,4.763,2983,4.199]],["title/properties.html",[17,0.425,2944,2.445]],["body/properties.html",[17,0.576,24,0.023,242,0.022,243,0.022,3023,4.774,3150,5.632]],["title/miscellaneous/typealiases.html",[3151,1.94,3152,4.148]],["body/miscellaneous/typealiases.html",[12,2.307,16,0.311,23,0.311,24,0.024,60,0.768,104,0.641,242,0.022,243,0.022,548,1.308,646,2.286,715,2.286,718,1.788,739,1.553,1018,4.068,1030,3.064,1102,3.66,1317,4.068,1797,4.068,2915,4.613,2918,5.594,2920,5.594,3151,3.66,3153,5.442,3154,6.265,3155,5.442,3156,5.442,3157,5.442,3158,5.442,3159,5.442,3160,5.442,3161,5.442,3162,5.442,3163,5.442,3164,5.442]],["title/miscellaneous/variables.html",[2352,2.79,3151,1.94]],["body/miscellaneous/variables.html",[16,0.296,23,0.369,24,0.025,69,0.582,99,1.575,242,0.021,243,0.021,296,1.732,297,1.846,570,3.882,766,4.391,767,4.391,768,4.391,934,3.484,983,1.972,1194,4.551,1835,3.872,2352,3.484,2624,4.488,2869,4.391,2870,5.161,2940,4.391,2941,4.391,2993,4.391,3151,3.484,3165,5.18,3166,5.18,3167,5.18,3168,5.18,3169,5.18,3170,5.18,3171,5.18,3172,5.18,3173,5.18,3174,5.18,3175,5.18,3176,5.18,3177,5.18,3178,5.18,3179,5.18,3180,5.18,3181,5.18,3182,5.18,3183,6.088,3184,6.088,3185,6.088,3186,6.088,3187,6.088,3188,6.088,3189,6.088,3190,6.088,3191,6.088,3192,6.088,3193,6.088,3194,6.088,3195,6.088,3196,6.088]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":129,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":3150,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":2388,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["0.14.3",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":461,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["0.3s",{"_index":370,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["0/1",{"_index":2871,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2912,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2889,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2914,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2902,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2867,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2899,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2886,"title":{},"body":{"coverage.html":{}}}],["00000014",{"_index":1924,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["017643203362e",{"_index":2208,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["0px",{"_index":405,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["0rem",{"_index":1588,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1",{"_index":346,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["1.1",{"_index":455,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/InnerChannelComponent.html":{}}}],["1.125rem",{"_index":861,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["1.2rem",{"_index":870,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["1.5.5",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2908,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2863,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2929,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2898,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1164,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["10.12.5",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2939,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":437,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["100/108",{"_index":2930,"title":{},"body":{"coverage.html":{}}}],["1001",{"_index":2389,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["100px",{"_index":413,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["100vh",{"_index":698,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["100vw",{"_index":356,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["10px",{"_index":447,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["10rem",{"_index":702,"title":{},"body":{"components/AuthActionComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["11/12",{"_index":2877,"title":{},"body":{"coverage.html":{}}}],["112/121",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["119/129",{"_index":2936,"title":{},"body":{"coverage.html":{}}}],["11px",{"_index":1957,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["12/13",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["12/26",{"_index":2875,"title":{},"body":{"coverage.html":{}}}],["1200px",{"_index":1570,"title":{},"body":{"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{}}}],["125px",{"_index":879,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["1278",{"_index":1149,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["1278px",{"_index":482,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["12px",{"_index":415,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["13.12.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["138/167",{"_index":2896,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":998,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["14",{"_index":2897,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["1470",{"_index":2492,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["147px",{"_index":417,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["14px",{"_index":706,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["15",{"_index":1717,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/PrivacyComponent.html":{}}}],["150px",{"_index":995,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["15px",{"_index":433,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["16",{"_index":2230,"title":{},"body":{"components/PrivacyComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["16/19",{"_index":2906,"title":{},"body":{"coverage.html":{}}}],["160px",{"_index":697,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{}}}],["16px",{"_index":472,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["17",{"_index":2234,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["17.1.0",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["17.3.10",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["17.x",{"_index":3024,"title":{},"body":{"index.html":{}}}],["17/21",{"_index":2901,"title":{},"body":{"coverage.html":{}}}],["170px",{"_index":2086,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["17px",{"_index":887,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["18",{"_index":2240,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["18/20",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":456,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["188px",{"_index":1950,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["18px",{"_index":414,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["1:1",{"_index":2999,"title":{},"body":{"index.html":{}}}],["1:837671090070:web:f294fc70edfcf2caeccfb7",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":406,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["1s",{"_index":1590,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2",{"_index":953,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["2.3.0",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["2.3rem",{"_index":888,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["2.8.5",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2244,"title":{},"body":{"components/PrivacyComponent.html":{},"coverage.html":{}}}],["20/21",{"_index":2932,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":177,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["2000",{"_index":2606,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["200px",{"_index":465,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["2016/679",{"_index":2127,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["206px",{"_index":1730,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["20px",{"_index":376,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["21",{"_index":2283,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["220px",{"_index":1811,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["22px",{"_index":1956,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["24px",{"_index":379,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["25",{"_index":2862,"title":{},"body":{"coverage.html":{}}}],["25/30",{"_index":2865,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":416,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["260px",{"_index":1962,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["269px",{"_index":2088,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["26px",{"_index":2399,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["27/30",{"_index":2904,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":1953,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["29px",{"_index":1816,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["2px",{"_index":470,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["2rem",{"_index":703,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["3",{"_index":792,"title":{"interfaces/MessageContent-3.html":{}},"body":{"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PrivacyComponent.html":{},"index.html":{}}}],["3.2.6",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":2609,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["3000",{"_index":1906,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["300px",{"_index":1961,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["30px",{"_index":404,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["320px",{"_index":1947,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["32px",{"_index":1577,"title":{},"body":{"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["33",{"_index":2907,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["33/33",{"_index":2911,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":1817,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["335px",{"_index":1813,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["33px",{"_index":1729,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["34/35",{"_index":2893,"title":{},"body":{"coverage.html":{}}}],["345px",{"_index":1955,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["346px",{"_index":1958,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["35.2px",{"_index":1959,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["354px",{"_index":2085,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["358px",{"_index":2398,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["35px",{"_index":990,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["36px",{"_index":1960,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["371px",{"_index":1818,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["390px",{"_index":485,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["398px",{"_index":1819,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["3b22e",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b22e.appspot.com",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b22e.firebaseapp.com",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":479,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["4",{"_index":979,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/PrivacyComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{},"overview.html":{}}}],["4/8",{"_index":2872,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1412,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["400",{"_index":473,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["4000",{"_index":1742,"title":{},"body":{"components/IntroComponent.html":{}}}],["40px",{"_index":403,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["411px",{"_index":1812,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["420px",{"_index":2393,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["44/46",{"_index":2880,"title":{},"body":{"coverage.html":{}}}],["441px",{"_index":2087,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["44px",{"_index":2395,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["45",{"_index":2937,"title":{},"body":{"coverage.html":{}}}],["45px",{"_index":1929,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["46",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["46px",{"_index":1936,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["47226",{"_index":1615,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["491px",{"_index":1937,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["49px",{"_index":419,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["4px",{"_index":458,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["4rem",{"_index":1573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5",{"_index":1174,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/ImprintComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["5.375rem",{"_index":862,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["50",{"_index":388,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["500",{"_index":1945,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["50000",{"_index":965,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["500px",{"_index":1731,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["50px",{"_index":700,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["50vh",{"_index":1584,"title":{},"body":{"components/HeaderComponent.html":{}}}],["50vw",{"_index":1583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["512px",{"_index":1926,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["520px",{"_index":705,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["55.2px",{"_index":1939,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["56px",{"_index":1592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["58px",{"_index":991,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["59",{"_index":2926,"title":{},"body":{"coverage.html":{}}}],["5b5ffc",{"_index":420,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["5px",{"_index":446,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":2286,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["6.2.7",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["606px",{"_index":2838,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["60px",{"_index":438,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["62/65",{"_index":2916,"title":{},"body":{"coverage.html":{}}}],["63px",{"_index":476,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["65",{"_index":858,"title":{},"body":{"components/ChannelDialogComponent.html":{},"coverage.html":{}}}],["65px",{"_index":867,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["67/102",{"_index":2885,"title":{},"body":{"coverage.html":{}}}],["686868",{"_index":442,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["692px",{"_index":1925,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["698px",{"_index":2083,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["6px",{"_index":477,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["7.8.0",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1943,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["700",{"_index":381,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["70px",{"_index":1578,"title":{},"body":{"components/HeaderComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["76/84",{"_index":2888,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":484,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["77",{"_index":2256,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["780px",{"_index":704,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["792px",{"_index":860,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["8/8",{"_index":2909,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2900,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":2921,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":2895,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2864,"title":{},"body":{"coverage.html":{}}}],["837671090070",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84",{"_index":2905,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["868px",{"_index":885,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["87",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["87/147",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":459,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["9",{"_index":2014,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["9.2.0",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":2013,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["9/11",{"_index":2922,"title":{},"body":{"coverage.html":{}}}],["9/20",{"_index":2938,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":2876,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2883,"title":{},"body":{"coverage.html":{}}}],["920px",{"_index":701,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["92c83e",{"_index":2397,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["95",{"_index":2879,"title":{},"body":{"coverage.html":{}}}],["97",{"_index":2892,"title":{},"body":{"coverage.html":{}}}],["97/105",{"_index":2884,"title":{},"body":{"coverage.html":{}}}],["_error",{"_index":1726,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ab",{"_index":139,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["abfragen",{"_index":2152,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["abgelaufen",{"_index":1915,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["abgleich",{"_index":2159,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["above",{"_index":1400,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["abs",{"_index":2236,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["abschließend",{"_index":2323,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["absolute",{"_index":448,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["abstractcontrol",{"_index":1984,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["abwesend",{"_index":923,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["abzuschließen",{"_index":2836,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["accessible",{"_index":3068,"title":{},"body":{"index.html":{}}}],["account",{"_index":3032,"title":{},"body":{"index.html":{}}}],["achtung",{"_index":929,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["acollection",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["action",{"_index":225,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["action'},{'name",{"_index":498,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["action.component.html",{"_index":622,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.scss",{"_index":621,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts",{"_index":612,"title":{},"body":{"components/AuthActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:26",{"_index":659,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts:27",{"_index":660,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts:28",{"_index":631,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts:46",{"_index":654,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts:61",{"_index":651,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.component.ts:72",{"_index":643,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["action.html",{"_index":3082,"title":{},"body":{"index.html":{}}}],["action/auth",{"_index":611,"title":{},"body":{"components/AuthActionComponent.html":{},"coverage.html":{}}}],["actioncodesettings",{"_index":2007,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["actions",{"_index":615,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["activatedroute",{"_index":629,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["activates",{"_index":2497,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["actual",{"_index":3026,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":558,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["add",{"_index":67,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["addatsymbolandopendialog",{"_index":1301,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addatsymbolfor(member",{"_index":1524,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["added",{"_index":85,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addemoji(event",{"_index":1261,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addemojitomessage(event",{"_index":1329,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addfallbackmessageifneeded",{"_index":2594,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["adding",{"_index":58,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addition",{"_index":1765,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["additional",{"_index":751,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["additionally",{"_index":2980,"title":{},"body":{"index.html":{}}}],["addmembers",{"_index":1808,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["addmembersdialogcomponent",{"_index":76,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["addmembersdialogdata",{"_index":1,"title":{"interfaces/AddMembersDialogData.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"coverage.html":{}}}],["addmembersdialogmobilecomponent",{"_index":244,"title":{"components/AddMembersDialogMobileComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["addmembersmobiledata",{"_index":263,"title":{"interfaces/AddMembersMobileData.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"coverage.html":{}}}],["addrecipient(member",{"_index":1502,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["address",{"_index":2368,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["adds",{"_index":186,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["addsystemmessage(text",{"_index":1512,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["adjust",{"_index":3025,"title":{},"body":{"index.html":{}}}],["adjusting",{"_index":2520,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["adjusts",{"_index":1244,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["adjusttextareaheight(textarea",{"_index":1278,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["adresse",{"_index":1151,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["afterward",{"_index":1348,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["aizasyagxrdy1okm0c4htchulxb0cf3oiytg7go",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktiv",{"_index":945,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["alias",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":3153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":360,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["allchannels",{"_index":816,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["allchannels.filter((ch",{"_index":1698,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["allchannels.some",{"_index":819,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["alle",{"_index":136,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/PrivacyComponent.html":{}}}],["allein",{"_index":2174,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["allenfalls",{"_index":2319,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["allmembers",{"_index":1109,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["allow",{"_index":273,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["allowed",{"_index":423,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["allows",{"_index":1019,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["allusers",{"_index":103,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["allusers.filter((user",{"_index":1798,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["alphabetically",{"_index":1318,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["already",{"_index":152,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["alreadyselected",{"_index":1503,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["als",{"_index":2131,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["alter",{"_index":2445,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["alternativ",{"_index":2235,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["alternative",{"_index":1392,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["anbieter",{"_index":2203,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anbieter/verantwortliche",{"_index":2243,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["andere",{"_index":2157,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anderen",{"_index":2176,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anderer",{"_index":932,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["anderslautenden",{"_index":2301,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anfrage",{"_index":2315,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anfragen",{"_index":2065,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["angabe",{"_index":2317,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["angaben",{"_index":1605,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["angebotenen",{"_index":2120,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["angegebene",{"_index":2053,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["angegebenen",{"_index":2312,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["angemeldet",{"_index":2770,"title":{},"body":{"injectables/UserService.html":{}}}],["angular",{"_index":778,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular.json",{"_index":3121,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":38,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["angular/common",{"_index":34,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":664,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["angular/fire/firestore",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/storage",{"_index":2733,"title":{},"body":{"injectables/UserService.html":{}}}],["angular/forms",{"_index":36,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["angular/material/bottom",{"_index":44,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["angular/material/button",{"_index":812,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["angular/material/dialog",{"_index":42,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["angular/material/form",{"_index":809,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["angular/material/input",{"_index":811,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["angular/platform",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1589,"title":{},"body":{"components/HeaderComponent.html":{}}}],["anmelden",{"_index":1949,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["another",{"_index":765,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["anpassen",{"_index":930,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["anpassung",{"_index":2149,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["anschließenden",{"_index":2329,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ansicht",{"_index":2249,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["antworten",{"_index":2855,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["anwaltskanzlei",{"_index":2332,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["apikey",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":66,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.component.scss",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.component.spec.ts",{"_index":3110,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":3111,"title":{},"body":{"index.html":{}}}],["app.config.ts",{"_index":3112,"title":{},"body":{"index.html":{}}}],["app.routes.ts",{"_index":3113,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":494,"title":{"components/AppComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":2466,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["applicationconfig",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":644,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["applyactioncode",{"_index":663,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["applyactioncode(this.auth",{"_index":680,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["approach",{"_index":1393,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["appropriate",{"_index":657,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["appstateservice",{"_index":595,"title":{"injectables/AppStateService.html":{}},"body":{"injectables/AppStateService.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["array",{"_index":743,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["arraybuffer",{"_index":741,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["art",{"_index":2123,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["artikel",{"_index":2267,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assets/img/avatar.png",{"_index":1456,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["assets/img/default",{"_index":2585,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["assigns",{"_index":2544,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["assignthreadchannel",{"_index":2547,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["async",{"_index":625,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["attach",{"_index":1046,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["attached",{"_index":1076,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["attempts",{"_index":2792,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["auch",{"_index":2224,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["auf",{"_index":1788,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/PrivacyComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["aufbewahrungspflichten",{"_index":2299,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["aufgetreten",{"_index":1920,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["aufgrund",{"_index":2266,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["aufsichtsbehörde",{"_index":2247,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["aufwand",{"_index":2277,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["aus",{"_index":2075,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["ausgeführter",{"_index":2137,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ausgeloggt",{"_index":977,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["ausgewählte",{"_index":2410,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["auskunft",{"_index":2219,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["auslesen",{"_index":2151,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["auth",{"_index":497,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["auth.currentuser",{"_index":958,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["auth.currentuser?.uid",{"_index":939,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["auth/expired",{"_index":1916,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["auth/invalid",{"_index":1912,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["auth/too",{"_index":2061,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["auth/user",{"_index":2054,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["authactioncomponent",{"_index":496,"title":{"components/AuthActionComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["authdomain",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticates",{"_index":2720,"title":{},"body":{"injectables/UserService.html":{}}}],["authentication",{"_index":614,"title":{},"body":{"components/AuthActionComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["auto",{"_index":390,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["automatically",{"_index":3057,"title":{},"body":{"index.html":{}}}],["automatisierter",{"_index":2135,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["available",{"_index":1396,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["avatar",{"_index":449,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"index.html":{}}}],["avatar'},{'name",{"_index":500,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["avatar.html",{"_index":3083,"title":{},"body":{"index.html":{}}}],["avatar.png",{"_index":2586,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["avatar/avatar.component",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["avatar/profile",{"_index":3012,"title":{},"body":{"index.html":{}}}],["avatarcomponent",{"_index":499,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["avatardataurl",{"_index":2716,"title":{},"body":{"injectables/UserService.html":{}}}],["avatarurl",{"_index":1454,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["await",{"_index":676,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["away",{"_index":648,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["b",{"_index":844,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/PrivacyComponent.html":{}}}],["back",{"_index":2509,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["backend",{"_index":2977,"title":{},"body":{"index.html":{}}}],["background",{"_index":368,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["backtocontainer",{"_index":2516,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["backup",{"_index":1090,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["band",{"_index":1879,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["bar",{"_index":475,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["based",{"_index":1383,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["beantworten",{"_index":2321,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["beantwortet",{"_index":2324,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["beantwortung",{"_index":2318,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["bearbeitung",{"_index":2313,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["bedarf",{"_index":2365,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["beenden",{"_index":2366,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["before",{"_index":2636,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["begins",{"_index":1782,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["behavior",{"_index":2602,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["bei",{"_index":969,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/WelcomeScreenComponent.html":{}}}],["being",{"_index":2699,"title":{},"body":{"injectables/UserService.html":{}}}],["beispiel",{"_index":847,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["beitreten",{"_index":2853,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["belonging",{"_index":1760,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["below",{"_index":2025,"title":{},"body":{"components/PasswortResetComponent.html":{},"index.html":{}}}],["benutzer",{"_index":2058,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["ber",{"_index":2081,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["berblick",{"_index":2849,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["berein",{"_index":1897,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["bereitgestellten",{"_index":2242,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["bereits",{"_index":849,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["bereitstellung",{"_index":2111,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["berichtigung",{"_index":2225,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["bermittlung",{"_index":2155,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["berprüfen",{"_index":2767,"title":{},"body":{"injectables/UserService.html":{}}}],["beschreibung",{"_index":850,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["beschriebene",{"_index":2213,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["beschwerde",{"_index":2245,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["besteht",{"_index":2271,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["besten",{"_index":838,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["bestimmungen",{"_index":2255,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["bestätigen",{"_index":2837,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["bestätigung",{"_index":2216,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["betreffende",{"_index":2218,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["betreffenden",{"_index":2233,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["betroffenen",{"_index":2199,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["between",{"_index":366,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["bisher",{"_index":143,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["bitte",{"_index":693,"title":{},"body":{"components/AuthActionComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["black",{"_index":857,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["blick",{"_index":2210,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["block",{"_index":993,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["blue",{"_index":412,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["blur",{"_index":1999,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["bold",{"_index":1942,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["boolean",{"_index":603,"title":{},"body":{"injectables/AppStateService.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["border",{"_index":386,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["both",{"_index":1373,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"injectables/UserService.html":{}}}],["bottom",{"_index":252,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["bottomsheet",{"_index":62,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["bottomsheetref",{"_index":111,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["box",{"_index":429,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["box.ng",{"_index":1732,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["branch",{"_index":3126,"title":{},"body":{"index.html":{}}}],["brief",{"_index":271,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["brightness(0",{"_index":393,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["brightness(100",{"_index":400,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["brightness(93",{"_index":1934,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["broadcast",{"_index":1101,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["broadcastchannels",{"_index":709,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["broadcastdata",{"_index":1533,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["broadcastmessagedata",{"_index":707,"title":{"interfaces/BroadcastMessageData.html":{}},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"coverage.html":{}}}],["browser",{"_index":2955,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bspw",{"_index":2325,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["btn",{"_index":451,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["buildbroadcastdata(channels",{"_index":1542,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["buildnewchannel",{"_index":1632,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["buildnewchannel(name",{"_index":1649,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["buildparentmessage",{"_index":2578,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["builds",{"_index":1541,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["built",{"_index":2546,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["button",{"_index":411,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["button:disabled",{"_index":483,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["bzw",{"_index":2228,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["c",{"_index":820,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["c.name.tolowercase",{"_index":821,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["cached",{"_index":2646,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["calendar",{"_index":1219,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["callback",{"_index":2678,"title":{},"body":{"injectables/UserService.html":{}}}],["callback(users",{"_index":2782,"title":{},"body":{"injectables/UserService.html":{}}}],["called",{"_index":1243,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["caller",{"_index":777,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["calls",{"_index":656,"title":{},"body":{"components/AuthActionComponent.html":{},"components/InnerChannelComponent.html":{}}}],["canceled",{"_index":1028,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["cancelediting(msg",{"_index":1397,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["cancels",{"_index":224,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["card",{"_index":1271,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{}}}],["case",{"_index":1437,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["catch",{"_index":158,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["catch((err",{"_index":1521,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["catch((error",{"_index":1346,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["categories",{"_index":3157,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["caught",{"_index":1858,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["ccc",{"_index":440,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/PasswortResetComponent.html":{}}}],["cd",{"_index":3039,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1762,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["cdkconnectedoverlayhasbackdrop]=\"false",{"_index":335,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["cdkconnectedoverlaypositions",{"_index":336,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["cdkoverlay",{"_index":63,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["cdr",{"_index":1641,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["center",{"_index":362,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["certain",{"_index":2573,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["ch",{"_index":1709,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ch.id",{"_index":1468,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["ch.membersuid.includes(userid",{"_index":1699,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ch.name",{"_index":1469,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ch.name.tolowercase",{"_index":1710,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["change",{"_index":1646,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["changedetectorref",{"_index":1642,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["changes",{"_index":967,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["changes['recipientid",{"_index":1311,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["changes['recipientid'].isfirstchange",{"_index":1312,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["channel",{"_index":60,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["channel's",{"_index":799,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["channel'},{'name",{"_index":523,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["channel.component",{"_index":2417,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["channel.component.html",{"_index":1628,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.scss",{"_index":1627,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts",{"_index":1625,"title":{},"body":{"components/InnerChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:100",{"_index":1654,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:118",{"_index":1659,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:127",{"_index":1662,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:142",{"_index":1651,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:159",{"_index":1675,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:168",{"_index":1671,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:179",{"_index":1679,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:187",{"_index":1664,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:34",{"_index":1683,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:39",{"_index":1648,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:42",{"_index":1687,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:45",{"_index":1685,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:54",{"_index":1680,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:57",{"_index":1691,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:60",{"_index":1690,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:62",{"_index":1643,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:69",{"_index":1681,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:80",{"_index":1667,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.component.ts:91",{"_index":1666,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.html",{"_index":3090,"title":{},"body":{"index.html":{}}}],["channel.ng",{"_index":1733,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channel.service",{"_index":49,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["channel.service.ts",{"_index":3108,"title":{},"body":{"index.html":{}}}],["channel/inner",{"_index":1624,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["channel/thread",{"_index":2425,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["channeldata",{"_index":2566,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["channeldata?.name",{"_index":2569,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["channeldialogcomponent",{"_index":501,"title":{"components/ChannelDialogComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["channelid",{"_index":19,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["channelmessagedata",{"_index":758,"title":{"interfaces/ChannelMessageData.html":{}},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"coverage.html":{}}}],["channelname",{"_index":20,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["channelnameexists",{"_index":770,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["channels",{"_index":832,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["channels.length",{"_index":1532,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["channels.map((ch",{"_index":1467,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["channelselected",{"_index":1639,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["channelservice",{"_index":48,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["channel—helpful",{"_index":3046,"title":{},"body":{"index.html":{}}}],["char",{"_index":1402,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["character",{"_index":1004,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["characters",{"_index":794,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["chars",{"_index":808,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["chat",{"_index":505,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["chat'},{'name",{"_index":503,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["chat.component.html",{"_index":2426,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["chat.component.scss",{"_index":2427,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["chat/chat.component",{"_index":581,"title":{},"body":{"components/AppComponent.html":{}}}],["chatcomponent",{"_index":502,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["chatheadercomponent",{"_index":504,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["chatheaderref",{"_index":2454,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["chats",{"_index":3000,"title":{},"body":{"index.html":{}}}],["chatting",{"_index":3066,"title":{},"body":{"index.html":{}}}],["check",{"_index":1982,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["checkdesktopwidth",{"_index":1152,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["checkemailexists",{"_index":1971,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["checkemailexists(email",{"_index":1979,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["checks",{"_index":790,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["child",{"_index":884,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["childmessages",{"_index":2541,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["chosen",{"_index":764,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{}}}],["class",{"_index":75,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["class=\"more",{"_index":347,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["class=\"selected",{"_index":344,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["clean",{"_index":3132,"title":{},"body":{"index.html":{}}}],["clearbroadcastinput(textarea",{"_index":1501,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["cleared",{"_index":1471,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["clearing",{"_index":1273,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["clears",{"_index":2002,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["clearsearchdata",{"_index":1476,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["cleartimeout(this.inactivitytimeout",{"_index":963,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["cli",{"_index":3022,"title":{},"body":{"index.html":{}}}],["click",{"_index":1470,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["clone",{"_index":3034,"title":{},"body":{"index.html":{}}}],["close",{"_index":84,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["closed",{"_index":1026,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["closedialog",{"_index":772,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["closedialogorsheet",{"_index":239,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["closeemojipicker(msg",{"_index":1341,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["closeimagemodal",{"_index":1269,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["closeprofilecard(textarea",{"_index":1274,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["closes",{"_index":203,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["closesearch",{"_index":1418,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["closewelcome",{"_index":2496,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["closing",{"_index":82,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{}}}],["code",{"_index":645,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["codes",{"_index":1857,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["collapsed",{"_index":1689,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["collection",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["collection(this.firestore",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["collectiondata",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["collectiondata(acollection",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":369,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["column",{"_index":408,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["combination",{"_index":1359,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["come",{"_index":1758,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["command",{"_index":3055,"title":{},"body":{"index.html":{}}}],["comments",{"_index":3144,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["communication",{"_index":2979,"title":{},"body":{"index.html":{}}}],["comparison",{"_index":1213,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["comparisons",{"_index":1072,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["completed",{"_index":1027,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["compodoc",{"_index":2991,"title":{},"body":{"index.html":{}}}],["component",{"_index":26,"title":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["component.html",{"_index":3079,"title":{},"body":{"index.html":{}}}],["component.scss",{"_index":3105,"title":{},"body":{"index.html":{}}}],["component.ts",{"_index":3104,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":491,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["components",{"_index":245,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{},"overview.html":{}}}],["confirm",{"_index":1867,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["confirmpassword",{"_index":1870,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["confirmpasswordreset",{"_index":1884,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["confirmpasswordreset(this.auth",{"_index":1900,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["considered",{"_index":807,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["console.error",{"_index":1347,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["console.error('error",{"_index":1522,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["console.log",{"_index":1344,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["const",{"_index":180,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["constructing",{"_index":1978,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(auth",{"_index":1846,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["constructor(channelservice",{"_index":1753,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["constructor(dialog",{"_index":1640,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["constructor(dialogref",{"_index":774,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["constructor(firestore",{"_index":1975,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["constructor(location",{"_index":1598,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["constructor(private",{"_index":1563,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(route",{"_index":628,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["constructor(router",{"_index":1558,"title":{},"body":{"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(userservice",{"_index":262,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{}}}],["constructs",{"_index":2799,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["contact",{"_index":1612,"title":{},"body":{"components/ImprintComponent.html":{},"index.html":{}}}],["contain",{"_index":1824,"title":{},"body":{"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{}}}],["container",{"_index":353,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["container:hover",{"_index":1814,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["containing",{"_index":1017,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"index.html":{}}}],["contains",{"_index":2477,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["content",{"_index":364,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["content.emojis",{"_index":1343,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["contents",{"_index":2982,"title":{},"body":{"index.html":{}}}],["context",{"_index":15,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["contexts",{"_index":2515,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["contrast(104",{"_index":1935,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["contrast(90",{"_index":401,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["contributing",{"_index":2989,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":3124,"title":{},"body":{"index.html":{}}}],["control",{"_index":855,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/PasswortResetComponent.html":{}}}],["control.mdc",{"_index":852,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["controls",{"_index":95,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/NewPasswortComponent.html":{}}}],["conversation",{"_index":1056,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["conversation's",{"_index":1156,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["conversationid",{"_index":724,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["conversations",{"_index":3002,"title":{},"body":{"index.html":{}}}],["convid",{"_index":1485,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["copies",{"_index":2350,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["copy",{"_index":300,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["correct",{"_index":2555,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["corresponding",{"_index":1199,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["cors",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1005,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["counts",{"_index":1018,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"miscellaneous/typealiases.html":{}}}],["cover",{"_index":985,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["coverage",{"_index":2856,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":3063,"title":{},"body":{"index.html":{}}}],["createbroadcastmessagedata",{"_index":1491,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["createchannel",{"_index":1633,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["createchannel(name",{"_index":1653,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["created",{"_index":2992,"title":{},"body":{"index.html":{}}}],["createdby",{"_index":1693,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["creates",{"_index":796,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["creating",{"_index":761,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{}}}],["creating/updating",{"_index":781,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["creation",{"_index":1672,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["creatorname",{"_index":1650,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["credential",{"_index":2762,"title":{},"body":{"injectables/UserService.html":{}}}],["ctrl/ngx",{"_index":1012,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"dependencies.html":{}}}],["current",{"_index":284,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["currentchannels",{"_index":1670,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["currentdate",{"_index":1070,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["currently",{"_index":1087,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{}}}],["currentmessageid",{"_index":1089,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["currentmobileview",{"_index":2448,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["currentuid",{"_index":938,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["currentuser",{"_index":957,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["currentuserstatus",{"_index":895,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["cursor",{"_index":384,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["custom",{"_index":639,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["custom_elements_schema",{"_index":2413,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["customize",{"_index":2981,"title":{},"body":{"index.html":{}}}],["d9d9d9",{"_index":478,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["dabei",{"_index":2311,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["dabubble",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["damit",{"_index":2363,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["darüber",{"_index":2257,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["das",{"_index":1325,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["dass",{"_index":2250,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["data.members",{"_index":1831,"title":{},"body":{"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["data.useremail",{"_index":2386,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["data.username",{"_index":2385,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["database",{"_index":1977,"title":{},"body":{"components/PasswortResetComponent.html":{},"index.html":{}}}],["date",{"_index":710,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["date().tolocaletimestring",{"_index":1495,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date(datestring",{"_index":1212,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date(year",{"_index":1211,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date.tolocaledatestring('de",{"_index":1193,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date1.getdate",{"_index":1222,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date1.getfullyear",{"_index":1226,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date1.getmonth",{"_index":1224,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date2",{"_index":1221,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date2.getdate",{"_index":1223,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date2.getfullyear",{"_index":1227,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["date2.getmonth",{"_index":1225,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["daten",{"_index":2098,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["datenschutz",{"_index":1549,"title":{},"body":{"components/FooterComponent.html":{},"components/PrivacyComponent.html":{}}}],["datenschutzerklärung",{"_index":2096,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["datenschutzrechtliche",{"_index":2254,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["datenschutzrechtlichen",{"_index":2205,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["datenverarbeitung",{"_index":2201,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["dates",{"_index":1217,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["datestring",{"_index":1181,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["datestring.split",{"_index":1205,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["datum",{"_index":1183,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["dauer",{"_index":2169,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["day",{"_index":1190,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["dazu",{"_index":2259,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["dd.mm.yyyy",{"_index":1197,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["de",{"_index":1194,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"miscellaneous/variables.html":{}}}],["deactivating",{"_index":2621,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["decides",{"_index":1422,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["decoration",{"_index":1940,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["decorators",{"_index":302,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["deep",{"_index":351,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["deep.mat",{"_index":880,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["default",{"_index":296,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":264,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["defines",{"_index":745,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["dein",{"_index":1793,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["deine",{"_index":690,"title":{},"body":{"components/AuthActionComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["deinem",{"_index":834,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["delay",{"_index":272,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["delete",{"_index":3014,"title":{},"body":{"index.html":{}}}],["deletedoc",{"_index":2727,"title":{},"body":{"injectables/UserService.html":{}}}],["deletedoc(userdocref",{"_index":2787,"title":{},"body":{"injectables/UserService.html":{}}}],["deletes",{"_index":2693,"title":{},"body":{"injectables/UserService.html":{}}}],["den",{"_index":2158,"title":{},"body":{"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["denen",{"_index":2262,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["dependencies",{"_index":2945,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["dependencies:example",{"_index":3148,"title":{},"body":{"index.html":{}}}],["dependenciesmake",{"_index":3145,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1147,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["depth",{"_index":3001,"title":{},"body":{"index.html":{}}}],["der",{"_index":1379,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["deren",{"_index":1796,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/PrivacyComponent.html":{}}}],["des",{"_index":1327,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["describing",{"_index":1993,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["description",{"_index":10,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["descriptive",{"_index":1859,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["design",{"_index":3020,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":1110,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["dessen",{"_index":2280,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["detail",{"_index":1066,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["details",{"_index":2521,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["detection",{"_index":1647,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["detects",{"_index":2469,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["determine",{"_index":2024,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["determines",{"_index":2534,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["determinethreadid(message",{"_index":2639,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["dev",{"_index":3147,"title":{},"body":{"index.html":{}}}],["devspace'},{'name",{"_index":508,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["devspace.html",{"_index":3085,"title":{},"body":{"index.html":{}}}],["devspace/devspace.component",{"_index":2416,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["devspacecomponent",{"_index":507,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["devspaceref",{"_index":2457,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["dflex(center",{"_index":696,"title":{},"body":{"components/AuthActionComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dflex(flex",{"_index":1941,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dflex(null",{"_index":1572,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dflex(space",{"_index":2390,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog",{"_index":14,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["dialog'},{'name",{"_index":492,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["dialog.component",{"_index":53,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["dialog.component.html",{"_index":72,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.scss",{"_index":74,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts",{"_index":9,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:103",{"_index":2347,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:105",{"_index":795,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.component.ts:111",{"_index":2353,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:113",{"_index":1779,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:115",{"_index":2349,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:121",{"_index":1783,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:133",{"_index":780,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.component.ts:135",{"_index":1773,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:149",{"_index":1781,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:165",{"_index":1778,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":1774,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:186",{"_index":1770,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":2401,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1825,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1821,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":2408,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":2407,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1757,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":2369,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:45",{"_index":1759,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1830,"title":{},"body":{"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1829,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":2406,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":1761,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":2367,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1763,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":798,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":1828,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1766,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":800,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.component.ts:62",{"_index":2345,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":2403,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":1768,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":806,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:69",{"_index":1827,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":775,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:72",{"_index":2356,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":1786,"title":{},"body":{"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["dialog.component.ts:80",{"_index":805,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:81",{"_index":804,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.component.ts:87",{"_index":1771,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":782,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.component.ts:96",{"_index":789,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog.html",{"_index":3080,"title":{},"body":{"index.html":{}}}],["dialog/add",{"_index":8,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"coverage.html":{}}}],["dialog/channel",{"_index":760,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":2891,"title":{},"body":{"coverage.html":{}}}],["dialog/member",{"_index":1745,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"coverage.html":{}}}],["dialog/members",{"_index":813,"title":{},"body":{"components/ChannelDialogComponent.html":{},"coverage.html":{}}}],["dialog/overlay",{"_index":57,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["dialog/profil",{"_index":2337,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"coverage.html":{}}}],["dialog/selected",{"_index":52,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/SelectedMembersDialogComponent.html":{},"coverage.html":{}}}],["dialog__content",{"_index":881,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialog__surface",{"_index":426,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["dialog__title",{"_index":882,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["dialogref",{"_index":110,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1721,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["dialogs",{"_index":1645,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["die",{"_index":1790,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["diejenigen",{"_index":1789,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["dienen",{"_index":833,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["diese",{"_index":2046,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["dieser",{"_index":2060,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["dieses",{"_index":2204,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["different",{"_index":2592,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["digit",{"_index":1191,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["direct",{"_index":510,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["direction",{"_index":407,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive",{"_index":489,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["directives",{"_index":557,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["directmessagescomponent",{"_index":509,"title":{"components/DirectMessagesComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["direkt",{"_index":2850,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["direktnachrichten",{"_index":982,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["direktwerbung",{"_index":2289,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["disabled",{"_index":421,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["discussion",{"_index":3045,"title":{},"body":{"index.html":{}}}],["discussions",{"_index":3009,"title":{},"body":{"index.html":{}}}],["display",{"_index":358,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["displayed",{"_index":2338,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/VerifyEmailComponent.html":{}}}],["displays",{"_index":1399,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["distanz",{"_index":1734,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["dm",{"_index":3010,"title":{},"body":{"index.html":{}}}],["doc",{"_index":2561,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["doc(this.firestore",{"_index":2738,"title":{},"body":{"injectables/UserService.html":{}}}],["doc.data",{"_index":2775,"title":{},"body":{"injectables/UserService.html":{}}}],["doc.id",{"_index":2774,"title":{},"body":{"injectables/UserService.html":{}}}],["document",{"_index":747,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["document.getelementbyid(`message",{"_index":2600,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["document.queryselector('app",{"_index":2615,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["document:keydown",{"_index":909,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["document:mousemove",{"_index":910,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["documentation",{"_index":2857,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doeschannelnameexist",{"_index":1634,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["doeschannelnameexist(name",{"_index":1658,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["doesn't",{"_index":1438,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["dom",{"_index":248,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["dort",{"_index":2119,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["down",{"_index":988,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["dritte",{"_index":2186,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["dropdown",{"_index":96,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["dsgvo",{"_index":2129,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["duisburg",{"_index":1616,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["duplicates",{"_index":1655,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["durch",{"_index":1609,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["during",{"_index":1458,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["dynamic",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":691,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"components/ImprintComponent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["e.emoji",{"_index":1171,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["e.g",{"_index":755,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"index.html":{}}}],["e.target?.result",{"_index":1255,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["each",{"_index":1052,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["ease",{"_index":371,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ebenfalls",{"_index":2282,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ed1e79",{"_index":1946,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["edit",{"_index":513,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["editableuseremail",{"_index":2795,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["editchanneldialogcomponent",{"_index":512,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["edited",{"_index":1088,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["editing",{"_index":1093,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["editsquareclicked",{"_index":2455,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["eigener",{"_index":2188,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ein",{"_index":1917,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["eine",{"_index":2080,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["einem",{"_index":2275,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["einer",{"_index":2326,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["eines",{"_index":2112,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["eingeloggt",{"_index":974,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["eingeschränkt",{"_index":2320,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["eingesetzten",{"_index":2183,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["einschränkung",{"_index":2161,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["einzelnen",{"_index":2302,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["element",{"_index":488,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["element.classlist.add('highlight",{"_index":2604,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["element.classlist.remove('highlight",{"_index":2605,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["element.scrollintoview",{"_index":2601,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["elementref",{"_index":1007,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ellipsis",{"_index":997,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["email",{"_index":619,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/Member.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["email'},{'name",{"_index":553,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["email.component.html",{"_index":2794,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.scss",{"_index":2793,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":2790,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:104",{"_index":2815,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:121",{"_index":2810,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:44",{"_index":2816,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:49",{"_index":2818,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:54",{"_index":2820,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:59",{"_index":2798,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:70",{"_index":2800,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:90",{"_index":2803,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.html",{"_index":3100,"title":{},"body":{"index.html":{}}}],["email/password",{"_index":3016,"title":{},"body":{"index.html":{}}}],["email/verify",{"_index":2789,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["emailauthprovider",{"_index":2728,"title":{},"body":{"injectables/UserService.html":{}}}],["emailauthprovider.credential(user.email",{"_index":2763,"title":{},"body":{"injectables/UserService.html":{}}}],["emailexists",{"_index":2044,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["emailpattern",{"_index":1967,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["emails",{"_index":2018,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["emailvalidator",{"_index":1972,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["emailvalidator(control",{"_index":1983,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["emits",{"_index":1415,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["emitted",{"_index":81,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["emitting",{"_index":1417,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["emoji",{"_index":877,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"dependencies.html":{}}}],["emojiitem",{"_index":999,"title":{"interfaces/EmojiItem.html":{}},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"coverage.html":{}}}],["emojis",{"_index":742,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["empfänger",{"_index":2261,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["empty",{"_index":952,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["en",{"_index":1494,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["enables",{"_index":2978,"title":{},"body":{"index.html":{}}}],["encountered",{"_index":1873,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["end",{"_index":480,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ende",{"_index":1378,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ensure",{"_index":2572,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["ensurecurrentuserincluded",{"_index":1635,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ensurecurrentuserincluded(members",{"_index":1660,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ensures",{"_index":1656,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ensuring",{"_index":1294,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["enter",{"_index":1282,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["enterforcedmobilemode",{"_index":2499,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["entering",{"_index":2807,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["enters",{"_index":2488,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["entfernt",{"_index":1345,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["entfällt",{"_index":2296,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["entgegenstehen",{"_index":2300,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["enthalten",{"_index":1791,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["enthält",{"_index":134,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["entscheiden",{"_index":2178,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["entweder",{"_index":2173,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["entwickler",{"_index":1728,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["entwicklerteam",{"_index":2459,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["entwicklerteam'},{'name",{"_index":515,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["entwicklerteam.html",{"_index":3087,"title":{},"body":{"index.html":{}}}],["entwicklerteam/entwicklerteam.component",{"_index":1692,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["entwicklerteamcomponent",{"_index":514,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["entwicklerteams",{"_index":1629,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["enumerates",{"_index":3155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["environment",{"_index":2624,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.prod.ts",{"_index":3118,"title":{},"body":{"index.html":{}}}],["environment.ts",{"_index":3117,"title":{},"body":{"index.html":{}}}],["environments",{"_index":3116,"title":{},"body":{"index.html":{}}}],["erfassen",{"_index":2145,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["erfolgt",{"_index":2268,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["erforderlich",{"_index":2237,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/UserService.html":{}}}],["erforderlichkeit",{"_index":2108,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["erhalt",{"_index":2241,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["erheben",{"_index":2144,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["erneut",{"_index":2070,"title":{},"body":{"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["err",{"_index":1356,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["error",{"_index":864,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["error('benutzer",{"_index":2778,"title":{},"body":{"injectables/UserService.html":{}}}],["error('kein",{"_index":2769,"title":{},"body":{"injectables/UserService.html":{}}}],["error('no",{"_index":2750,"title":{},"body":{"injectables/UserService.html":{}}}],["error('passwort",{"_index":2768,"title":{},"body":{"injectables/UserService.html":{}}}],["error('user",{"_index":2743,"title":{},"body":{"injectables/UserService.html":{}}}],["error(string(error",{"_index":2756,"title":{},"body":{"injectables/UserService.html":{}}}],["error(this.geterrormessage(error",{"_index":2041,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["error.code",{"_index":1911,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["error.message",{"_index":2052,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["errormessage",{"_index":1839,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["erstellen",{"_index":831,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["es",{"_index":2055,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["etc",{"_index":756,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["etwaig",{"_index":2328,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["eu",{"_index":2126,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["even",{"_index":2443,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["event",{"_index":1144,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["event.clientx",{"_index":1410,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.clienty",{"_index":1411,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.emoji.native",{"_index":1264,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.key",{"_index":1289,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.preventdefault",{"_index":1291,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.shiftkey",{"_index":1290,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event.target",{"_index":1247,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["event?.emoji?.native",{"_index":1262,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["eventemitter",{"_index":29,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["events",{"_index":1142,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["ex.name",{"_index":162,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["ex.uid",{"_index":148,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["example",{"_index":3036,"title":{},"body":{"index.html":{}}}],["excludeexistingandselected",{"_index":160,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["excludes",{"_index":159,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["excluding",{"_index":150,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["execute",{"_index":3076,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2574,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["existiert",{"_index":848,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["existing",{"_index":80,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/VerifyEmailComponent.html":{}}}],["existingemoji",{"_index":1332,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["existingemoji.count",{"_index":1334,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["exists",{"_index":803,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["exitforcedmobilemode",{"_index":2507,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["exits",{"_index":2489,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["expanded",{"_index":734,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["expected",{"_index":1823,"title":{},"body":{"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["experience",{"_index":2996,"title":{},"body":{"index.html":{}}}],["export",{"_index":56,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["extracting",{"_index":1364,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["f",{"_index":2288,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["fails",{"_index":1202,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{}}}],["fall",{"_index":1218,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["fallback",{"_index":2593,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["fallbackcontent",{"_index":2595,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["fallbacktimestamp",{"_index":2597,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["falls",{"_index":931,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["false",{"_index":99,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":871,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["fb",{"_index":1847,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["feature",{"_index":3043,"title":{},"body":{"index.html":{}}}],["features",{"_index":2848,"title":{},"body":{"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["fehler",{"_index":1919,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["fehlgeschlagen",{"_index":2766,"title":{},"body":{"injectables/UserService.html":{}}}],["feld",{"_index":2074,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["fetches",{"_index":1117,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["fetching",{"_index":1051,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["fetchlasttenmessages",{"_index":1369,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["fetchrecipientname(recipientid",{"_index":2650,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["field",{"_index":810,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["field'},{'name",{"_index":544,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["field.component",{"_index":2423,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["field.component.html",{"_index":1024,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["field.component.scss",{"_index":1025,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["field.component.ts",{"_index":1002,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"coverage.html":{}}}],["field.html",{"_index":3096,"title":{},"body":{"index.html":{}}}],["field/search",{"_index":1001,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["field__input",{"_index":853,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["fields",{"_index":752,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["filereader",{"_index":1252,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["files",{"_index":3061,"title":{},"body":{"index.html":{}}}],["filled",{"_index":1997,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["filledstates",{"_index":1968,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["filter",{"_index":116,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["filter((m",{"_index":940,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["filtere",{"_index":141,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["filtered",{"_index":90,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["filteredmembers",{"_index":21,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["filteredresults",{"_index":1113,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["filtering",{"_index":167,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["filters",{"_index":178,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["final",{"_index":2545,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["finishbroadcast(textarea",{"_index":1500,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["firebase",{"_index":613,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{},"index.html":{}}}],["firebase's",{"_index":1856,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["firebase/auth",{"_index":2732,"title":{},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["firebaseauth",{"_index":2812,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["firebaseauth.currentuser",{"_index":2832,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["firebaseconfig",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":202,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"index.html":{}}}],["firestore/auth",{"_index":3033,"title":{},"body":{"index.html":{}}}],["firestoremessagedata",{"_index":744,"title":{"interfaces/FirestoreMessageData.html":{}},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"coverage.html":{}}}],["first",{"_index":883,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["firstchar",{"_index":1427,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["firstletter",{"_index":2689,"title":{},"body":{"injectables/UserService.html":{}}}],["fit",{"_index":984,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["fixed",{"_index":886,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["flag",{"_index":1034,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["flex",{"_index":359,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["flex:none",{"_index":2089,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["float",{"_index":2392,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["focus",{"_index":173,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["focusing",{"_index":2003,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["folgt",{"_index":2192,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["follows",{"_index":3130,"title":{},"body":{"index.html":{}}}],["font",{"_index":377,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footer",{"_index":1544,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["footer'},{'name",{"_index":517,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["footer.component.html",{"_index":1545,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1547,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.html",{"_index":3088,"title":{},"body":{"index.html":{}}}],["footer/footer.component",{"_index":575,"title":{},"body":{"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ImprintComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footercomponent",{"_index":516,"title":{"components/FooterComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["footercomponent,headercomponent",{"_index":1603,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["forced",{"_index":2490,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["forcedmobileactive",{"_index":2460,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["forgot",{"_index":3071,"title":{},"body":{"index.html":{}}}],["fork",{"_index":3125,"title":{},"body":{"index.html":{}}}],["form",{"_index":851,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["format",{"_index":1196,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["formatdate",{"_index":1009,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["formatdate(new",{"_index":1493,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["formats",{"_index":1177,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["formatted",{"_index":2539,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["formatteddate",{"_index":725,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["formattedmessages",{"_index":2527,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["formatthreadmessages(childmessages",{"_index":2575,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["formbuilder",{"_index":1848,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["formgroup",{"_index":1875,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["formsmodule",{"_index":35,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/VerifyEmailComponent.html":{}}}],["fortzufahren",{"_index":2761,"title":{},"body":{"injectables/UserService.html":{}}}],["forwards",{"_index":1591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["found",{"_index":1036,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["fremdkomponenten",{"_index":2184,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["frequently",{"_index":1079,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["freshusers",{"_index":133,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["friendly",{"_index":254,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["full",{"_index":218,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["function",{"_index":1787,"title":{},"body":{"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"injectables/UserService.html":{}}}],["funktion",{"_index":2360,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["funktionsfähigen",{"_index":2113,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["further",{"_index":2404,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["füllen",{"_index":2073,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["für",{"_index":2322,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["gap",{"_index":430,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["geben",{"_index":2071,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["gefunden",{"_index":2779,"title":{},"body":{"injectables/UserService.html":{}}}],["gegen",{"_index":2253,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gegenüber",{"_index":2246,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gegliedert",{"_index":2193,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gelöscht",{"_index":2293,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gem",{"_index":1606,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["gemacht",{"_index":2304,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gemeinsam",{"_index":2175,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["genannt",{"_index":2102,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["generate",{"_index":3139,"title":{},"body":{"index.html":{}}}],["generateconversationid(userid1",{"_index":1319,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["generated",{"_index":1055,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["generates",{"_index":1314,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["generic",{"_index":1198,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["genutzt",{"_index":2316,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["german",{"_index":1179,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["germany",{"_index":1617,"title":{},"body":{"components/ImprintComponent.html":{}}}],["gesendet",{"_index":2051,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["gesetzlichen",{"_index":2298,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gesperrt",{"_index":2294,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gestern",{"_index":1069,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getallusers",{"_index":949,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["getalluserslive",{"_index":2658,"title":{},"body":{"injectables/UserService.html":{}}}],["getalluserslive(callback",{"_index":2676,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusersrealtime",{"_index":2659,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusersrealtime(callback",{"_index":2679,"title":{},"body":{"injectables/UserService.html":{}}}],["getauth",{"_index":934,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["getchannelsbyname(query",{"_index":1463,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getcurrentuserdata",{"_index":1229,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":2660,"title":{},"body":{"injectables/UserService.html":{}}}],["getdoc",{"_index":2725,"title":{},"body":{"injectables/UserService.html":{}}}],["getdoc(userdocref",{"_index":2740,"title":{},"body":{"injectables/UserService.html":{}}}],["getdocs",{"_index":2029,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["getdocs(q",{"_index":2035,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["getdocs(userscollection",{"_index":2771,"title":{},"body":{"injectables/UserService.html":{}}}],["geterrormessage",{"_index":1843,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["geterrormessage(error",{"_index":1853,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["getfirestore",{"_index":3174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getformatteddate(datestring",{"_index":1180,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getmessagesonce('private",{"_index":1131,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getshowwelcomecontainer",{"_index":600,"title":{},"body":{"injectables/AppStateService.html":{}}}],["getstorage",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getthreadchannelid(result",{"_index":2556,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["getting",{"_index":2973,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":2661,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(this.recipientid",{"_index":1232,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getuserbyid(userid",{"_index":2685,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyfirstletter",{"_index":2662,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyfirstletter(firstletter",{"_index":2687,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyfirstletter(query",{"_index":1443,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["getyesterdaydate",{"_index":1214,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["gibt",{"_index":2056,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["gilt",{"_index":2130,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["git",{"_index":3037,"title":{},"body":{"index.html":{}}}],["given",{"_index":1323,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["global",{"_index":1061,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["go",{"_index":753,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["goback",{"_index":1597,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["gray",{"_index":422,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["green",{"_index":1944,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["group",{"_index":1048,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["grow",{"_index":382,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["grundverordnung",{"_index":2128,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["guest",{"_index":2705,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["guidelines",{"_index":3131,"title":{},"body":{"index.html":{}}}],["h1",{"_index":373,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["h2",{"_index":994,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["h3",{"_index":1574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["haben",{"_index":2214,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["handle",{"_index":474,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["handlechannelsearch(query",{"_index":1461,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["handlecodeinapp",{"_index":2049,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["handled",{"_index":638,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handleemailverification",{"_index":626,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handleemailverification(oobcode",{"_index":641,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handleemptysearch",{"_index":1434,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["handlekeydown(event",{"_index":1287,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["handlelogout",{"_index":2663,"title":{},"body":{"injectables/UserService.html":{}}}],["handlelogout(user",{"_index":2690,"title":{},"body":{"injectables/UserService.html":{}}}],["handlememberssaved(updated",{"_index":234,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["handlemobileviewforsearchthread",{"_index":2643,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["handlenoprefix",{"_index":1439,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["handlenousersignedin",{"_index":2664,"title":{},"body":{"injectables/UserService.html":{}}}],["handlenousersignedin(user",{"_index":2695,"title":{},"body":{"injectables/UserService.html":{}}}],["handlepasswordreset",{"_index":627,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handlepasswordreset(oobcode",{"_index":650,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handler",{"_index":658,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["handleresponsivethreadchannelview",{"_index":2599,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["handles",{"_index":232,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["handlesignedinuser",{"_index":2665,"title":{},"body":{"injectables/UserService.html":{}}}],["handlesignedinuser(user",{"_index":2701,"title":{},"body":{"injectables/UserService.html":{}}}],["handleuseractivity",{"_index":899,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["handleusersearch(query",{"_index":1442,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["handling",{"_index":2487,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["hat",{"_index":2281,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["header",{"_index":1551,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["header'},{'name",{"_index":506,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["header.component",{"_index":2415,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["header.component.html",{"_index":1553,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1552,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.ts",{"_index":2882,"title":{},"body":{"coverage.html":{}}}],["header.html",{"_index":3084,"title":{},"body":{"index.html":{}}}],["header/chat",{"_index":2414,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["header/header.component",{"_index":576,"title":{},"body":{"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ImprintComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["headercomponent",{"_index":518,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["height",{"_index":418,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["here",{"_index":754,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"index.html":{}}}],["heute",{"_index":1068,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["hidden",{"_index":428,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["hidecontentcontainer",{"_index":1557,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hidememberslist",{"_index":175,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["hides",{"_index":171,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["hidetooltip",{"_index":1414,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["hiding",{"_index":2473,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["hier",{"_index":2357,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["hierdurch",{"_index":2185,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["higher",{"_index":3029,"title":{},"body":{"index.html":{}}}],["hilfe",{"_index":2134,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["hinaus",{"_index":2258,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["hinzufügen",{"_index":334,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["hochfelder",{"_index":1613,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["hold",{"_index":3049,"title":{},"body":{"index.html":{}}}],["holds",{"_index":1033,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["hook",{"_index":784,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["hostlistener",{"_index":928,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["hostlistener('document:keydown",{"_index":956,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":955,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["hostlistener('document:mousemove')@hostlistener('document:keydown",{"_index":914,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["hostlistener('window:resize",{"_index":1143,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["hostlisteners",{"_index":908,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["hover",{"_index":391,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["hovercolor",{"_index":453,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["html",{"_index":487,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["htmlinputelement",{"_index":1248,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["htmltextareaelement",{"_index":1246,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["http://localhost:4200",{"_index":3056,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/new",{"_index":2048,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["http://localhost:4200/verify",{"_index":2757,"title":{},"body":{"injectables/UserService.html":{}}}],["https://github.com/seldir193/dabubble.git",{"_index":3038,"title":{},"body":{"index.html":{}}}],["https://www.e",{"_index":1620,"title":{},"body":{"components/ImprintComponent.html":{}}}],["hue",{"_index":398,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["icon",{"_index":469,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["id",{"_index":78,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["ide",{"_index":3052,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1086,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ids",{"_index":1317,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"miscellaneous/typealiases.html":{}}}],["ihn",{"_index":2364,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["ihnen",{"_index":2079,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["ihr",{"_index":1902,"title":{},"body":{"components/NewPasswortComponent.html":{},"injectables/UserService.html":{}}}],["ihre",{"_index":2072,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ihrer",{"_index":2314,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ii",{"_index":2196,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["iii",{"_index":2200,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["illustrates",{"_index":3044,"title":{},"body":{"index.html":{}}}],["im",{"_index":2106,"title":{},"body":{"components/PrivacyComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["image",{"_index":740,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Member.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["images",{"_index":1023,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["images/emojis",{"_index":3067,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":1047,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["img",{"_index":383,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["implements",{"_index":77,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["important",{"_index":357,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["imports",{"_index":70,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["impressum",{"_index":1548,"title":{},"body":{"components/FooterComponent.html":{},"components/ImprintComponent.html":{},"index.html":{}}}],["imprint",{"_index":1594,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint'},{'name",{"_index":520,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["imprint.component.html",{"_index":1595,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":1596,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.html",{"_index":3089,"title":{},"body":{"index.html":{}}}],["imprint/imprint.component",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["imprintcomponent",{"_index":519,"title":{"components/ImprintComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["in)activity",{"_index":954,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["inactivitytimeout",{"_index":896,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["include",{"_index":695,"title":{},"body":{"components/AuthActionComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["included",{"_index":1657,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["including",{"_index":1022,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["incoming",{"_index":2346,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["increases",{"_index":1276,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":3120,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":801,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["indicating",{"_index":1035,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["info&#64;selcuk",{"_index":1618,"title":{},"body":{"components/ImprintComponent.html":{}}}],["info@selcuk",{"_index":1622,"title":{},"body":{"components/ImprintComponent.html":{}}}],["informationen",{"_index":2194,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["informieren",{"_index":2165,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["informs",{"_index":1677,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["inhalte",{"_index":2118,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["init",{"_index":1668,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["initialization",{"_index":786,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["initializeapp(environment.firebaseconfig",{"_index":3172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializeconversation",{"_index":1360,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["initializedirectconversation",{"_index":1126,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["initializes",{"_index":1357,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["inject",{"_index":31,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["inject(firestore",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":318,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["inject(mat_dialog_data",{"_index":112,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["injectable",{"_index":594,"title":{"injectables/AppStateService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppStateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":596,"title":{},"body":{"injectables/AppStateService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":1772,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{}}}],["injecting",{"_index":1114,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["injects",{"_index":2465,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["inklusive",{"_index":2116,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["inline",{"_index":992,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{}}}],["inner",{"_index":522,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["innerchannelcomponent",{"_index":521,"title":{"components/InnerChannelComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["input",{"_index":27,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["input.files",{"_index":1249,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["input.files[0",{"_index":1250,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["input:focus",{"_index":445,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["input[type=\"text",{"_index":436,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["inputs",{"_index":1556,"title":{},"body":{"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["insbesondere",{"_index":2166,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["inserts",{"_index":1299,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["install",{"_index":3040,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2985,"title":{},"body":{"index.html":{}}}],["installed",{"_index":3075,"title":{},"body":{"index.html":{}}}],["instance",{"_index":635,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/NewPasswortComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["instanceof",{"_index":1242,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["intentionally",{"_index":951,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["interacting",{"_index":1684,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["interactions",{"_index":275,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["interactive",{"_index":3141,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMembersDialogData.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Member.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Member.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"overview.html":{}}}],["internal",{"_index":87,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["internetauftritts",{"_index":2115,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["intl.datetimeformatoptions",{"_index":1187,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["intro",{"_index":1736,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro'},{'name",{"_index":525,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["intro.component.html",{"_index":1737,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro.component.scss",{"_index":1738,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro.html",{"_index":3091,"title":{},"body":{"index.html":{}}}],["intro/intro.component",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["introcomponent",{"_index":524,"title":{"components/IntroComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["intuitive",{"_index":2994,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1200,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["invert(34",{"_index":395,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["invert(35",{"_index":1930,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["invite",{"_index":2998,"title":{},"body":{"index.html":{}}}],["isalreadyincluded",{"_index":1713,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["ischannelnamevalid",{"_index":771,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["ischannelsvisible",{"_index":897,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["iscurrentlyvisible",{"_index":1304,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["isdesktop",{"_index":1111,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["isediting",{"_index":731,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["iseditingchannel",{"_index":2432,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["isemojipickervisible",{"_index":732,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["ishighlighted",{"_index":730,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["isimagemodalopen",{"_index":1067,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ismemberslistvisible",{"_index":98,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["isnan(date.gettime",{"_index":1185,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["isonline",{"_index":1519,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{}}}],["isprivatechat",{"_index":2433,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["isprivatemessage",{"_index":2429,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["issameday(date1",{"_index":1220,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["issearchactive",{"_index":2435,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["issigninwithemaillink",{"_index":2821,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["issigninwithemaillink(firebaseauth",{"_index":2824,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["issmallscreen",{"_index":1969,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["ist",{"_index":1795,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["istextareaexpanded",{"_index":1077,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["isthreadactive",{"_index":2441,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["isthreadchannelfromsearch",{"_index":2440,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["isthreadfromsearch",{"_index":2439,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["isworkspacevisible",{"_index":2438,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["it's",{"_index":1423,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["item",{"_index":1003,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["item.type",{"_index":1473,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["items",{"_index":361,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["jasmine/karma",{"_index":3074,"title":{},"body":{"index.html":{}}}],["jede",{"_index":2139,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["jeder",{"_index":2133,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["jedoch",{"_index":2272,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["jedwede",{"_index":2265,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["jemand",{"_index":1105,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["jetzt",{"_index":135,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["jsdoc",{"_index":3143,"title":{},"body":{"index.html":{}}}],["justify",{"_index":363,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["keeps",{"_index":1372,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["kein",{"_index":2577,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["keine",{"_index":2297,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["keinen",{"_index":2057,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["key",{"_index":1283,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["keyboardevent",{"_index":1288,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["keyframes",{"_index":1580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["known",{"_index":301,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["kocyigit",{"_index":1611,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["kocyigit.de",{"_index":1619,"title":{},"body":{"components/ImprintComponent.html":{}}}],["kommunikation",{"_index":837,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["kontakt",{"_index":2309,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["kontaktanfragen",{"_index":2305,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["kontaktformular",{"_index":2308,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["kontaktmöglichkeit",{"_index":2306,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["konto",{"_index":1569,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["kopien",{"_index":2222,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["kurzer",{"_index":2066,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["können",{"_index":2082,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["künftige",{"_index":2285,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["label",{"_index":856,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["larger",{"_index":1266,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["last",{"_index":1155,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lastmessages",{"_index":1162,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lastmessages.foreach((msg",{"_index":1167,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lastreplytime",{"_index":736,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["lastresponsetime",{"_index":727,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["lastusedemojisreceived",{"_index":1082,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lastusedemojissent",{"_index":1083,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lastusedemojissent`/`received",{"_index":1159,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["latest",{"_index":3161,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["launch",{"_index":3062,"title":{},"body":{"index.html":{}}}],["layout",{"_index":255,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["leave",{"_index":1665,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["leavechannel",{"_index":1636,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["leavechannel(channelid",{"_index":1663,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["left",{"_index":389,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["left:50px",{"_index":1948,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["legal",{"_index":3017,"title":{},"body":{"index.html":{}}}],["legend",{"_index":486,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["leider",{"_index":2076,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["leistungen",{"_index":2121,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["leute",{"_index":333,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["li",{"_index":467,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["license",{"_index":2990,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":3136,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":783,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["lightblue",{"_index":392,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["limited",{"_index":3065,"title":{},"body":{"index.html":{}}}],["limittopemojis",{"_index":1374,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["line",{"_index":1938,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["lines",{"_index":2620,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["link",{"_index":1913,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["links",{"_index":2010,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["list",{"_index":92,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["liste",{"_index":1380,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["listeners",{"_index":2362,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["listenforauthchanges",{"_index":900,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["listens",{"_index":2791,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["lists",{"_index":1078,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["lit",{"_index":2287,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["literal",{"_index":717,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"interfaces/Message.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["live",{"_index":1797,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"miscellaneous/typealiases.html":{}}}],["loadallusers",{"_index":153,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loadchannelnameifneeded",{"_index":2563,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["loadchildmessages(threadchannelid",{"_index":2570,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["loadcurrentuser",{"_index":1228,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loaded",{"_index":101,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["loading",{"_index":623,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["loadlastusedemojis",{"_index":1160,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loadlastusedemojisforconversation",{"_index":1365,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loadmembers",{"_index":901,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["loadparentdoc",{"_index":2560,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["loadprivatemessages",{"_index":1239,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loadprivatemessagesforconversation(conversationid",{"_index":1381,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loadrecipientdata",{"_index":1231,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["loads",{"_index":115,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["local",{"_index":299,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["locale_id",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localized",{"_index":1178,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["locally",{"_index":2647,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["localstorage",{"_index":2811,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["localstorage.getitem('newemail",{"_index":682,"title":{},"body":{"components/AuthActionComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["localstorage.removeitem('newemail",{"_index":686,"title":{},"body":{"components/AuthActionComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["localstorage.setitem('newemail",{"_index":2753,"title":{},"body":{"injectables/UserService.html":{}}}],["location",{"_index":1599,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["log",{"_index":3064,"title":{},"body":{"index.html":{}}}],["logic",{"_index":787,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["logically",{"_index":2553,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["login",{"_index":970,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":527,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["login.html",{"_index":3092,"title":{},"body":{"index.html":{}}}],["login/login.component",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["logincomponent",{"_index":526,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["logout",{"_index":972,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["long",{"_index":1189,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["look",{"_index":2648,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["lost",{"_index":174,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["löschen",{"_index":2162,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["löschung",{"_index":2232,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["m",{"_index":199,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["m.id",{"_index":941,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["m.isemojipickervisible",{"_index":1307,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["m.isonline",{"_index":944,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["m.name",{"_index":163,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["m.name.tolowercase().includes(term",{"_index":183,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["m.uid",{"_index":321,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["mail",{"_index":692,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"components/ImprintComponent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mail.png",{"_index":2842,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["main",{"_index":1015,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["main.ts",{"_index":3119,"title":{},"body":{"index.html":{}}}],["maintainable",{"_index":3135,"title":{},"body":{"index.html":{}}}],["make",{"_index":3060,"title":{},"body":{"index.html":{}}}],["manage",{"_index":217,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/NewPasswortComponent.html":{},"index.html":{}}}],["management",{"_index":1096,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["manages",{"_index":2467,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["managing",{"_index":1851,"title":{},"body":{"components/NewPasswortComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["manually",{"_index":2806,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["many",{"_index":2062,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["map",{"_index":2447,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["map((m",{"_index":942,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["map((msg",{"_index":2576,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["mapped",{"_index":1447,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["mapped.length",{"_index":1457,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["margin",{"_index":374,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["marketing",{"_index":845,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["marks",{"_index":1388,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["mart",{"_index":1013,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"dependencies.html":{}}}],["mat",{"_index":352,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":316,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["mat_dialog_data",{"_index":41,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["matbottomsheet",{"_index":317,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["matbottomsheetref",{"_index":43,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["matbuttonmodule",{"_index":768,"title":{},"body":{"components/ChannelDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1865,"title":{},"body":{"components/NewPasswortComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["matching",{"_index":243,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":39,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["matdialogmodule",{"_index":769,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["matdialogmodule,browseranimationsmodule",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":40,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["material",{"_index":13,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["matformfieldmodule",{"_index":766,"title":{},"body":{"components/ChannelDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1716,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["matinputmodule",{"_index":767,"title":{},"body":{"components/ChannelDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":464,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["maßgabe",{"_index":2239,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["mdc",{"_index":424,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["mebers",{"_index":3097,"title":{},"body":{"index.html":{}}}],["media",{"_index":481,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["member",{"_index":187,"title":{"interfaces/Member.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["member's",{"_index":1826,"title":{},"body":{"components/MemberSectionDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["member.id",{"_index":1505,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["member.models.ts",{"_index":3115,"title":{},"body":{"index.html":{}}}],["member.name",{"_index":191,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["member.uid",{"_index":1803,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{}}}],["memberlistdialogcomponent",{"_index":528,"title":{"components/MemberListDialogComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["memberlistdialogdata",{"_index":1754,"title":{"interfaces/MemberListDialogData.html":{}},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"coverage.html":{}}}],["members",{"_index":7,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["members.push",{"_index":1715,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["members.some((m",{"_index":1714,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["membersadded",{"_index":86,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["membersdialog",{"_index":824,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["membersdialog.afterclosed().subscribe(result",{"_index":826,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["membersdialogcomponent",{"_index":529,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["membersectiondialogcomponent",{"_index":531,"title":{"components/MemberSectionDialogComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["memberselected",{"_index":907,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["mention",{"_index":1106,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["menu",{"_index":3069,"title":{},"body":{"index.html":{}}}],["merges",{"_index":113,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["message",{"_index":718,"title":{"interfaces/Message.html":{}},"body":{"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["message's",{"_index":1014,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["message.id",{"_index":2642,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.model.ts",{"_index":3114,"title":{},"body":{"index.html":{}}}],["message.models",{"_index":1010,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["message.models.ts",{"_index":757,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["message.parentid",{"_index":2641,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.recipientid",{"_index":2630,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.recipientname",{"_index":2628,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.senderid",{"_index":2632,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.sendername",{"_index":2629,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["message.service",{"_index":55,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["message.service.ts",{"_index":3107,"title":{},"body":{"index.html":{}}}],["message.threadid",{"_index":2640,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["messagecontent",{"_index":719,"title":{"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"coverage.html":{}}}],["messageformat",{"_index":711,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["messageid",{"_index":1352,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["messagelist",{"_index":1040,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["messages",{"_index":892,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["messages'},{'name",{"_index":511,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["messages.component",{"_index":2418,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["messages.component.html",{"_index":894,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.scss",{"_index":893,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts",{"_index":891,"title":{},"body":{"components/DirectMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:109",{"_index":915,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:130",{"_index":922,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:134",{"_index":919,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:22",{"_index":912,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:23",{"_index":927,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:24",{"_index":926,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:26",{"_index":925,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:27",{"_index":924,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:28",{"_index":911,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:36",{"_index":917,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:54",{"_index":916,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:77",{"_index":913,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:81",{"_index":920,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.component.ts:96",{"_index":921,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["messages.html",{"_index":3086,"title":{},"body":{"index.html":{}}}],["messages.map((msg",{"_index":1134,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["messages.slice",{"_index":1163,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["messages/direct",{"_index":890,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["messages/private",{"_index":2419,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["messageservice",{"_index":54,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["messagetoall",{"_index":1104,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["messagetype",{"_index":2918,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagingsenderid",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":256,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["method",{"_index":2513,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["methods",{"_index":259,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["middleblue",{"_index":1575,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["min",{"_index":354,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["miscellaneous",{"_index":3151,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1479,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["mit",{"_index":2059,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"index.html":{}}}],["mitglieder",{"_index":530,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["mitteilung",{"_index":2273,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["mittel",{"_index":2177,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["mobile",{"_index":253,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["mobile'},{'name",{"_index":493,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["mobile.component.html",{"_index":258,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["mobile.component.scss",{"_index":257,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["mobile.component.ts",{"_index":251,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"coverage.html":{}}}],["mobile.component.ts:103",{"_index":294,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:115",{"_index":270,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:124",{"_index":289,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:136",{"_index":286,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:143",{"_index":282,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:160",{"_index":281,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:32",{"_index":304,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":312,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:36",{"_index":309,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:39",{"_index":314,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:41",{"_index":313,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:43",{"_index":298,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:45",{"_index":265,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:54",{"_index":303,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:55",{"_index":308,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:61",{"_index":279,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:75",{"_index":277,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.component.ts:91",{"_index":283,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["mobile.html",{"_index":3081,"title":{},"body":{"index.html":{}}}],["mobile/add",{"_index":250,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"coverage.html":{}}}],["modal",{"_index":1063,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["mode",{"_index":83,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["modules",{"_index":3149,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":1192,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["more",{"_index":748,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"index.html":{}}}],["mouseevent",{"_index":1405,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["moved",{"_index":2554,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["movediagonal",{"_index":1581,"title":{},"body":{"components/HeaderComponent.html":{}}}],["movevertical",{"_index":1585,"title":{},"body":{"components/HeaderComponent.html":{}}}],["msg",{"_index":1135,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["msg.content",{"_index":1136,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["msg.content.emojis",{"_index":1330,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.content.emojis.find",{"_index":1333,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.content.emojis.map((e",{"_index":1170,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.content.emojis.push",{"_index":1335,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.content?.emojis",{"_index":1137,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.id",{"_index":1353,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.isediting",{"_index":1351,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.isemojipickervisible",{"_index":1305,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.senderid",{"_index":1168,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.sendername",{"_index":1336,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msg.timestamp",{"_index":1241,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["msg?.isediting",{"_index":1350,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msgdata",{"_index":1487,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msgid",{"_index":1386,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["msgs",{"_index":2571,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["multi",{"_index":108,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["multiple",{"_index":1102,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["muster",{"_index":2331,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nach",{"_index":2238,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nachfolgend",{"_index":2099,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nachfolgenden",{"_index":2164,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nachricht",{"_index":2387,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["nachrichten",{"_index":2851,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["name",{"_index":79,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["name.tolowercase",{"_index":1711,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["nameexists",{"_index":818,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["nanoseconds",{"_index":722,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["navigates",{"_index":647,"title":{},"body":{"components/AuthActionComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["navigatetosignup",{"_index":1555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigation",{"_index":636,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["ndern",{"_index":1922,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["needed",{"_index":278,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["nested",{"_index":216,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["neu",{"_index":1568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["new",{"_index":59,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["newchannel",{"_index":1702,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["newemail",{"_index":681,"title":{},"body":{"components/AuthActionComponent.html":{},"injectables/UserService.html":{}}}],["newemoji",{"_index":1331,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["newly",{"_index":201,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["newname",{"_index":2723,"title":{},"body":{"injectables/UserService.html":{}}}],["newpassword",{"_index":1869,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["newpasswordform",{"_index":1840,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["newpasswortcomponent",{"_index":533,"title":{"components/NewPasswortComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["ng",{"_index":350,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"index.html":{}}}],["ngonchanges(changes",{"_index":1310,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ngondestroy",{"_index":241,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["ngoninit",{"_index":118,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["nicht",{"_index":1896,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"injectables/UserService.html":{}}}],["noch",{"_index":2211,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["node.js",{"_index":3028,"title":{},"body":{"index.html":{}}}],["none",{"_index":204,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["noresultsfound",{"_index":1037,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["normalized",{"_index":2538,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["normalizing",{"_index":1376,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["not(:focus",{"_index":444,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["note",{"_index":3102,"title":{},"body":{"index.html":{}}}],["notice",{"_index":3018,"title":{},"body":{"index.html":{}}}],["notices",{"_index":3070,"title":{},"body":{"index.html":{}}}],["notify",{"_index":1678,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["noto",{"_index":876,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["nowrap",{"_index":996,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["npm",{"_index":3030,"title":{},"body":{"index.html":{}}}],["null",{"_index":642,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["number",{"_index":721,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["nunito",{"_index":872,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["nur",{"_index":2101,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nutzer",{"_index":2198,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nutzerfreundlichen",{"_index":2114,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nutzung",{"_index":2291,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["nutzungsqualität",{"_index":2182,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["näher",{"_index":2212,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["ob",{"_index":2217,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["object",{"_index":983,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1448,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["observable",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["occurs",{"_index":2020,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["oder",{"_index":971,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PrivacyComponent.html":{}}}],["offengelegt",{"_index":2263,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["offenlegung",{"_index":2154,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["offline",{"_index":966,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["ohne",{"_index":1324,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PrivacyComponent.html":{}}}],["ok",{"_index":1952,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["olddesktopview",{"_index":2461,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["oldissearchactive",{"_index":2462,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["oldisworkspacevisible",{"_index":2463,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["onauthstatechanged",{"_index":935,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["onauthstatechanged(auth",{"_index":973,"title":{},"body":{"components/DirectMessagesComponent.html":{},"injectables/UserService.html":{}}}],["onblur",{"_index":1973,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["onblur(field",{"_index":1995,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["oncancel",{"_index":228,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["once",{"_index":1238,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["onchannelnamechange",{"_index":773,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["onchannelnamechange(value",{"_index":788,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["oncreate",{"_index":205,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{}}}],["ondestroy",{"_index":1626,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["one",{"_index":1302,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["onfocus",{"_index":1974,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["onfocus(field",{"_index":2000,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["onheaderbackclicked",{"_index":2510,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["onimageselected(event",{"_index":1245,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["oninit",{"_index":30,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["online",{"_index":960,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/ProfilDialogComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["online/offline",{"_index":1058,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["onopenprivatechat(payload",{"_index":2478,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["onresize",{"_index":2491,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["onresize(event",{"_index":1145,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["onsearchinput",{"_index":1424,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["onsearchmembers",{"_index":179,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["onselectresult(item",{"_index":1472,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["onsnapshot",{"_index":2726,"title":{},"body":{"injectables/UserService.html":{}}}],["onsnapshot(userscollection",{"_index":2780,"title":{},"body":{"injectables/UserService.html":{}}}],["onsubmit",{"_index":1844,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["oobcode",{"_index":624,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{}}}],["opacity",{"_index":1579,"title":{},"body":{"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{}}}],["open",{"_index":1064,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["openaddmembersoverlay",{"_index":1750,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["openaddmembersoverlaymethod",{"_index":1746,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["openchatwith",{"_index":1804,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["opendialog",{"_index":1637,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["opendirectmessage",{"_index":902,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["opendirectmessage(member",{"_index":918,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["opened",{"_index":2355,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["openimagemodal",{"_index":1267,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["opening",{"_index":1515,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["openmembersdialog",{"_index":219,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["openprivatechat",{"_index":1751,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["openprofile",{"_index":1806,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["openprofiledialog",{"_index":1747,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["openprofiledialog(member",{"_index":1777,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["openprofilerequested",{"_index":1752,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["opens",{"_index":215,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["openthread(message",{"_index":2610,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["openthreadchannelfromsearch(result",{"_index":2522,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["openthreadfromsearch",{"_index":2619,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["openthreadfromsearch(message",{"_index":2625,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["openwelcome",{"_index":2494,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["operations",{"_index":779,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["optimierungszwecken",{"_index":2180,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["optional",{"_index":18,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["optional()@inject(mat_bottom_sheet_data",{"_index":307,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["optional()@inject(mat_dialog_data",{"_index":1785,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["optionally",{"_index":266,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{}}}],["options",{"_index":1084,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["orchestrating",{"_index":2517,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["ordnen",{"_index":2147,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["organisation",{"_index":2146,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["original",{"_index":1091,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["originalmessage",{"_index":1094,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["originx",{"_index":337,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["originy",{"_index":339,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["otherwise",{"_index":1871,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["out",{"_index":168,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["outline",{"_index":443,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["output",{"_index":28,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["outputs",{"_index":906,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{}}}],["overflow",{"_index":427,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["overlay",{"_index":295,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["overlaymodule",{"_index":37,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["overlayx",{"_index":340,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["overlayy",{"_index":341,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["overview",{"_index":2983,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":699,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["package",{"_index":2944,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":3122,"title":{},"body":{"index.html":{}}}],["padding",{"_index":402,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["padding:8px",{"_index":1954,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["page",{"_index":1923,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["pages",{"_index":3109,"title":{},"body":{"index.html":{}}}],["param",{"_index":665,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["parameters",{"_index":268,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["params",{"_index":655,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["params['mode",{"_index":668,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["params['oobcode",{"_index":670,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{}}}],["parent",{"_index":1030,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"miscellaneous/typealiases.html":{}}}],["parentdoc",{"_index":2525,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc.channelid",{"_index":2568,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.channelid",{"_index":2565,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.channelname",{"_index":2564,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.content",{"_index":2591,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.content?.text",{"_index":2579,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.replycount",{"_index":2589,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.senderavatar",{"_index":2583,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.sendername",{"_index":2581,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentdoc?.timestamp",{"_index":2587,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parentid",{"_index":729,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["parentmessage",{"_index":2529,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["parsedatestring(datestring",{"_index":1203,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parseint(parts[0",{"_index":1207,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parseint(parts[1",{"_index":1208,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parseint(parts[2",{"_index":1210,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parses",{"_index":1195,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parsing",{"_index":1201,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["participants",{"_index":3006,"title":{},"body":{"index.html":{}}}],["partner",{"_index":2334,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["parts",{"_index":1204,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["parts.length",{"_index":1206,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["passed",{"_index":114,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["passing",{"_index":1029,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["passiv",{"_index":2396,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["password",{"_index":617,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passwordsmatch",{"_index":1845,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort",{"_index":536,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["passwort'},{'name",{"_index":534,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["passwort.component",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["passwort.component.html",{"_index":1838,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.scss",{"_index":1837,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts",{"_index":1834,"title":{},"body":{"components/NewPasswortComponent.html":{},"coverage.html":{}}}],["passwort.component.ts:131",{"_index":1868,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:143",{"_index":1854,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:36",{"_index":1876,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:41",{"_index":1872,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:46",{"_index":1880,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:51",{"_index":1878,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:56",{"_index":1849,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:80",{"_index":1860,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.component.ts:97",{"_index":1862,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["passwort.html",{"_index":3093,"title":{},"body":{"index.html":{}}}],["passwort/new",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"components/NewPasswortComponent.html":{},"coverage.html":{}}}],["passwortresetcomponent",{"_index":535,"title":{"components/PasswortResetComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["passwörter",{"_index":1894,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["pattern",{"_index":1988,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["payload",{"_index":1802,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["payload.id",{"_index":2482,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["payload.name",{"_index":2483,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["per",{"_index":2307,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["perfect",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["performemailupdate",{"_index":2666,"title":{},"body":{"injectables/UserService.html":{}}}],["performemailupdate(user",{"_index":2706,"title":{},"body":{"injectables/UserService.html":{}}}],["performs",{"_index":2692,"title":{},"body":{"injectables/UserService.html":{}}}],["personalize",{"_index":3004,"title":{},"body":{"index.html":{}}}],["personenbezogene",{"_index":2097,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["personenbezogenen",{"_index":2143,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["personenbezogener",{"_index":2171,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["pfad",{"_index":933,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["pick",{"_index":1820,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["picker",{"_index":1062,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["pickermodule",{"_index":1011,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["pickers",{"_index":1328,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["picture",{"_index":3013,"title":{},"body":{"index.html":{}}}],["placeholder",{"_index":875,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["placeholdertext",{"_index":1112,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["please",{"_index":3129,"title":{},"body":{"index.html":{}}}],["plus",{"_index":3160,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pointer",{"_index":385,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["policy",{"_index":3019,"title":{},"body":{"index.html":{}}}],["position",{"_index":434,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["possible",{"_index":2700,"title":{},"body":{"injectables/UserService.html":{}}}],["potentially",{"_index":1016,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["pre",{"_index":310,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["prefer",{"_index":3003,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":1441,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["preparechildmessages(threadchannelid",{"_index":2540,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["prepareparentdoc(threadchannelid",{"_index":2535,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["prepares",{"_index":2549,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["prepthreadchannelsearch(result",{"_index":2550,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["prerequisites",{"_index":3027,"title":{},"body":{"index.html":{}}}],["present",{"_index":188,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["pressed",{"_index":1285,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["preview",{"_index":1272,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["previously",{"_index":287,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["previousview",{"_index":2450,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["primarily",{"_index":3163,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["primary",{"_index":410,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["principles",{"_index":3133,"title":{},"body":{"index.html":{}}}],["privacy",{"_index":2084,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["privacy'},{'name",{"_index":539,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["privacy.component.html",{"_index":2091,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":2092,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.html",{"_index":3095,"title":{},"body":{"index.html":{}}}],["privacy/privacy.component",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["privacycomponent",{"_index":538,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["private",{"_index":104,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["private/chat",{"_index":2622,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["privatemessage",{"_index":1049,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["privatemessages",{"_index":1054,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["privatemessagescomponent",{"_index":540,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["process",{"_index":1874,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["processemojisfrommessages(lastmessages",{"_index":1371,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["produce",{"_index":3140,"title":{},"body":{"index.html":{}}}],["production",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":542,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["profildialogcomponent",{"_index":541,"title":{"components/ProfilDialogComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["profile",{"_index":1270,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["profiledata",{"_index":2344,"title":{"interfaces/ProfileData.html":{}},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"coverage.html":{}}}],["profiles",{"_index":3005,"title":{},"body":{"index.html":{}}}],["project",{"_index":2988,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":649,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["promise((resolve",{"_index":2734,"title":{},"body":{"injectables/UserService.html":{}}}],["prompt",{"_index":2759,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"properties.html":{}}}],["provide",{"_index":2993,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":117,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{}}}],["providedin",{"_index":608,"title":{},"body":{"injectables/AppStateService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":3171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":3173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":2468,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["providestorage",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prüfen",{"_index":2495,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["public",{"_index":109,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["pull",{"_index":3128,"title":{},"body":{"index.html":{}}}],["purposes",{"_index":2023,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["pushes",{"_index":1370,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["q",{"_index":2031,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["query",{"_index":634,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["query(userscollection",{"_index":2032,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["queryparams",{"_index":679,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["querysnapshot",{"_index":2034,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["querysnapshot.empty",{"_index":2036,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["querysnapshot.foreach((doc",{"_index":2772,"title":{},"body":{"injectables/UserService.html":{}}}],["r",{"_index":1528,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["r.type",{"_index":1529,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["radius",{"_index":387,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["rahmen",{"_index":2107,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["random",{"_index":1652,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["re",{"_index":2719,"title":{},"body":{"injectables/UserService.html":{}}}],["reactive",{"_index":1877,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["reactiveformsmodule",{"_index":1835,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":1852,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["reader",{"_index":1251,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["reader.onload",{"_index":1253,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["reader.readasdataurl(file",{"_index":1258,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["reading",{"_index":633,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["readme.md",{"_index":3123,"title":{},"body":{"index.html":{}}}],["reads",{"_index":280,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["real",{"_index":2657,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["reason",{"_index":2697,"title":{},"body":{"injectables/UserService.html":{}}}],["reauthenticateuser",{"_index":2667,"title":{},"body":{"injectables/UserService.html":{}}}],["reauthenticateuser(user",{"_index":2708,"title":{},"body":{"injectables/UserService.html":{}}}],["reauthenticatewithcredential",{"_index":2729,"title":{},"body":{"injectables/UserService.html":{}}}],["reauthenticatewithcredential(user",{"_index":2764,"title":{},"body":{"injectables/UserService.html":{}}}],["reauthentifizierung",{"_index":2765,"title":{},"body":{"injectables/UserService.html":{}}}],["received",{"_index":1081,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["receives",{"_index":1822,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["receiving",{"_index":267,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["recent",{"_index":1157,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recht",{"_index":2215,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["recht24.de",{"_index":1621,"title":{},"body":{"components/ImprintComponent.html":{}}}],["rechte",{"_index":2197,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["rechtsgrundlage",{"_index":2170,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["recipient",{"_index":1041,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["recipient's",{"_index":2645,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["recipient.id",{"_index":1486,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recipient.type",{"_index":1484,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recipientavatarurl",{"_index":1060,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recipientcache",{"_index":2446,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["recipientid",{"_index":723,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["recipientname",{"_index":737,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["recipients",{"_index":1020,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recipientstatus",{"_index":1059,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["recognized",{"_index":3156,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["recompiles",{"_index":3058,"title":{},"body":{"index.html":{}}}],["record",{"_index":3164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["red",{"_index":865,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["redirects",{"_index":2802,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["ref",{"_index":220,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["ref.afterclosed().subscribe(result",{"_index":222,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["reference",{"_index":776,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["references",{"_index":1755,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["reflect",{"_index":749,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["regex",{"_index":1987,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["register",{"_index":1571,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["registration",{"_index":1951,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["registriert",{"_index":2047,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reject",{"_index":2696,"title":{},"body":{"injectables/UserService.html":{}}}],["reject(error",{"_index":2746,"title":{},"body":{"injectables/UserService.html":{}}}],["reject(new",{"_index":2742,"title":{},"body":{"injectables/UserService.html":{}}}],["rejects",{"_index":2683,"title":{},"body":{"injectables/UserService.html":{}}}],["related",{"_index":1756,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["relative",{"_index":435,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["relevant",{"_index":2351,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["reloading",{"_index":1309,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["reloads",{"_index":3059,"title":{},"body":{"index.html":{}}}],["remove",{"_index":450,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["removemember",{"_index":260,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["removemember(index",{"_index":2405,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["removemember(member",{"_index":196,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["removemember(user",{"_index":285,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["removerecipient(member",{"_index":1508,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["removes",{"_index":194,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["removing",{"_index":291,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/InnerChannelComponent.html":{}}}],["repeat",{"_index":2840,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["reply",{"_index":3159,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["replycount",{"_index":726,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["replycountsmap",{"_index":2920,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":3035,"title":{},"body":{"index.html":{}}}],["representing",{"_index":1045,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["request",{"_index":3072,"title":{},"body":{"index.html":{}}}],["requested",{"_index":1769,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["requesting",{"_index":1764,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["requests",{"_index":1775,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/PasswortResetComponent.html":{}}}],["required",{"_index":305,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"index.html":{}}}],["reset",{"_index":618,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"index.html":{}}}],["reset'},{'name",{"_index":537,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["reset.component",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["reset.component.html",{"_index":1966,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.scss",{"_index":1965,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts",{"_index":1964,"title":{},"body":{"components/PasswortResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:104",{"_index":1985,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:118",{"_index":1980,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:131",{"_index":2001,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:146",{"_index":1996,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:159",{"_index":2008,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:172",{"_index":2004,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:209",{"_index":1991,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:49",{"_index":2026,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:54",{"_index":2019,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:59",{"_index":2027,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:64",{"_index":2021,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:69",{"_index":2016,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:74",{"_index":1976,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.component.ts:96",{"_index":1994,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["reset.html",{"_index":3094,"title":{},"body":{"index.html":{}}}],["reset/passwort",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"components/PasswortResetComponent.html":{},"coverage.html":{}}}],["resetcontextforsearchthread",{"_index":2637,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["resetinactivitytimer",{"_index":903,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["resetpassword",{"_index":671,"title":{},"body":{"components/AuthActionComponent.html":{},"components/PasswortResetComponent.html":{}}}],["resetpassword(email",{"_index":2006,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["resetpasswordform",{"_index":1970,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["resetresultsonerror",{"_index":1460,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["resets",{"_index":1280,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["resettextareaheight(textarea",{"_index":1281,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["resetting",{"_index":292,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["resize",{"_index":868,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["resolve",{"_index":2702,"title":{},"body":{"injectables/UserService.html":{}}}],["resolves",{"_index":2649,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["response",{"_index":3162,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["responsive",{"_index":2995,"title":{},"body":{"index.html":{}}}],["rest",{"_index":1429,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["restoring",{"_index":2505,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result",{"_index":223,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/InnerChannelComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["result.avatarurl",{"_index":2382,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["result.content",{"_index":2596,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.email",{"_index":2384,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["result.id",{"_index":2559,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.isonline",{"_index":2381,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["result.name",{"_index":2383,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["result.parentid",{"_index":2558,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.replycount",{"_index":2590,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.selectedmembers",{"_index":829,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["result.senderavatar",{"_index":2584,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.sendername",{"_index":2582,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.threadchannelid",{"_index":2557,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result.timestamp",{"_index":2588,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result?.content?.text",{"_index":2580,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["result?.selectedmembers",{"_index":827,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["results",{"_index":242,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":2607,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["retrieved",{"_index":2819,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["retrieves",{"_index":1855,"title":{},"body":{"components/NewPasswortComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["retrieving",{"_index":1382,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["return",{"_index":325,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["returning",{"_index":2402,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["returns",{"_index":276,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["reverse",{"_index":1928,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["revert",{"_index":1389,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["reverting",{"_index":1395,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["rgba(0",{"_index":460,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["right",{"_index":375,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"index.html":{}}}],["root",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppStateService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":495,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["rotate",{"_index":987,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["rotate(180deg",{"_index":989,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["rotate(225deg",{"_index":1933,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["rotate(230deg",{"_index":399,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["route",{"_index":632,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["router",{"_index":630,"title":{},"body":{"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["routerlink",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["routermodule",{"_index":1836,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["routeroutlet",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":637,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["row",{"_index":1927,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["run",{"_index":3050,"title":{},"body":{"index.html":{}}}],["runs",{"_index":785,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["rxjs",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["s.uid",{"_index":327,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["same",{"_index":802,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{}}}],["sample",{"_index":3041,"title":{},"body":{"index.html":{}}}],["sans",{"_index":873,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["saturate(100",{"_index":394,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["saturate(2733",{"_index":1932,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["saturate(6834",{"_index":397,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["savemessage(msg",{"_index":1349,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["saves",{"_index":200,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["saving",{"_index":227,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scale",{"_index":454,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/InnerChannelComponent.html":{}}}],["scale(1.01",{"_index":1576,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale(1.1",{"_index":2394,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["scenario",{"_index":1300,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["schema",{"_index":750,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["schemas",{"_index":2428,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["schließen",{"_index":1326,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["schreiben",{"_index":2852,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["screen",{"_index":556,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["screen.component",{"_index":2421,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["screen.component.html",{"_index":2845,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["screen.component.scss",{"_index":2846,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["screen.component.ts",{"_index":2844,"title":{},"body":{"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["screen.html",{"_index":3101,"title":{},"body":{"index.html":{}}}],["screen/welcome",{"_index":2420,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["screenshot",{"_index":3042,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":2987,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":1499,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scrollbar",{"_index":1815,"title":{},"body":{"components/MemberListDialogComponent.html":{},"dependencies.html":{}}}],["scrolling",{"_index":1038,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scrolls",{"_index":1293,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scrollt",{"_index":1377,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scrolltobottom",{"_index":1295,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["scss",{"_index":2976,"title":{},"body":{"index.html":{}}}],["se.name",{"_index":185,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["search",{"_index":88,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["search/workspace",{"_index":2498,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["searches",{"_index":1440,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["searchfieldcomponent",{"_index":543,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["searching",{"_index":1031,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["searchquery",{"_index":1032,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["secondary",{"_index":2391,"title":{},"body":{"components/ProfilDialogComponent.html":{}}}],["seconds",{"_index":720,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["section",{"_index":532,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{},"index.html":{}}}],["see",{"_index":1981,"title":{},"body":{"components/PasswortResetComponent.html":{},"index.html":{}}}],["segoe",{"_index":878,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["sein",{"_index":842,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["seiner",{"_index":2117,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["sel",{"_index":208,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["sel.name",{"_index":165,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["sel.uid",{"_index":323,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["selcuk",{"_index":1610,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["selcuk.80&#64;outlook.de",{"_index":2209,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["selcuk.80@outlook.de",{"_index":2335,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["select",{"_index":1108,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["selectchannel",{"_index":1638,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["selectchannel(channel",{"_index":1674,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["selected",{"_index":51,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["selectedchannel",{"_index":1630,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["selectedmember",{"_index":2434,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["selectedmemberid",{"_index":2430,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["selectedmembername",{"_index":2431,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["selectedmembers",{"_index":94,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["selectedmembers.length",{"_index":348,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["selectedmembers[0].name",{"_index":345,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["selectedmembersdialogcomponent",{"_index":50,"title":{"components/SelectedMembersDialogComponent.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["selectedrecipients",{"_index":1103,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["selectedthread",{"_index":2436,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["selectedthreadchannel",{"_index":2437,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["selecting",{"_index":1523,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["selection",{"_index":431,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["selectmember",{"_index":261,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberSectionDialogComponent.html":{}}}],["selectmember(member",{"_index":189,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["selectmember(user",{"_index":288,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["selector",{"_index":65,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["selects",{"_index":290,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["sendemailverification",{"_index":2730,"title":{},"body":{"injectables/UserService.html":{}}}],["sendemailverification(user",{"_index":2758,"title":{},"body":{"injectables/UserService.html":{}}}],["senden",{"_index":2078,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["sender's",{"_index":1403,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["senderavatar",{"_index":712,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["senderid",{"_index":713,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{}}}],["sendername",{"_index":714,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["sending",{"_index":1021,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sendmessage",{"_index":2343,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["sendmessagetoall(textarea",{"_index":1525,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sendpasswordresetemail",{"_index":2028,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["sendpasswordresetemail(this.auth",{"_index":2039,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["sends",{"_index":1286,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["sendtoallusers(users",{"_index":1539,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sendtosinglerecipient(recipient",{"_index":1483,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sendverificationemail",{"_index":2668,"title":{},"body":{"injectables/UserService.html":{}}}],["sendverificationemail(user",{"_index":2710,"title":{},"body":{"injectables/UserService.html":{}}}],["sent",{"_index":1080,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["separate",{"_index":3021,"title":{},"body":{"index.html":{}}}],["separating",{"_index":3047,"title":{},"body":{"index.html":{}}}],["sepia(39",{"_index":396,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["sepia(62",{"_index":1931,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["serif",{"_index":874,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["serve",{"_index":3051,"title":{},"body":{"index.html":{}}}],["service",{"_index":102,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["services",{"_index":1644,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["set",{"_index":311,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["set(this.lastusedemojisreceived",{"_index":1175,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["set(this.lastusedemojissent)].slice",{"_index":1173,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["set(this.lastusedemojissent)].slice(0",{"_index":1375,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sets",{"_index":1116,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["setshowwelcomecontainer",{"_index":601,"title":{},"body":{"injectables/AppStateService.html":{}}}],["setshowwelcomecontainer(show",{"_index":604,"title":{},"body":{"injectables/AppStateService.html":{}}}],["settimeout",{"_index":176,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/IntroComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["setting",{"_index":2623,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["settings",{"_index":2009,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["setuserasinactive",{"_index":904,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["setze",{"_index":137,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["setzen",{"_index":975,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["shadow",{"_index":457,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sheet",{"_index":45,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["shift",{"_index":1284,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["short",{"_index":2005,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["shortly",{"_index":172,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["shouldcancelbroadcast",{"_index":1480,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["shouldshowcontainer",{"_index":2464,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["show",{"_index":606,"title":{},"body":{"injectables/AppStateService.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["showallemojislist",{"_index":733,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["showallmembers",{"_index":169,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["showatdropdown",{"_index":1107,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["showdateseparator",{"_index":738,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{}}}],["showdesktopheader",{"_index":2451,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["showeditoptions",{"_index":1085,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["showing",{"_index":1401,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["showmemberlistdialog",{"_index":2452,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["shown",{"_index":1413,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["showregister",{"_index":1554,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shows",{"_index":166,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"index.html":{}}}],["showsearchfield",{"_index":1043,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["showtooltip(event",{"_index":1404,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["showwelcomecontainer",{"_index":599,"title":{},"body":{"injectables/AppStateService.html":{},"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["sich",{"_index":2327,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["sie",{"_index":840,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["sign",{"_index":2801,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["signals",{"_index":2354,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["signed",{"_index":2682,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithemaillink",{"_index":2822,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["signinwithemaillink(firebaseauth",{"_index":2830,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["signout",{"_index":2731,"title":{},"body":{"injectables/UserService.html":{}}}],["signout(auth",{"_index":2785,"title":{},"body":{"injectables/UserService.html":{}}}],["signs",{"_index":2694,"title":{},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["signup",{"_index":1566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["signup'},{'name",{"_index":546,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["signup.html",{"_index":3098,"title":{},"body":{"index.html":{}}}],["signup/signup.component",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["signupcomponent",{"_index":545,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["similarly",{"_index":2808,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["simple",{"_index":2512,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["simplebar",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["simplechanges",{"_index":1008,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sind",{"_index":1792,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/PrivacyComponent.html":{}}}],["single",{"_index":195,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["sinne",{"_index":2206,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["site",{"_index":3142,"title":{},"body":{"index.html":{}}}],["size",{"_index":378,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["sizing",{"_index":441,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["slice(0",{"_index":1176,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["small",{"_index":2475,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["smooth",{"_index":2603,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["snapshot",{"_index":2361,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["snapshot.docs.map((doc",{"_index":2781,"title":{},"body":{"injectables/UserService.html":{}}}],["sobald",{"_index":2295,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["sofern",{"_index":2248,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["solche",{"_index":2140,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["solid",{"_index":439,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sollten",{"_index":839,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["sorting",{"_index":1316,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["soweit",{"_index":2172,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["sowie",{"_index":2109,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["space",{"_index":365,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["span",{"_index":471,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["specific",{"_index":432,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["specificmembername",{"_index":89,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["specified",{"_index":1676,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["specify",{"_index":762,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["speichern",{"_index":2358,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["speicherung",{"_index":2148,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["split",{"_index":2618,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["später",{"_index":2069,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["src",{"_index":3078,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":3154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/add",{"_index":6,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"coverage.html":{}}}],["src/app/app",{"_index":597,"title":{},"body":{"injectables/AppStateService.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:44",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":610,"title":{},"body":{"components/AuthActionComponent.html":{},"coverage.html":{}}}],["src/app/avatar/avatar.component.ts",{"_index":2873,"title":{},"body":{"coverage.html":{}}}],["src/app/channel",{"_index":759,"title":{},"body":{"components/ChannelDialogComponent.html":{},"coverage.html":{}}}],["src/app/channel.service.ts",{"_index":2878,"title":{},"body":{"coverage.html":{}}}],["src/app/chat",{"_index":2881,"title":{},"body":{"coverage.html":{}}}],["src/app/chat/chat.component.ts",{"_index":2412,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["src/app/devspace/devspace.component.ts",{"_index":2887,"title":{},"body":{"coverage.html":{}}}],["src/app/direct",{"_index":889,"title":{},"body":{"components/DirectMessagesComponent.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":2890,"title":{},"body":{"coverage.html":{}}}],["src/app/entwicklerteam/entwicklerteam.component.ts",{"_index":2894,"title":{},"body":{"coverage.html":{}}}],["src/app/footer/footer.component.ts",{"_index":1543,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":1550,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:13",{"_index":1562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":1559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:18",{"_index":1561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":1560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/imprint/imprint.component.ts",{"_index":1593,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/imprint/imprint.component.ts:13",{"_index":1600,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/imprint/imprint.component.ts:17",{"_index":1602,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/imprint/imprint.component.ts:20",{"_index":1601,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/inner",{"_index":1623,"title":{},"body":{"components/InnerChannelComponent.html":{},"coverage.html":{}}}],["src/app/intro/intro.component.ts",{"_index":1735,"title":{},"body":{"components/IntroComponent.html":{},"coverage.html":{}}}],["src/app/intro/intro.component.ts:12",{"_index":1739,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/intro/intro.component.ts:15",{"_index":1740,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":2903,"title":{},"body":{"coverage.html":{}}}],["src/app/member",{"_index":1744,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"coverage.html":{}}}],["src/app/member.model.ts",{"_index":1743,"title":{},"body":{"interfaces/Member.html":{},"coverage.html":{}}}],["src/app/members",{"_index":2910,"title":{},"body":{"coverage.html":{}}}],["src/app/message.models.ts",{"_index":708,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"coverage.html":{}}}],["src/app/message.service.ts",{"_index":2915,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/new",{"_index":1833,"title":{},"body":{"components/NewPasswortComponent.html":{},"coverage.html":{}}}],["src/app/passwort",{"_index":1963,"title":{},"body":{"components/PasswortResetComponent.html":{},"coverage.html":{}}}],["src/app/privacy/privacy.component.ts",{"_index":2090,"title":{},"body":{"components/PrivacyComponent.html":{},"coverage.html":{}}}],["src/app/privacy/privacy.component.ts:13",{"_index":2093,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:17",{"_index":2095,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:20",{"_index":2094,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/private",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["src/app/profil",{"_index":2336,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"coverage.html":{}}}],["src/app/search",{"_index":1000,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"coverage.html":{}}}],["src/app/selected",{"_index":2400,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{},"coverage.html":{}}}],["src/app/signup/signup.component.ts",{"_index":2931,"title":{},"body":{"coverage.html":{}}}],["src/app/thread",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["src/app/thread/thread.component.ts",{"_index":2935,"title":{},"body":{"coverage.html":{}}}],["src/app/user.service.ts",{"_index":2656,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:102",{"_index":2718,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:123",{"_index":2707,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:131",{"_index":2711,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:139",{"_index":2713,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:144",{"_index":2709,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:162",{"_index":2715,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:176",{"_index":2722,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:190",{"_index":2675,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:200",{"_index":2688,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:219",{"_index":2684,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:225",{"_index":2686,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:235",{"_index":2680,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:246",{"_index":2677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:263",{"_index":2704,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:278",{"_index":2691,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:36",{"_index":2674,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:48",{"_index":2681,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:62",{"_index":2703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:83",{"_index":2698,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/verify",{"_index":2788,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":2843,"title":{},"body":{"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":1315,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["standalone",{"_index":68,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["start",{"_index":338,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["started",{"_index":2974,"title":{"index.html":{}},"body":{}}],["startediting(msg",{"_index":1390,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["starting",{"_index":1767,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"index.html":{}}}],["startprivatechat",{"_index":1748,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["startprivatechat(member",{"_index":1780,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["starts",{"_index":1092,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["state",{"_index":293,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["state.service",{"_index":2422,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["state.service.ts",{"_index":598,"title":{},"body":{"injectables/AppStateService.html":{},"coverage.html":{},"index.html":{}}}],["state.service.ts:13",{"_index":605,"title":{},"body":{"injectables/AppStateService.html":{}}}],["state.service.ts:7",{"_index":607,"title":{},"body":{"injectables/AppStateService.html":{}}}],["state.service.ts:9",{"_index":602,"title":{},"body":{"injectables/AppStateService.html":{}}}],["statements",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2474,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["statthaft",{"_index":2290,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["status",{"_index":468,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"index.html":{}}}],["steigerung",{"_index":2181,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["steps",{"_index":2519,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"index.html":{}}}],["stimmen",{"_index":1895,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["storage",{"_index":2673,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["storagebucket",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":3158,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stored",{"_index":2506,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["storedemail",{"_index":2814,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["stores",{"_index":1050,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{}}}],["storing",{"_index":1158,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["str.33",{"_index":1614,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["string",{"_index":22,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/InnerChannelComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["structure",{"_index":746,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["structured",{"_index":3007,"title":{},"body":{"index.html":{}}}],["studio",{"_index":3054,"title":{},"body":{"index.html":{}}}],["style",{"_index":463,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["styles",{"_index":247,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["styles.scss",{"_index":349,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["styleurl",{"_index":1546,"title":{},"body":{"components/FooterComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/PrivacyComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["styleurls",{"_index":73,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["styling",{"_index":2022,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["sub",{"_index":2518,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{},"index.html":{}}}],["submit",{"_index":3127,"title":{},"body":{"index.html":{}}}],["submits",{"_index":1863,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["submitsigninlink",{"_index":2796,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["submitsigninlink(firebaseauth",{"_index":2809,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["submitted",{"_index":1841,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["subscribes",{"_index":1669,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["subscribing",{"_index":1861,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["success",{"_index":1881,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["successful",{"_index":233,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/InnerChannelComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["successfully",{"_index":1882,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["successmessage",{"_index":1842,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["such",{"_index":616,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["support",{"_index":3011,"title":{},"body":{"index.html":{}}}],["supports",{"_index":61,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["sure",{"_index":3146,"title":{},"body":{"index.html":{}}}],["switch",{"_index":1910,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["switches",{"_index":2476,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["sysmsg",{"_index":1513,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["system",{"_index":1507,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["systemmessages",{"_index":1511,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["table",{"_index":2943,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2942,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":797,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["taking",{"_index":2348,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["team",{"_index":835,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["team.name",{"_index":1727,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["teams",{"_index":1686,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["technologies",{"_index":2984,"title":{},"body":{"index.html":{}}}],["telefon",{"_index":2207,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["template",{"_index":246,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["templateurl",{"_index":71,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["term",{"_index":181,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["test",{"_index":3077,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2986,"title":{},"body":{"index.html":{}}}],["text",{"_index":739,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/typealiases.html":{}}}],["text/image",{"_index":1478,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["textarea",{"_index":866,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["textarea's",{"_index":1277,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["textarea.style.paddingbottom",{"_index":1279,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["themenbezogen",{"_index":841,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["then((channels",{"_index":1464,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["then((data",{"_index":950,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["then((messages",{"_index":1132,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["then((user",{"_index":1230,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["then((userdata",{"_index":1233,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["then((users",{"_index":1444,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["then(users",{"_index":155,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["there's",{"_index":2805,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.addfallbackmessageifneeded(result",{"_index":2532,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.addrecipient(item",{"_index":1474,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.adjusttextareaheight(textarea",{"_index":1256,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.allmembers",{"_index":1518,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.allusers",{"_index":138,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.allusers.filter",{"_index":319,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.allusers.filter((u",{"_index":146,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.allusers.filter(m",{"_index":161,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.allusers.filter(u",{"_index":156,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.allusers.length",{"_index":324,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.appstateservice.getshowwelcomecontainer",{"_index":2470,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.appstateservice.setshowwelcomecontainer(true",{"_index":2784,"title":{},"body":{"injectables/UserService.html":{}}}],["this.assignthreadchannel(result",{"_index":2531,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.auth.currentuser",{"_index":683,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.bottomsheetref",{"_index":236,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.bottomsheetref.dismiss",{"_index":240,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.bottomsheetref.dismiss(updated",{"_index":237,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.bottomsheetref?.dismiss",{"_index":332,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.bottomsheetref?.dismiss(updated",{"_index":331,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.buildbroadcastdata(channels",{"_index":1534,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.buildnewchannel(name",{"_index":1703,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.buildparentmessage",{"_index":2530,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.channelid",{"_index":121,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.channelname",{"_index":123,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{}}}],["this.channelname.tolowercase",{"_index":822,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.channelnameexists",{"_index":823,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/InnerChannelComponent.html":{}}}],["this.channelselected.emit(channel",{"_index":1719,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelselected.emit(null",{"_index":1725,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice",{"_index":1462,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.channelservice.addchannel",{"_index":828,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.channelservice.addchannel(newchannel",{"_index":1706,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice.changechannel(channel",{"_index":1718,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice.changechannel(newchannel",{"_index":1707,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice.getchannelbyid",{"_index":2567,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.channelservice.getchannels",{"_index":817,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.channelservice.leavechannel(channelid",{"_index":1723,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice.listenchannelslive",{"_index":1695,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.channelservice.setmembers(this.channelid",{"_index":212,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.checkdesktopwidth",{"_index":1120,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.checkemailexists(email",{"_index":2045,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.checkscreensize",{"_index":2471,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.clearbroadcastinput(textarea",{"_index":1537,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.clearsearchdata",{"_index":1475,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.close.emit",{"_index":231,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{}}}],["this.closedialogorsheet",{"_index":214,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.closesearch",{"_index":1416,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.closethread",{"_index":2551,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.closethreadchannel",{"_index":2638,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.conversationid",{"_index":1127,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.createbroadcastmessagedata(convid",{"_index":1488,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.createchannel(result.channelname",{"_index":1722,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.currentmessageid",{"_index":1385,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentmobileview",{"_index":2502,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.currentuser",{"_index":1122,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentuser.avatarurl",{"_index":1498,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentuser.id",{"_index":1129,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentuser.name",{"_index":1496,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentuser?.id",{"_index":1482,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.currentuser?.name",{"_index":1337,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.data",{"_index":119,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data.channelid",{"_index":120,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.data.channelname",{"_index":122,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.data.filteredmembers",{"_index":126,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.data.members",{"_index":124,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.data.useravatarurl",{"_index":2375,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data.useremail",{"_index":2377,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data.userid",{"_index":2378,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data.username",{"_index":2371,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data.userstatus",{"_index":2373,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.data?.filteredmembers",{"_index":145,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.description",{"_index":830,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.determinethreadid(message",{"_index":2627,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.dialog.open(channeldialogcomponent",{"_index":1720,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.dialog.open(membersdialogcomponent",{"_index":825,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.dialog.open(selectedmembersdialogcomponent",{"_index":221,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.dialogref",{"_index":229,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.dialogref.close",{"_index":230,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["this.dialogref.close(updated",{"_index":235,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.doeschannelnameexist(name",{"_index":1700,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.editableuseremail",{"_index":2829,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.email",{"_index":2823,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.ensurecurrentuserincluded(members",{"_index":1701,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.entwicklerteams",{"_index":1697,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.entwicklerteams.filter",{"_index":1724,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.entwicklerteams.push(newchannel",{"_index":1705,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.entwicklerteams.some",{"_index":1708,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.errormessage",{"_index":1892,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.excludeexistingandselected",{"_index":144,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.fb.group",{"_index":1886,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.fetchlasttenmessages(conversationid",{"_index":1366,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.fetchrecipientname(message.recipientid",{"_index":2631,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.filledstates[field",{"_index":2037,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.filteredmembers",{"_index":127,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.filteredmembers.filter(u",{"_index":330,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.filteredmembers.length",{"_index":128,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.filteredresults",{"_index":1435,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.finishbroadcast(textarea",{"_index":1536,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.forcedmobileactive",{"_index":2500,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.formatthreadmessages(childmessages",{"_index":2543,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.geterrormessage(error",{"_index":1907,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.getthreadchannelid(result",{"_index":2524,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.getyesterdaydate",{"_index":1074,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.handlechannelsearch(rest",{"_index":1432,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.handleemailverification(this.oobcode",{"_index":674,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.handleemptysearch",{"_index":1426,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.handlelogout(user",{"_index":2783,"title":{},"body":{"injectables/UserService.html":{}}}],["this.handlememberssaved(updated",{"_index":213,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.handlemobileviewforsearchthread",{"_index":2635,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.handlenoprefix",{"_index":1433,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.handlenousersignedin(user",{"_index":2736,"title":{},"body":{"injectables/UserService.html":{}}}],["this.handlepasswordreset(this.oobcode",{"_index":672,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.handleresponsivethreadchannelview",{"_index":2533,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.handlesignedinuser(user",{"_index":2735,"title":{},"body":{"injectables/UserService.html":{}}}],["this.handleusersearch(rest",{"_index":1431,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.highlightthreadmessageasync(message",{"_index":2614,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.imageurl",{"_index":1254,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.inactivitytimeout",{"_index":962,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.initializedirectconversation",{"_index":1125,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.ischannelnamevalid",{"_index":814,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["this.ischannelsvisible",{"_index":980,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["this.isdesktop",{"_index":1153,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.isemojipickervisible",{"_index":1260,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.isimagemodalopen",{"_index":1268,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.ismemberslistvisible",{"_index":170,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.isprivatechat",{"_index":2480,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.issameday(date",{"_index":1186,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.issearchactive",{"_index":2484,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.istextareaexpanded",{"_index":1257,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.isthreadactive",{"_index":2633,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.isthreadalreadyopen(message",{"_index":2612,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.isthreadchannelfromsearch",{"_index":2552,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.isthreadfromsearch",{"_index":2634,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.isworkspacevisible",{"_index":2486,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.items",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastusedemojisreceived",{"_index":1166,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojisreceived.includes(newemoji",{"_index":1340,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojisreceived.push",{"_index":1172,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojissent",{"_index":1165,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojissent.includes(newemoji",{"_index":1338,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojissent.push",{"_index":1169,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.lastusedemojissent].slice",{"_index":1339,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.limittopemojis",{"_index":1368,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.listenforauthchanges",{"_index":946,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.loadallusers",{"_index":130,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loadchannelnameifneeded(parentdoc",{"_index":2537,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.loadchildmessages(threadchannelid",{"_index":2542,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.loadcurrentuser",{"_index":1118,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loading",{"_index":687,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.loadlastusedemojis",{"_index":1139,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loadlastusedemojisforconversation(conversationid",{"_index":1361,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loadmembers",{"_index":936,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.loadparentdoc(threadchannelid",{"_index":2536,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.loadprivatemessages",{"_index":1313,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loadprivatemessagesforconversation(conversationid",{"_index":1362,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.loadrecipientdata",{"_index":1119,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.location.back",{"_index":1604,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyComponent.html":{}}}],["this.members",{"_index":125,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{}}}],["this.members.filter(m",{"_index":1800,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.members.some((ex",{"_index":147,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.members.some((m",{"_index":1799,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.members.some(ex",{"_index":157,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.members.some(m",{"_index":209,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.membersadded.emit(updated",{"_index":238,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.memberselected.emit",{"_index":1832,"title":{},"body":{"components/MemberSectionDialogComponent.html":{}}}],["this.memberselected.emit(member",{"_index":981,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messagelist",{"_index":1296,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messagelist.nativeelement.scrollheight",{"_index":1298,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messagelist.nativeelement.scrolltop",{"_index":1297,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messageservice",{"_index":1130,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messageservice.generateconversationid",{"_index":1128,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messageservice.getmessage",{"_index":2562,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.messageservice.getmessagesonce",{"_index":1161,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["this.messageservice.onalluserschanged",{"_index":132,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.messageservice.onalluserschanged((allusers",{"_index":937,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.messageservice.onrecipientstatuschanged",{"_index":2380,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.messageservice.sendbroadcastmessage(broadcastdata",{"_index":1535,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messageservice.sendmessage(msgdata",{"_index":1489,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messageservice.setuseronlinestatus(current.uid",{"_index":978,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.messageservice.setuseronlinestatus(currentuser.uid",{"_index":961,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.messageservice.setuseronlinestatus(user.uid",{"_index":976,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.messageservice.updatemessage(messageid",{"_index":1354,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messagetoall",{"_index":1263,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.messagetoall.trim",{"_index":1481,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.mode",{"_index":667,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.newpasswordform",{"_index":1885,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.get('confirmpassword')?.value",{"_index":1909,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.get('newpassword')?.value",{"_index":1908,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.reset",{"_index":1905,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.valid",{"_index":1898,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.value.newpassword",{"_index":1899,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.newpasswordform.valuechanges.subscribe",{"_index":1890,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.noresultsfound",{"_index":1436,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.olddesktopview",{"_index":2501,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.oldissearchactive",{"_index":2503,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.oldisworkspacevisible",{"_index":2504,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.oobcode",{"_index":669,"title":{},"body":{"components/AuthActionComponent.html":{},"components/NewPasswortComponent.html":{}}}],["this.openaddmembersoverlay.emit",{"_index":1809,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.openprivatechat.emit(payload",{"_index":1805,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.openprofilerequested.emit(member",{"_index":1807,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.originalmessage",{"_index":1391,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.originalmessage.content",{"_index":1398,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.parsedatestring(datestring",{"_index":1184,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.passwordsmatch",{"_index":1893,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.performemailupdate(user",{"_index":2752,"title":{},"body":{"injectables/UserService.html":{}}}],["this.placeholdertext",{"_index":1150,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.preparechildmessages(threadchannelid",{"_index":2528,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.prepareparentdoc",{"_index":2526,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.prepthreadchannelsearch(result",{"_index":2523,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.privatemessages",{"_index":1133,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.privatemessages.foreach((m",{"_index":1306,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.privatemessages.map((m",{"_index":1355,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.privatemessages.push(sysmsg",{"_index":1514,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.processemojisfrommessages(lastmessages",{"_index":1367,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.reauthenticateuser(user",{"_index":2751,"title":{},"body":{"injectables/UserService.html":{}}}],["this.recipientavatarurl",{"_index":1236,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.recipientcache.get(recipientid",{"_index":2652,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.recipientcache.has(recipientid",{"_index":2651,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.recipientcache.set(recipientid",{"_index":2655,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.recipientid",{"_index":1124,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.recipientstatus",{"_index":1234,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.resetcontextforsearchthread",{"_index":2626,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.resetinactivitytimer",{"_index":947,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.resetpassword(email",{"_index":2050,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.resetpasswordform.get(field)?.value",{"_index":2038,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.resetpasswordform.valid",{"_index":2042,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.resetpasswordform.value.email",{"_index":2043,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["this.resetresultsonerror",{"_index":1446,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.resettextareaheight(textarea",{"_index":1275,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.resetthreadstate",{"_index":2611,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":1889,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":666,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.router.navigate(['/avatar",{"_index":688,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.router.navigate(['/chat",{"_index":2833,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1741,"title":{},"body":{"components/IntroComponent.html":{},"components/NewPasswortComponent.html":{},"injectables/UserService.html":{}}}],["this.router.navigate(['/new",{"_index":678,"title":{},"body":{"components/AuthActionComponent.html":{},"components/PasswortResetComponent.html":{}}}],["this.router.navigate(['/signup",{"_index":1567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url",{"_index":1565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.scrolltobottom",{"_index":1138,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.scrolltomessage(messageid",{"_index":2608,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.scrolltomessage(result.id",{"_index":2644,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.searchquery",{"_index":1477,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.searchquery.trim",{"_index":1425,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedchannel",{"_index":2485,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.selectedmember",{"_index":2481,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.selectedmembers",{"_index":197,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["this.selectedmembers.filter",{"_index":207,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.filter(m",{"_index":198,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.push(member",{"_index":192,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.selectedmembers.push(user",{"_index":329,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.some(m",{"_index":190,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.some(s",{"_index":326,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.some(se",{"_index":184,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["this.selectedmembers.some(sel",{"_index":164,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.selectedmembers.splice(index",{"_index":2409,"title":{},"body":{"components/SelectedMembersDialogComponent.html":{}}}],["this.selectedrecipients.filter",{"_index":1527,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedrecipients.filter((r",{"_index":1530,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedrecipients.findindex((m",{"_index":1509,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedrecipients.push(member",{"_index":1506,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedrecipients.some",{"_index":1504,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedrecipients.splice(index",{"_index":1510,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.selectedthread",{"_index":2511,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.selectedthreadchannel",{"_index":2548,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.selectedthreadchannel.messages.push",{"_index":2598,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.sendmessagetoall(textarea",{"_index":1292,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.sendtoallusers(users",{"_index":1531,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.sendtosinglerecipient(u",{"_index":1540,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.sendverificationemail(user",{"_index":2755,"title":{},"body":{"injectables/UserService.html":{}}}],["this.setupselectedthread(message",{"_index":2613,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.setuserasinactive",{"_index":964,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.shouldcancelbroadcast",{"_index":1526,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.shouldshowcontainer",{"_index":2493,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.showatdropdown",{"_index":1517,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.showdesktopheader",{"_index":2508,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.showeditoptions",{"_index":1387,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.showmemberlistdialog",{"_index":2479,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.showregister",{"_index":1564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.showwelcomecontainer",{"_index":609,"title":{},"body":{"injectables/AppStateService.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["this.specificmembername",{"_index":193,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.specificmembername.tolowercase",{"_index":182,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.submitsigninlink(firebaseauth",{"_index":2828,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.submitted",{"_index":1891,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["this.successmessage",{"_index":1901,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.tooltipemoji",{"_index":1407,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.tooltipposition",{"_index":1409,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.tooltipsendername",{"_index":1408,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.tooltipvisible",{"_index":1406,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.unsubscribeallusers",{"_index":131,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.unsubscribefn",{"_index":1694,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["this.unsubscriberecipient",{"_index":2379,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.updatechannelmembers",{"_index":1801,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["this.updatechannelresults(channels",{"_index":1465,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.updatecontainervisibility",{"_index":2472,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.updateemailinfirestore(user.uid",{"_index":2754,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateplaceholdertext(event.target.innerwidth",{"_index":1146,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.updateplaceholdertext(window.innerwidth",{"_index":1121,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.updateuserresults(users",{"_index":1445,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.useravatarurl",{"_index":2374,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.useremail",{"_index":2376,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.userisactive",{"_index":959,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["this.username",{"_index":2370,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.userservice",{"_index":948,"title":{},"body":{"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["this.userservice.getallusers",{"_index":154,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["this.userservice.getcurrentuserdata",{"_index":1123,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["this.userservice.getcurrentuserid",{"_index":1240,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["this.userservice.getuserbyid(recipientid",{"_index":2653,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["this.userservice.updateemailinfirestore(user.uid",{"_index":685,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["this.userstatus",{"_index":2372,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["this.verifysigninlink(firebaseauth",{"_index":2826,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["those",{"_index":151,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/InnerChannelComponent.html":{},"index.html":{}}}],["thread",{"_index":548,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["thread'},{'name",{"_index":550,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["thread.html",{"_index":3099,"title":{},"body":{"index.html":{}}}],["thread/thread.component",{"_index":2424,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["threadchannel",{"_index":2449,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["threadchannelcomponent",{"_index":547,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["threadchannelid",{"_index":728,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["threadchannelparentdoc",{"_index":2411,"title":{"interfaces/ThreadChannelParentDoc.html":{}},"body":{"interfaces/ThreadChannelParentDoc.html":{},"coverage.html":{}}}],["threadcomponent",{"_index":549,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["threadcomponent.highlightthreadmessage(message.id",{"_index":2617,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["threadcomponent?.highlightthreadmessage",{"_index":2616,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["threaddata",{"_index":2442,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["threadid",{"_index":735,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["threads",{"_index":2854,"title":{},"body":{"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["through",{"_index":1784,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/NewPasswortComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["throw",{"_index":2040,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["time",{"_index":715,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["timestamp",{"_index":716,"title":{},"body":{"interfaces/BroadcastMessageData.html":{},"interfaces/ChannelMessageData.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["timestamps",{"_index":1490,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["title",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelDialogComponent.html":{}}}],["tmg",{"_index":1607,"title":{},"body":{"components/ImprintComponent.html":{}}}],["toggleatdropdown",{"_index":1516,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["togglechannels",{"_index":905,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["toggleeditmessage(msg",{"_index":1394,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["toggleeditoptions(msgid",{"_index":1384,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["toggleemojipicker",{"_index":1259,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["toggleemojipickerformessage(msg",{"_index":1303,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["toggles",{"_index":1042,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["tooltip",{"_index":1095,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["tooltipemoji",{"_index":1099,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["tooltipposition",{"_index":1098,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["tooltipsendername",{"_index":1100,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["tooltipvisible",{"_index":1097,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["top",{"_index":342,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["topic",{"_index":3008,"title":{},"body":{"index.html":{}}}],["topics",{"_index":3048,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1140,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["tracks",{"_index":1075,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{}}}],["transform",{"_index":372,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["transition",{"_index":367,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["translate",{"_index":1582,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translates",{"_index":1992,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["translatey",{"_index":859,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["translatey(0",{"_index":1586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["transparent",{"_index":452,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tree",{"_index":249,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["treten",{"_index":2310,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["triggered",{"_index":2804,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["triggers",{"_index":1419,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["trimmed",{"_index":793,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["trimmed.charat(0",{"_index":1428,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["trimmed.substring(1).trim",{"_index":1430,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["true",{"_index":69,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":1810,"title":{},"body":{"components/MemberListDialogComponent.html":{}}}],["try",{"_index":675,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["ts",{"_index":3103,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1216,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["type",{"_index":23,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"interfaces/BroadcastMessageData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/ChannelMessageData.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/FirestoreMessageData.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"interfaces/Member.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageContent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type='private",{"_index":1538,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["typealiases",{"_index":3152,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1053,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["typeof",{"_index":1492,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["types",{"_index":1421,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["typescript",{"_index":2975,"title":{},"body":{"index.html":{}}}],["typically",{"_index":2514,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["typing",{"_index":93,"title":{},"body":{"interfaces/AddMembersDialogData.html":{}}}],["u",{"_index":320,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.avatarurl",{"_index":1455,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.email",{"_index":1452,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.id",{"_index":1451,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.isonline",{"_index":1520,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.name",{"_index":1453,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["u.name.tolowercase().includes(term",{"_index":322,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["u.uid",{"_index":149,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["ui",{"_index":274,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["uid",{"_index":1712,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"injectables/UserService.html":{}}}],["ul",{"_index":462,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["um",{"_index":2760,"title":{},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["umfang",{"_index":2167,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unbekannt",{"_index":1497,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["unbekannter",{"_index":1918,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["unbeschadet",{"_index":2279,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["und",{"_index":140,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PrivacyComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["undefined",{"_index":1057,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["under",{"_index":3137,"title":{},"body":{"index.html":{}}}],["understandable",{"_index":3134,"title":{},"body":{"index.html":{}}}],["unfilled",{"_index":1998,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["ungültig",{"_index":1914,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["ungültiges",{"_index":1182,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["unique",{"_index":206,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["unique.length",{"_index":210,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{}}}],["unit",{"_index":3073,"title":{},"body":{"index.html":{}}}],["unmöglich",{"_index":2274,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unrichtiger",{"_index":2227,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["uns",{"_index":2105,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unsere",{"_index":2191,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unseres",{"_index":2292,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unset",{"_index":425,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["unsubscribe",{"_index":2359,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["unsubscribeallusers",{"_index":105,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["unsubscribefn",{"_index":1631,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["unsubscriberecipient",{"_index":2339,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["unter",{"_index":2251,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unterrichten",{"_index":2269,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unused",{"_index":2444,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["unverhältnismäßigen",{"_index":2276,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unverzügliche",{"_index":2231,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["unvollständiger",{"_index":2229,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["up",{"_index":1363,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["update",{"_index":306,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/VerifyEmailComponent.html":{}}}],["updatechannelmembers",{"_index":1749,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["updatechannelresults(channels",{"_index":1466,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["updated",{"_index":211,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"components/SelectedMembersDialogComponent.html":{},"injectables/UserService.html":{}}}],["updatedoc",{"_index":2724,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedoc(userdocref",{"_index":2744,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedoc(userref",{"_index":2749,"title":{},"body":{"injectables/UserService.html":{}}}],["updateemail",{"_index":661,"title":{},"body":{"components/AuthActionComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["updateemail(user",{"_index":684,"title":{},"body":{"components/AuthActionComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["updateemailinfirestore",{"_index":2669,"title":{},"body":{"injectables/UserService.html":{}}}],["updateemailinfirestore(uid",{"_index":2712,"title":{},"body":{"injectables/UserService.html":{}}}],["updatemessage(msg.id",{"_index":1342,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["updateplaceholdertext(width",{"_index":1148,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["updates",{"_index":646,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["updateuseravatar",{"_index":2670,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuseravatar(avatardataurl",{"_index":2714,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuseremail",{"_index":2671,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuseremail(newemail",{"_index":2717,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusername",{"_index":2672,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusername(newname",{"_index":2721,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserresults(users",{"_index":1449,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["updating",{"_index":640,"title":{},"body":{"components/AuthActionComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["upload",{"_index":3015,"title":{},"body":{"index.html":{}}}],["upon",{"_index":1673,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["url",{"_index":1044,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["url(\"/assets/img/black",{"_index":2841,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["url(\"/assets/img/mail.png",{"_index":2839,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["usage",{"_index":64,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"index.html":{}}}],["use",{"_index":968,"title":{},"body":{"components/DirectMessagesComponent.html":{},"index.html":{}}}],["used",{"_index":12,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":91,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["user's",{"_index":315,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["user.name",{"_index":343,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{}}}],["user.service",{"_index":47,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["user.service.ts",{"_index":3106,"title":{},"body":{"index.html":{}}}],["user.uid",{"_index":328,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"injectables/UserService.html":{}}}],["user/channel",{"_index":1459,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["user/channels",{"_index":1115,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["user/recipient",{"_index":1358,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["user?.name",{"_index":2654,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["user?.uid",{"_index":2747,"title":{},"body":{"injectables/UserService.html":{}}}],["useravatarurl",{"_index":2340,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["userdata",{"_index":1661,"title":{},"body":{"components/InnerChannelComponent.html":{},"injectables/UserService.html":{}}}],["userdata.avatarurl",{"_index":1237,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["userdata.isonline",{"_index":1235,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["userdata.name",{"_index":1704,"title":{},"body":{"components/InnerChannelComponent.html":{},"injectables/UserService.html":{}}}],["userdata.name.startswith('guest",{"_index":2786,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":2737,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocsnap",{"_index":2739,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocsnap.data",{"_index":2745,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocsnap.exists",{"_index":2741,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":2341,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["userid",{"_index":1696,"title":{},"body":{"components/InnerChannelComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"injectables/UserService.html":{}}}],["userid1",{"_index":1321,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["userid2",{"_index":1320,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["userid2].sort().join('_",{"_index":1322,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["userisactive",{"_index":898,"title":{},"body":{"components/DirectMessagesComponent.html":{}}}],["username",{"_index":2342,"title":{},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["userref",{"_index":2748,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":100,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"index.html":{}}}],["users.map((u",{"_index":1450,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["users.push",{"_index":2773,"title":{},"body":{"injectables/UserService.html":{}}}],["users.push(doc.data",{"_index":2777,"title":{},"body":{"injectables/UserService.html":{}}}],["userscollection",{"_index":2030,"title":{},"body":{"components/PasswortResetComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":46,"title":{"injectables/UserService.html":{}},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/AuthActionComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstatus",{"_index":943,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["uses",{"_index":1866,"title":{},"body":{"components/NewPasswortComponent.html":{},"index.html":{}}}],["usevalue",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1986,"title":{},"body":{"components/PasswortResetComponent.html":{},"index.html":{}}}],["utility",{"_index":1850,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["valid",{"_index":653,"title":{},"body":{"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validate",{"_index":1989,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["validates",{"_index":1864,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["validating",{"_index":2017,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["validationerrors",{"_index":1990,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["validator",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["validators",{"_index":1883,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["validators.minlength(6",{"_index":1888,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["validators.required",{"_index":1887,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["value",{"_index":297,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["value.trim().length",{"_index":815,"title":{},"body":{"components/ChannelDialogComponent.html":{}}}],["var",{"_index":490,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{}}}],["variable",{"_index":2817,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2352,"title":{"miscellaneous/variables.html":{}},"body":{"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"miscellaneous/variables.html":{}}}],["verantwortliche",{"_index":2195,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verantwortlicher",{"_index":2202,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verantwortung",{"_index":2189,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verarbeiten",{"_index":2190,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verarbeitet",{"_index":2122,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verarbeiteten",{"_index":2220,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verarbeitung",{"_index":2132,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verarbeitungsverfahren",{"_index":2303,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verbreitung",{"_index":2156,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verbunden",{"_index":2278,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verfahren",{"_index":2136,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verification",{"_index":620,"title":{},"body":{"components/AuthActionComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["verified",{"_index":2831,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verifies",{"_index":652,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["verifiziere",{"_index":689,"title":{},"body":{"components/AuthActionComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["verifizierung",{"_index":2834,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verifizierungsprozess",{"_index":2835,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verify",{"_index":552,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["verifyemail",{"_index":673,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["verifyemailcomponent",{"_index":551,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["verifying",{"_index":2827,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verifypasswordresetcode",{"_index":662,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["verifypasswordresetcode(this.auth",{"_index":677,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["verifysigninlink",{"_index":2797,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verifysigninlink(firebaseauth",{"_index":2813,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verknüpfung",{"_index":2160,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["vernichtung",{"_index":2163,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verordnung",{"_index":2125,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verpflichtet",{"_index":2260,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verpflichtung",{"_index":2270,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["version",{"_index":3023,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versto",{"_index":2252,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["versuche",{"_index":2068,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["vertragsabwicklung",{"_index":2330,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["vertreten",{"_index":1608,"title":{},"body":{"components/ImprintComponent.html":{}}}],["vervollständigung",{"_index":2226,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["verwendung",{"_index":2153,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["veränderung",{"_index":2150,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["vgl",{"_index":2223,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["via",{"_index":763,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"index.html":{}}}],["viele",{"_index":2064,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["view",{"_index":1265,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["viewchild",{"_index":1006,"title":{},"body":{"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["viewchild('chatheaderref",{"_index":2453,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["viewchild('devspaceref",{"_index":2456,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["viewchild('messagelist",{"_index":1039,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["viewchild(chatcomponent",{"_index":2458,"title":{},"body":{"interfaces/ThreadChannelParentDoc.html":{}}}],["viewchild(entwicklerteamcomponent",{"_index":1682,"title":{},"body":{"components/InnerChannelComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["viewing",{"_index":1065,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["visibility",{"_index":97,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["visible",{"_index":1688,"title":{},"body":{"components/InnerChannelComponent.html":{}}}],["visual",{"_index":3053,"title":{},"body":{"index.html":{}}}],["void",{"_index":106,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"injectables/AppStateService.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"injectables/UserService.html":{}}}],["von",{"_index":2104,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["vorgang",{"_index":2138,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["vorgangsreihe",{"_index":2141,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["want",{"_index":3138,"title":{},"body":{"index.html":{}}}],["warten",{"_index":694,"title":{},"body":{"components/AuthActionComponent.html":{}}}],["watches",{"_index":1308,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["we're",{"_index":1776,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["weekday",{"_index":1188,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["wei",{"_index":2333,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["weight",{"_index":380,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["weitere",{"_index":2221,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["welcome",{"_index":555,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"index.html":{}}}],["welcomescreencomponent",{"_index":554,"title":{"components/WelcomeScreenComponent.html":{}},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AppComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/InnerChannelComponent.html":{},"components/IntroComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"components/WelcomeScreenComponent.html":{},"coverage.html":{}}}],["werden",{"_index":2103,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["whenever",{"_index":1420,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["where('email",{"_index":2033,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["where('name",{"_index":2776,"title":{},"body":{"injectables/UserService.html":{}}}],["whether",{"_index":791,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["white",{"_index":409,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"components/MemberListDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["widerspruch",{"_index":2284,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["width",{"_index":355,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/AuthActionComponent.html":{},"components/ChannelDialogComponent.html":{},"components/DirectMessagesComponent.html":{},"interfaces/EmojiItem.html":{},"components/HeaderComponent.html":{},"components/InnerChannelComponent.html":{},"components/MemberListDialogComponent.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/SelectedMembersDialogComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{}}}],["wie",{"_index":142,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/PrivacyComponent.html":{}}}],["wiederum",{"_index":2187,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["willkommen",{"_index":2847,"title":{},"body":{"components/WelcomeScreenComponent.html":{}}}],["window",{"_index":1141,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["window.innerwidth",{"_index":1154,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{}}}],["window.location.href",{"_index":2825,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["wir",{"_index":2077,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{}}}],["within",{"_index":863,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"interfaces/ThreadChannelParentDoc.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["without",{"_index":226,"title":{},"body":{"interfaces/AddMembersDialogData.html":{},"components/AddMembersDialogMobileComponent.html":{},"interfaces/AddMembersMobileData.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberSectionDialogComponent.html":{},"interfaces/MessageContent-3.html":{},"components/ProfilDialogComponent.html":{},"interfaces/ProfileData.html":{},"components/SelectedMembersDialogComponent.html":{}}}],["worden",{"_index":2264,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["work",{"_index":986,"title":{},"body":{"components/DirectMessagesComponent.html":{},"components/InnerChannelComponent.html":{}}}],["wrapper",{"_index":854,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{}}}],["write",{"_index":2997,"title":{},"body":{"index.html":{}}}],["wurde",{"_index":1903,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["x",{"_index":869,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["y",{"_index":466,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"components/MemberListDialogComponent.html":{},"interfaces/MessageContent-3.html":{}}}],["yarn",{"_index":3031,"title":{},"body":{"index.html":{}}}],["year",{"_index":1209,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["yes",{"_index":269,"title":{},"body":{"components/AddMembersDialogMobileComponent.html":{},"components/MemberListDialogComponent.html":{}}}],["yesterday",{"_index":1071,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["yesterday.setdate(yesterday.getdate",{"_index":1215,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["yesterdaydate",{"_index":1073,"title":{},"body":{"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{}}}],["z",{"_index":843,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{},"components/ProfilDialogComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["z0",{"_index":2012,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["z]{2",{"_index":2015,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["za",{"_index":2011,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["zeit",{"_index":2067,"title":{},"body":{"components/PasswortResetComponent.html":{}}}],["ziel",{"_index":1794,"title":{},"body":{"components/MemberListDialogComponent.html":{},"interfaces/MemberListDialogData.html":{}}}],["ziffer",{"_index":2124,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["zone.js",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":2063,"title":{},"body":{"components/PasswortResetComponent.html":{},"components/PrivacyComponent.html":{}}}],["zudem",{"_index":2179,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["zum",{"_index":846,"title":{},"body":{"components/ChannelDialogComponent.html":{},"interfaces/EmojiItem.html":{},"interfaces/MessageContent-3.html":{},"components/PrivacyComponent.html":{}}}],["zumeist",{"_index":2100,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["zur",{"_index":836,"title":{},"body":{"components/ChannelDialogComponent.html":{},"components/PrivacyComponent.html":{}}}],["zurückgesetzt",{"_index":1904,"title":{},"body":{"components/NewPasswortComponent.html":{}}}],["zurücksetzen",{"_index":1921,"title":{},"body":{"components/NewPasswortComponent.html":{},"components/PasswortResetComponent.html":{}}}],["zusammenhang",{"_index":2142,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["zweck",{"_index":2168,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["zwecke",{"_index":2110,"title":{},"body":{"components/PrivacyComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMembersDialogData.html":{"url":"interfaces/AddMembersDialogData.html","title":"interface - AddMembersDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMembersDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/add-members-dialog/add-members-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data interface if used in a Material Dialog context.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channelId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filteredMembers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            members\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filteredMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filteredMembers:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Optional,\n  Inject\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\n\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { SelectedMembersDialogComponent } from '../selected-members-dialog/selected-members-dialog.component';\nimport { MessageService } from '../message.service';\n\n/**\n * Data interface if used in a Material Dialog context.\n */\nexport interface AddMembersDialogData {\n  channelId?: string;\n  channelName?: string;\n  members?: any[];\n  filteredMembers?: any[];\n}\n\n/**\n * A dialog/overlay for adding new members to a channel.\n * Supports Material Dialog, BottomSheet, or cdkOverlay usage.\n */\n@Component({\n  selector: 'app-add-members-dialog',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OverlayModule],\n  templateUrl: './add-members-dialog.component.html',\n  styleUrls: ['./add-members-dialog.component.scss']\n})\nexport class AddMembersDialogComponent implements OnInit {\n\n  /** cdkOverlay input: the channel ID. */\n  @Input() channelId!: string;\n  /** cdkOverlay input: the channel name. */\n  @Input() channelName = '';\n  /** cdkOverlay input: existing channel members. */\n  @Input() members: any[] = [];\n\n  /** Emitted when closing in cdkOverlay mode. */\n  @Output() close = new EventEmitter();\n  /** Emitted if new members were added in cdkOverlay mode. */\n  @Output() membersAdded = new EventEmitter();\n\n  /** Internal search input. */\n  specificMemberName = '';\n  /** Filtered user list while typing. */\n  filteredMembers: any[] = [];\n  /** New members selected for adding. */\n  selectedMembers: any[] = [];\n  /** Controls dropdown visibility. */\n  isMembersListVisible = false;\n  /** All users loaded from the service. */\n  allUsers: any[] = [];\n\n  private unsubscribeAllUsers?: () => void;\n\n  /**\n   * Constructor for multi-context usage (Dialog, BottomSheet, cdkOverlay).\n   */\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelService,\n    private dialog: MatDialog,\n    private messageService: MessageService,\n    @Optional() public dialogRef?: MatDialogRef,\n    @Optional() public bottomSheetRef?: MatBottomSheetRef,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data?: AddMembersDialogData\n  ) {}\n\n  /**\n   * Merges passed-in data and loads users if no filter is provided.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      if (this.data.channelId) this.channelId = this.data.channelId;\n      if (this.data.channelName) this.channelName = this.data.channelName;\n      if (this.data.members) this.members = [...this.data.members];\n      if (this.data.filteredMembers) {\n        this.filteredMembers = [...this.data.filteredMembers];\n      } else {\n        this.filteredMembers = [];\n      }\n    }\n    if (this.filteredMembers.length === 0) this.loadAllUsers();\n\n    this.unsubscribeAllUsers = this.messageService.onAllUsersChanged(\n      (freshUsers) => {\n        // 'freshUsers' enthält jetzt ALLE User.\n        // => Setze in 'this.allUsers' ab und filtere wie bisher:\n        this.allUsers = freshUsers;\n        this.excludeExistingAndSelected();\n        if (!this.data?.filteredMembers || this.filteredMembers.length === 0) {\n          this.filteredMembers = this.allUsers.filter((u) =>\n            !this.members.some((ex) => ex.uid === u.uid)\n          );\n        }\n      }\n    );\n  }\n\n  /**\n   * Loads all users, excluding those already in the channel or selected.\n   */\n  loadAllUsers(): void {\n    this.userService.getAllUsers()\n      .then(users => {\n        this.allUsers = users;\n        this.excludeExistingAndSelected();\n        if (!this.data?.filteredMembers || this.filteredMembers.length === 0) {\n          this.filteredMembers = this.allUsers.filter(u =>\n            !this.members.some(ex => ex.uid === u.uid)\n          );\n        }\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * Excludes users already in 'members' or 'selectedMembers'.\n   */\n  excludeExistingAndSelected(): void {\n    this.filteredMembers = this.allUsers.filter(m =>\n      !this.members.some(ex => ex.name === m.name) &&\n      !this.selectedMembers.some(sel => sel.name === m.name)\n    );\n  }\n\n  /**\n   * Shows the dropdown list, filtering out existing or selected.\n   */\n  showAllMembers(): void {\n    this.isMembersListVisible = true;\n    this.excludeExistingAndSelected();\n  }\n\n  /**\n   * Hides the list shortly after focus is lost.\n   */\n  hideMembersList(): void {\n    setTimeout(() => {\n      this.isMembersListVisible = false;\n    }, 200);\n  }\n\n  /**\n   * Filters members by search input, excluding existing or selected.\n   */\n  onSearchMembers(): void {\n    const term = this.specificMemberName.toLowerCase();\n    this.filteredMembers = this.allUsers.filter(m =>\n      m.name.toLowerCase().includes(term) &&\n      !this.members.some(ex => ex.name === m.name) &&\n      !this.selectedMembers.some(se => se.name === m.name)\n    );\n  }\n\n  /**\n   * Adds a new member to 'selectedMembers' if not already present.\n   */\n  selectMember(member: any): void {\n    if (!this.selectedMembers.some(m => m.name === member.name)) {\n      this.selectedMembers.push(member);\n    }\n    this.specificMemberName = '';\n    this.isMembersListVisible = false;\n    this.excludeExistingAndSelected();\n  }\n\n  /**\n   * Removes a single member from 'selectedMembers'.\n   */\n  removeMember(member: any): void {\n    this.selectedMembers = this.selectedMembers.filter(m => m !== member);\n    this.excludeExistingAndSelected();\n  }\n\n  /**\n   * Saves newly selected members to Firestore or closes if none are selected.\n   */\n  onCreate(): void {\n    const unique = this.selectedMembers.filter(\n      sel => !this.members.some(m => m.name === sel.name)\n    );\n    if (unique.length > 0) {\n      const updated = [...this.members, ...unique];\n      this.channelService.setMembers(this.channelId, updated)\n        .then(() => this.handleMembersSaved(updated))\n        .catch(() => {});\n    } else {\n      this.closeDialogOrSheet();\n    }\n  }\n\n  /**\n   * Opens a nested dialog to manage the full list of selected members.\n   */\n  openMembersDialog(): void {\n    const ref = this.dialog.open(SelectedMembersDialogComponent, {\n      data: { members: this.selectedMembers }\n    });\n    ref.afterClosed().subscribe(result => {\n      if (result) this.selectedMembers = result;\n    });\n  }\n\n  /**\n   * Cancels the action without saving.\n   */\n  onCancel(): void {\n    if (this.dialogRef) this.dialogRef.close();\n    else this.close.emit();\n  }\n\n  /** Handles successful saving of members. */\n  private handleMembersSaved(updated: any[]): void {\n    if (this.dialogRef) {\n      this.dialogRef.close(updated);\n    } else if (this.bottomSheetRef) {\n      this.bottomSheetRef.dismiss(updated);\n    } else {\n      this.membersAdded.emit(updated);\n      this.close.emit();\n    }\n  }\n\n  /** Closes the dialog or sheet if no new members. */\n  private closeDialogOrSheet(): void {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    } else if (this.bottomSheetRef) {\n      this.bottomSheetRef.dismiss();\n    } else {\n      this.close.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeAllUsers) {\n      this.unsubscribeAllUsers();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMembersDialogMobileComponent.html":{"url":"components/AddMembersDialogMobileComponent.html","title":"component - AddMembersDialogMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMembersDialogMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts\n\n\n\n    \n        Description\n    \n    \n        A bottom sheet dialog for adding members in a mobile-friendly layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-members-dialog-mobile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            OverlayModule\n                \n            \n\n            \n                styleUrls\n                ./add-members-dialog-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-members-dialog-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                bottomSheetRef\n                            \n                            \n                                channelId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                data\n                            \n                            \n                                filteredMembers\n                            \n                            \n                                isMembersListVisible\n                            \n                            \n                                members\n                            \n                            \n                                selectedMembers\n                            \n                            \n                                specificMemberName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideMembersList\n                            \n                            \n                                loadAllUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onCreate\n                            \n                            \n                                onSearchMembers\n                            \n                            \n                                removeMember\n                            \n                            \n                                selectMember\n                            \n                            \n                                showAllMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelService, dialog: MatDialog, bottomSheetRef?: MatBottomSheetRef, data?: AddMembersMobileData)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor for the bottom sheet usage, optionally receiving data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                        MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMembersMobileData\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideMembersList\n                        \n                    \n                \n            \n            \n                \nhideMembersList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Hides the members list with a brief delay to allow UI interactions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllUsers\n                        \n                    \n                \n            \n            \n                \nloadAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Loads all users, excluding those already in 'members' if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Reads optional input data and loads all users if no filtered list was provided.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Cancels the dialog without adding members.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Merges new members into the channel, saves, then closes the bottom sheet.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchMembers\n                        \n                    \n                \n            \n            \n                \nonSearchMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Filters the user list by the current search term, excluding existing or selected members.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Removes a previously selected member.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMember\n                        \n                    \n                \n            \n            \n                \nselectMember(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Selects a member, removing them from 'filteredMembers' and resetting input state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllMembers\n                        \n                    \n                \n            \n            \n                \nshowAllMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Shows the members list overlay, excluding those already in 'members' or 'selectedMembers'.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:43\n                        \n                    \n\n            \n                \n                    A local copy of all known users.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        bottomSheetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatBottomSheetRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:32\n                        \n                    \n\n            \n                \n                    The channel ID required to update members.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMembersMobileData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_BOTTOM_SHEET_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:36\n                        \n                    \n\n            \n                \n                    An optional pre-filtered set of members.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMembersListVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls the visibility of the members list overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:34\n                        \n                    \n\n            \n                \n                    The existing members of the channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:41\n                        \n                    \n\n            \n                \n                    Newly selected members for adding.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specificMemberName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    User's search input.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * Optional data interface if used with MatBottomSheet.\n */\nexport interface AddMembersMobileData {\n  channelId: string;\n  members: any[];\n  filteredMembers: any[];\n}\n\n/**\n * A bottom sheet dialog for adding members in a mobile-friendly layout.\n */\n@Component({\n  selector: 'app-add-members-dialog-mobile',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OverlayModule],\n  templateUrl: './add-members-dialog-mobile.component.html',\n  styleUrls: ['./add-members-dialog-mobile.component.scss']\n})\nexport class AddMembersDialogMobileComponent implements OnInit {\n\n  /** The channel ID required to update members. */\n  channelId = '';\n  /** The existing members of the channel. */\n  members: any[] = [];\n  /** An optional pre-filtered set of members. */\n  filteredMembers: any[] = [];\n\n  /** User's search input. */\n  specificMemberName = '';\n  /** Newly selected members for adding. */\n  selectedMembers: any[] = [];\n  /** A local copy of all known users. */\n  allUsers: any[] = [];\n  /** Controls the visibility of the members list overlay. */\n  isMembersListVisible = false;\n\n  /**\n   * Constructor for the bottom sheet usage, optionally receiving data.\n   */\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelService,\n    private dialog: MatDialog,\n    @Optional() public bottomSheetRef?: MatBottomSheetRef,\n    @Optional() @Inject(MAT_BOTTOM_SHEET_DATA) public data?: AddMembersMobileData\n  ) {}\n\n  /**\n   * Reads optional input data and loads all users if no filtered list was provided.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      this.channelId = this.data.channelId;\n      this.members = [...(this.data.members || [])];\n      this.filteredMembers = [...(this.data.filteredMembers || [])];\n    }\n    if (this.filteredMembers.length === 0) {\n      this.loadAllUsers();\n    }\n  }\n\n  /**\n   * Loads all users, excluding those already in 'members' if needed.\n   */\n  loadAllUsers(): void {\n    this.userService.getAllUsers()\n      .then(users => {\n        this.allUsers = users;\n        if (this.filteredMembers.length === 0) {\n          this.filteredMembers = this.allUsers.filter(\n            u => !this.members.some(m => m.uid === u.uid)\n          );\n        }\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * Filters the user list by the current search term, excluding existing or selected members.\n   */\n  onSearchMembers(): void {\n    const term = this.specificMemberName.toLowerCase();\n    this.filteredMembers = this.allUsers.filter(u =>\n      u.name.toLowerCase().includes(term) &&\n      !this.members.some(m => m.uid === u.uid) &&\n      !this.selectedMembers.some(sel => sel.uid === u.uid)\n    );\n  }\n\n  /**\n   * Shows the members list overlay, excluding those already in 'members' or 'selectedMembers'.\n   */\n  showAllMembers(): void {\n    this.isMembersListVisible = true;\n    if (!this.allUsers || this.allUsers.length === 0) return;\n    this.filteredMembers = this.allUsers.filter(u =>\n      !this.members.some(m => m.uid === u.uid) &&\n      !this.selectedMembers.some(s => s.uid === u.uid)\n    );\n  }\n\n  /**\n   * Hides the members list with a brief delay to allow UI interactions.\n   */\n  hideMembersList(): void {\n    setTimeout(() => {\n      this.isMembersListVisible = false;\n    }, 200);\n  }\n\n  /**\n   * Selects a member, removing them from 'filteredMembers' and resetting input state.\n   */\n  selectMember(user: any): void {\n    if (!this.selectedMembers.some(m => m.uid === user.uid)) {\n      this.selectedMembers.push(user);\n    }\n    this.specificMemberName = '';\n    this.isMembersListVisible = false;\n    this.filteredMembers = this.filteredMembers.filter(u => u.uid !== user.uid);\n  }\n\n  /**\n   * Removes a previously selected member.\n   */\n  removeMember(user: any): void {\n    this.selectedMembers = this.selectedMembers.filter(m => m.uid !== user.uid);\n  }\n\n  /**\n   * Merges new members into the channel, saves, then closes the bottom sheet.\n   */\n  onCreate(): void {\n    const unique = this.selectedMembers.filter(\n      sel => !this.members.some(m => m.uid === sel.uid)\n    );\n    if (unique.length  {\n        this.bottomSheetRef?.dismiss(updated);\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * Cancels the dialog without adding members.\n   */\n  onCancel(): void {\n    this.bottomSheetRef?.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    Leute hinzufügen\n    \n  \n\n  \n    \n      \n        \n\n         0 && isMembersListVisible\n          \"\n          [cdkConnectedOverlayHasBackdrop]=\"false\"\n          [cdkConnectedOverlayPositions]=\"[\n            {\n              originX: 'start',\n              originY: 'bottom',\n              overlayX: 'start',\n              overlayY: 'top'\n            }\n          ]\"\n        >\n          \n             0 && isMembersListVisible\">\n              \n                \n                  \n                  \n                  \n                \n                {{ user.name }}\n              \n            \n          \n        \n\n         0\" class=\"selected-member\">\n          \n          {{ selectedMembers[0].name }}\n\n          \n            ×\n          \n\n           1\" class=\"more-members\">\n            +{{ selectedMembers.length - 1 }}\n          \n        \n      \n    \n  \n\n  \n    \n      Hinzufügen\n    \n  \n\n\n    \n\n    \n                \n                    ./add-members-dialog-mobile.component.scss\n                \n                @import \"./../../styles.scss\";\n\n::ng-deep .mat-bottom-sheet-container {\n  min-width: 100vw !important;\n}\n\n.close-dialog {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  h1 {\n    margin-right: 20px;\n    font-size: 24px;\n    font-weight: 700;\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  img {\n    cursor: pointer;\n    transition: filter 0.3s ease, background-color 0.3s ease;\n    border-radius: 50%;\n    margin-left: auto;\n\n    &:hover {\n      background-color: $lightblue;\n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n.container {\n  padding: 40px;\n  border-radius: 30px 0px 30px 30px;\n  border: 1px 0px 0px 0px;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n}\n\n.primary-button {\n  background: $button-blue;\n  border: none;\n  border-radius: 100px;\n  color: white;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 12px 25px;\n  width: 147px;\n  height: 49px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background: #5b5ffc;\n  }\n\n  &:disabled {\n    background-color: gray;\n    cursor: not-allowed;\n  }\n}\n\n::ng-deep .mat-mdc-dialog-container {\n  border-radius: 30px 0px 30px 30px !important;\n  width: unset;\n}\n\n::ng-deep .mdc-dialog__surface {\n  border-radius: 30px 0px 30px 30px !important;\n  overflow: hidden;\n}\n\n.input-button-box {\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.member-selection {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.specific-members {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n\n  input[type=\"text\"] {\n    width: 100%;\n    height: 60px;\n    border: 1px solid #ccc;\n    border-radius: 30px;\n    padding-left: 20px;\n    padding-right: 20px;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n\n    &:hover {\n      border-color: #686868;\n    }\n\n    &:focus {\n      outline: none;\n      border-color: $button-blue;\n    }\n\n    &:not(:focus) {\n      &:has(+ input:focus) {\n        border-color: blue;\n      }\n    }\n  }\n}\n\n.selected-member {\n  display: flex;\n  align-items: center;\n  background-color: $lightblue;\n  padding: 5px 10px;\n  border-radius: 20px;\n  position: absolute;\n  gap: 15px;\n  left: 20px;\n  cursor: pointer;\n\n  .avatar {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n  }\n\n  .remove-btn {\n    background-color: transparent;\n    border: none;\n    color: gray;\n    cursor: pointer;\n    font-size: 20px;\n    margin-left: 5px;\n\n    &:hover {\n      color: $hoverColor;\n      scale: 1.1;\n    }\n  }\n}\n\n.overlay-box {\n  width: 180px;\n  border: 1px solid #ccc;\n  border-radius: 0px 30px 30px 30px;\n  background: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  padding: 10px;\n  margin-top: -30px;\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    max-height: 200px;\n    overflow-y: auto;\n  }\n\n  ul li {\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: $lightblue;\n    }\n\n    .avatar-container {\n      position: relative;\n\n      .avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n      }\n\n      .status-icon {\n        position: absolute;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        border: 2px solid white;\n        bottom: 0;\n        right: 0;\n      }\n    }\n\n    span {\n      font-size: 16px;\n      font-weight: 400;\n    }\n  }\n}\n\n.handle-bar {\n  width: 63px;\n  height: 6px;\n  background: #d9d9d9;\n  border-radius: 3px;\n  margin: 0 auto 10px auto;\n}\n\n.button-box{\n  display: flex;\n  justify-content: flex-end;\n}\n\n@media (min-width: 1278px) {\n  .container {\n    display: none;\n  }\n}\n\n@media (max-width: 1278px) {\n  .container {\n    padding: 30px 16px;\n    gap: 20px;\n  }\n\n  .primary-button:disabled {\n    margin-top: 20px;\n  }\n}\n\n@media (max-width: 768px) {\n  .member-selection {\n    width: 100%;\n  }\n\n  .container {\n    padding: 30px 16px;\n  }\n}\n\n@media (max-width: 390px) {\n  .close-dialog h1 {\n    font-size: 18px;\n  }\n\n  .close-dialog img {\n    width: 30px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Leute hinzufügen                                   0 && isMembersListVisible          \"          [cdkConnectedOverlayHasBackdrop]=\"false\"          [cdkConnectedOverlayPositions]=\"[            {              originX: \\'start\\',              originY: \\'bottom\\',              overlayX: \\'start\\',              overlayY: \\'top\\'            }          ]\"        >                       0 && isMembersListVisible\">                                                                                                                    {{ user.name }}                                                     0\" class=\"selected-member\">                    {{ selectedMembers[0].name }}                      ×                     1\" class=\"more-members\">            +{{ selectedMembers.length - 1 }}                                          Hinzufügen      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMembersDialogMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMembersMobileData.html":{"url":"interfaces/AddMembersMobileData.html","title":"interface - AddMembersMobileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMembersMobileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Optional data interface if used with MatBottomSheet.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            filteredMembers\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filteredMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filteredMembers:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * Optional data interface if used with MatBottomSheet.\n */\nexport interface AddMembersMobileData {\n  channelId: string;\n  members: any[];\n  filteredMembers: any[];\n}\n\n/**\n * A bottom sheet dialog for adding members in a mobile-friendly layout.\n */\n@Component({\n  selector: 'app-add-members-dialog-mobile',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OverlayModule],\n  templateUrl: './add-members-dialog-mobile.component.html',\n  styleUrls: ['./add-members-dialog-mobile.component.scss']\n})\nexport class AddMembersDialogMobileComponent implements OnInit {\n\n  /** The channel ID required to update members. */\n  channelId = '';\n  /** The existing members of the channel. */\n  members: any[] = [];\n  /** An optional pre-filtered set of members. */\n  filteredMembers: any[] = [];\n\n  /** User's search input. */\n  specificMemberName = '';\n  /** Newly selected members for adding. */\n  selectedMembers: any[] = [];\n  /** A local copy of all known users. */\n  allUsers: any[] = [];\n  /** Controls the visibility of the members list overlay. */\n  isMembersListVisible = false;\n\n  /**\n   * Constructor for the bottom sheet usage, optionally receiving data.\n   */\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelService,\n    private dialog: MatDialog,\n    @Optional() public bottomSheetRef?: MatBottomSheetRef,\n    @Optional() @Inject(MAT_BOTTOM_SHEET_DATA) public data?: AddMembersMobileData\n  ) {}\n\n  /**\n   * Reads optional input data and loads all users if no filtered list was provided.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      this.channelId = this.data.channelId;\n      this.members = [...(this.data.members || [])];\n      this.filteredMembers = [...(this.data.filteredMembers || [])];\n    }\n    if (this.filteredMembers.length === 0) {\n      this.loadAllUsers();\n    }\n  }\n\n  /**\n   * Loads all users, excluding those already in 'members' if needed.\n   */\n  loadAllUsers(): void {\n    this.userService.getAllUsers()\n      .then(users => {\n        this.allUsers = users;\n        if (this.filteredMembers.length === 0) {\n          this.filteredMembers = this.allUsers.filter(\n            u => !this.members.some(m => m.uid === u.uid)\n          );\n        }\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * Filters the user list by the current search term, excluding existing or selected members.\n   */\n  onSearchMembers(): void {\n    const term = this.specificMemberName.toLowerCase();\n    this.filteredMembers = this.allUsers.filter(u =>\n      u.name.toLowerCase().includes(term) &&\n      !this.members.some(m => m.uid === u.uid) &&\n      !this.selectedMembers.some(sel => sel.uid === u.uid)\n    );\n  }\n\n  /**\n   * Shows the members list overlay, excluding those already in 'members' or 'selectedMembers'.\n   */\n  showAllMembers(): void {\n    this.isMembersListVisible = true;\n    if (!this.allUsers || this.allUsers.length === 0) return;\n    this.filteredMembers = this.allUsers.filter(u =>\n      !this.members.some(m => m.uid === u.uid) &&\n      !this.selectedMembers.some(s => s.uid === u.uid)\n    );\n  }\n\n  /**\n   * Hides the members list with a brief delay to allow UI interactions.\n   */\n  hideMembersList(): void {\n    setTimeout(() => {\n      this.isMembersListVisible = false;\n    }, 200);\n  }\n\n  /**\n   * Selects a member, removing them from 'filteredMembers' and resetting input state.\n   */\n  selectMember(user: any): void {\n    if (!this.selectedMembers.some(m => m.uid === user.uid)) {\n      this.selectedMembers.push(user);\n    }\n    this.specificMemberName = '';\n    this.isMembersListVisible = false;\n    this.filteredMembers = this.filteredMembers.filter(u => u.uid !== user.uid);\n  }\n\n  /**\n   * Removes a previously selected member.\n   */\n  removeMember(user: any): void {\n    this.selectedMembers = this.selectedMembers.filter(m => m.uid !== user.uid);\n  }\n\n  /**\n   * Merges new members into the channel, saves, then closes the bottom sheet.\n   */\n  onCreate(): void {\n    const unique = this.selectedMembers.filter(\n      sel => !this.members.some(m => m.uid === sel.uid)\n    );\n    if (unique.length  {\n        this.bottomSheetRef?.dismiss(updated);\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * Cancels the dialog without adding members.\n   */\n  onCancel(): void {\n    this.bottomSheetRef?.dismiss();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                IntroComponent\n                                AvatarComponent\n                                PrivacyComponent\n                                ImprintComponent\n                                LoginComponent\n                                FooterComponent\n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                                SignupComponent\n                            RouterLink\n                                ChatComponent\n                                PasswortResetComponent\n                                NewPasswortComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                            \n                                items$\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:46\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DABubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { IntroComponent } from './intro/intro.component';\nimport { LoginComponent } from './login/login.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { ImprintComponent } from './imprint/imprint.component';\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { RouterLink } from '@angular/router';\nimport { Firestore, collection, collectionData } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PasswortResetComponent } from './passwort-reset/passwort-reset.component';\nimport { NewPasswortComponent } from './new-passwort/new-passwort.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    IntroComponent,\n    AvatarComponent,\n    PrivacyComponent,\n    ImprintComponent,\n    LoginComponent,\n    FooterComponent,\n    CommonModule,\n    FormsModule,\n    HeaderComponent,\n    SignupComponent,\n    RouterLink,\n    ChatComponent,\n    PasswortResetComponent,\n    NewPasswortComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'DABubble';\n  items$: Observable;\n  firestore: Firestore = inject(Firestore);\n\n  constructor() {\n    const aCollection = collection(this.firestore, 'items');\n    this.items$ = collectionData(aCollection);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppStateService.html":{"url":"injectables/AppStateService.html","title":"injectable - AppStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                showWelcomeContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getShowWelcomeContainer\n                            \n                            \n                                setShowWelcomeContainer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getShowWelcomeContainer\n                        \n                    \n                \n            \n            \n                \ngetShowWelcomeContainer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app-state.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setShowWelcomeContainer\n                        \n                    \n                \n            \n            \n                \nsetShowWelcomeContainer(show: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app-state.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                show\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showWelcomeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app-state.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppStateService {\n  private showWelcomeContainer: boolean = true;  \n\n  getShowWelcomeContainer(): boolean {\n    return this.showWelcomeContainer;\n  }\n\n  setShowWelcomeContainer(show: boolean): void {\n    this.showWelcomeContainer = show;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthActionComponent.html":{"url":"components/AuthActionComponent.html","title":"component - AuthActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth-action/auth-action.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles Firebase authentication actions such as password reset and email verification.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-action\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                                FooterComponent\n                \n            \n\n            \n                styleUrls\n                ./auth-action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                mode\n                            \n                            \n                                oobCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleEmailVerification\n                            \n                            \n                                    Async\n                                handlePasswordReset\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, auth: Auth, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-action/auth-action.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFor reading query parameters like mode and oobCode.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Firebase Auth instance.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFor navigation to routes after actions are handled.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCustom service for updating user info in Firestore.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleEmailVerification\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEmailVerification(oobCode: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth-action/auth-action.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Applies the code to verify user email, updates new email if needed, then navigates away.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handlePasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePasswordReset(oobCode: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth-action/auth-action.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Verifies the password reset code, then navigates to 'new-passwort' if valid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth-action/auth-action.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Reads 'mode' and 'oobCode' from query params and calls the appropriate handler.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth-action/auth-action.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth-action/auth-action.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth-action/auth-action.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  Auth,\n  updateEmail,\n  verifyPasswordResetCode,\n  applyActionCode\n} from '@angular/fire/auth';\nimport { UserService } from '../user.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\n\n/**\n * Handles Firebase authentication actions such as password reset and email verification.\n */\n@Component({\n  selector: 'app-auth-action',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HeaderComponent, FooterComponent],\n  templateUrl: './auth-action.component.html',\n  styleUrls: ['./auth-action.component.scss']\n})\nexport class AuthActionComponent implements OnInit {\n  mode: string | null = null;\n  oobCode: string | null = null;\n  loading = true;\n\n  /**\n   * @param route - For reading query parameters like mode and oobCode.\n   * @param auth - The Firebase Auth instance.\n   * @param router - For navigation to routes after actions are handled.\n   * @param userService - Custom service for updating user info in Firestore.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private auth: Auth,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Reads 'mode' and 'oobCode' from query params and calls the appropriate handler.\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.mode = params['mode'];\n      this.oobCode = params['oobCode'];\n      if (this.mode === 'resetPassword') {\n        this.handlePasswordReset(this.oobCode);\n      } else if (this.mode === 'verifyEmail') {\n        this.handleEmailVerification(this.oobCode);\n      }\n    });\n  }\n\n  /**\n   * Verifies the password reset code, then navigates to 'new-passwort' if valid.\n   */\n  async handlePasswordReset(oobCode: string | null): Promise {\n    if (!oobCode) return;\n    try {\n      await verifyPasswordResetCode(this.auth, oobCode);\n      this.router.navigate(['/new-passwort'], { queryParams: { oobCode } });\n    } catch {}\n  }\n\n  /**\n   * Applies the code to verify user email, updates new email if needed, then navigates away.\n   */\n  async handleEmailVerification(oobCode: string | null): Promise {\n    if (!oobCode) return;\n    try {\n      await applyActionCode(this.auth, oobCode);\n      const newEmail = localStorage.getItem('newEmail');\n      const user = this.auth.currentUser;\n      if (user && newEmail) {\n        await updateEmail(user, newEmail);\n        await this.userService.updateEmailInFirestore(user.uid, newEmail);\n        localStorage.removeItem('newEmail');\n      }\n      this.loading = false;\n      this.router.navigate(['/avatar']);\n    } catch {}\n  }\n}\n    \n\n    \n        \n\n  Verifiziere deine E-Mail... Bitte warten.\n\n\n\n    \n\n    \n                \n                    ./auth-action.component.scss\n                \n                \n@import \"./../../styles.scss\";\n\n.container {\n  @include dFlex(center, center, null);\n  width: 100%;\n  background-color: $lightblue;\n  padding: 160px 0;\n  flex-direction: column;\n  min-height: 100vh;\n\n  p {\n    font-size: 50px;\n    color: $hoverColor;\n    font-weight: 700;\n  }\n}\n\n@media (max-width: 920px) {\n  .container {\n    padding: 10rem 2rem;\n    box-sizing: border-box;\n\n    p {\n      font-size: 30px;\n    }\n  }\n}\n\n@media (max-width: 780px) {\n  .container {\n    padding: 10rem 2rem;\n    box-sizing: border-box;\n\n    p {\n      font-size: 20px;\n    }\n  }\n}\n\n@media (max-width: 520px) {\n  .container {\n    padding: 10rem 2rem;\n    box-sizing: border-box;\n\n    p {\n      font-size: 18px;\n    }\n  }\n}\n\n@media (max-width: 390px) {\n  .container {\n    padding: 10rem 2rem;\n    box-sizing: border-box;\n\n    p {\n      font-size: 14px;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Verifiziere deine E-Mail... Bitte warten.'\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BroadcastMessageData.html":{"url":"interfaces/BroadcastMessageData.html","title":"interface - BroadcastMessageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BroadcastMessageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            broadcastChannels\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            messageFormat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderAvatar\n                                        \n                                \n                                \n                                        \n                                            senderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcastChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        broadcastChannels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  id?: string;\n  content: MessageContent;\n  timestamp: any;\n  senderId: string;\n  time: string;\n  date?: string | { seconds: number; nanoseconds: number };\n  recipientId?: string;\n  channelId?: string;\n  conversationId?: string;\n  formattedDate?: string;\n  replyCount?: number;\n  lastResponseTime?: any;\n  channelName?: string;\n  threadChannelId?: string;\n  parentId?: string;\n  isHighlighted?: boolean;\n  isEditing?: boolean;\n  isEmojiPickerVisible?: boolean;\n  showAllEmojisList?: boolean;\n  expanded?: boolean;\n  type?: string;\n  threadId?: string;\n  lastReplyTime?: any;\n  recipientName?: string;\n  showDateSeparator?: boolean; \n}\n\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n  emojis?: Array;\n}\n\n/**\n * FirestoreMessageData defines the structure of a message document in Firestore.\n * Add more properties as needed to reflect your Firestore schema.\n */\nexport interface FirestoreMessageData {\n  content?: {\n    emojis?: Array;\n  };\n  // additional fields go here, e.g. senderId, timestamp, etc.\n}\n\n\n// message.models.ts\nexport interface BroadcastMessageData {\n  broadcastChannels: string[]; \n  senderId: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderName?: string;\n  senderAvatar?: string;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n// message.models.ts\n\nexport interface ChannelMessageData {\n  channelId?: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderId: string;\n  senderName?: string;\n \n\n senderAvatar?: string ;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChannelDialogComponent.html":{"url":"components/ChannelDialogComponent.html","title":"component - ChannelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChannelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/channel-dialog/channel-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog component for creating a new channel. Users can specify a channel\nname and optionally a description. If valid, the channel is added via\nChannelService, and members can be chosen from another dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-channel-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatFormFieldModule\n                            MatInputModule\n                            MatButtonModule\n                            FormsModule\n                            MatDialogModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./channel-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./channel-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelName\n                            \n                            \n                                channelNameExists\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                isChannelNameValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChannelNameChange\n                            \n                            \n                                onCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, dialog: MatDialog, channelService: ChannelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this dialog instance\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data passed in from the caller\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Material dialog service\n\n                                                        \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for channel operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/channel-dialog/channel-dialog.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Closes the current dialog without creating/updating a channel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/channel-dialog/channel-dialog.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component initialization.\nNo additional logic here.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChannelNameChange\n                        \n                    \n                \n            \n            \n                \nonChannelNameChange(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/channel-dialog/channel-dialog.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Checks whether the new channel name has >=3 trimmed characters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user's input for channel name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/channel-dialog/channel-dialog.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Creates a new channel if valid and not already taken.\nOpens a member-selection dialog (MembersDialogComponent) if\nthe name is valid and unique, then adds the channel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    The new channel's name input by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelNameExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:61\n                        \n                    \n\n            \n                \n                    Indicates whether a channel with the same name already exists.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:81\n                        \n                    \n\n            \n                \n                    Data passed in from the caller\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    Optional description for the new channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:80\n                        \n                    \n\n            \n                \n                    Reference to this dialog instance\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChannelNameValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/channel-dialog/channel-dialog.component.ts:66\n                        \n                    \n\n            \n                \n                    True if the channel name is considered valid (>=3 chars).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog\n} from '@angular/material/dialog';\nimport {\n  MatFormFieldModule\n} from '@angular/material/form-field';\nimport {\n  MatInputModule\n} from '@angular/material/input';\nimport {\n  MatButtonModule\n} from '@angular/material/button';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  MatDialogModule\n} from '@angular/material/dialog';\nimport {\n  CommonModule\n} from '@angular/common';\n\nimport { MembersDialogComponent } from '../members-dialog/members-dialog.component';\nimport { ChannelService } from '../channel.service';\n\n/**\n * Dialog component for creating a new channel. Users can specify a channel\n * name and optionally a description. If valid, the channel is added via\n * ChannelService, and members can be chosen from another dialog.\n */\n@Component({\n  selector: 'app-channel-dialog',\n  templateUrl: './channel-dialog.component.html',\n  styleUrls: ['./channel-dialog.component.scss'],\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    MatDialogModule,\n    CommonModule\n  ]\n})\nexport class ChannelDialogComponent implements OnInit {\n  /**\n   * The new channel's name input by the user.\n   */\n  channelName = '';\n\n  /**\n   * Indicates whether a channel with the same name already exists.\n   */\n  channelNameExists = false;\n\n  /**\n   * True if the channel name is considered valid (>=3 chars).\n   */\n  isChannelNameValid = false;\n\n  /**\n   * Optional description for the new channel.\n   */\n  description = '';\n\n  /**\n   * @param dialogRef Reference to this dialog instance\n   * @param data      Data passed in from the caller\n   * @param dialog    The Angular Material dialog service\n   * @param channelService Service for channel operations\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialog: MatDialog,\n    private channelService: ChannelService\n  ) {}\n\n  /**\n   * Lifecycle hook that runs after component initialization.\n   * No additional logic here.\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Checks whether the new channel name has >=3 trimmed characters.\n   * @param value The user's input for channel name\n   */\n  onChannelNameChange(value: string): void {\n    this.isChannelNameValid = value.trim().length >= 3;\n  }\n\n  /**\n   * Creates a new channel if valid and not already taken.\n   * Opens a member-selection dialog (MembersDialogComponent) if\n   * the name is valid and unique, then adds the channel.\n   */\n  onCreate(): void {\n    if (!this.isChannelNameValid) return;\n    const allChannels = this.channelService.getChannels();\n    const nameExists = allChannels.some(\n      c => c.name.toLowerCase() === this.channelName.toLowerCase()\n    );\n    if (nameExists) {\n      this.channelNameExists = true;\n      return;\n    }\n    this.channelNameExists = false;\n    const membersDialog = this.dialog.open(MembersDialogComponent, {\n      data: { channelName: this.channelName }\n    });\n    membersDialog.afterClosed().subscribe(result => {\n      if (!result?.selectedMembers) return;\n      this.channelService.addChannel({\n        name: this.channelName,\n        members: result.selectedMembers,\n        description: this.description\n      });\n    });\n    this.dialogRef.close();\n  }\n\n  /**\n   * Closes the current dialog without creating/updating a channel.\n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n\n\n\n\n\n    \n\n    \n        \n  \n    Channel erstellen\n    \n  \n  \n    \n      Channels dienen deinem Team zur Kommunikation. Am besten sollten sie\n      themenbezogen sein, z. B. #marketing zum Beispiel.\n    \n\n    Channel-Name\n    \n      \n      \n    \n    \n      Channel-Name existiert bereits\n    \n\n    \n      Beschreibung\n      (optional)\n    \n    \n      \n    \n  \n\n  \n    \n      Erstellen\n    \n  \n\n\n    \n\n    \n                \n                    ./channel-dialog.component.scss\n                \n                @import \"./../../styles.scss\";\n\nmat-form-field {\n  width: 100%;\n}\n\nmat-dialog-content {\n  padding-bottom: 20px;\n}\n\nmat-dialog-actions {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.mat-mdc-form-field-input-control.mdc-text-field__input,\n.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control {\n  font-size: 18px;\n  font-weight: 400;\n}\n\nlabel {\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n}\n\n.optional {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 5px;\n}\n\n.close-dialog {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  h1 {\n    margin-right: 20px;\n    font-size: 24px;\n    font-weight: 700;\n  }\n\n  img {\n    cursor: pointer;\n    transition: filter 0.3s ease, background-color 0.3s ease;\n    border-radius: 50%;\n\n    &:hover {\n      background-color: $lightblue;\n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n.custom-input {\n  position: relative;\n  border-radius: 40px;\n  padding-top: 25px;\n\n  .input-icon {\n    position: absolute;\n    left: 40px;\n    top: 65%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    transition: filter 0.3s ease;\n  }\n\n  input {\n    background: $lightblue;\n    border-radius: 100px;\n    color: black;\n    font-size: 18px;\n    font-weight: 400;\n    height: 60px;\n    width: 100%;\n    border: 1px solid transparent;\n    cursor: pointer;\n    box-sizing: border-box;\n    max-width: 792px;\n    padding: 1.125rem 2rem 1.125rem 5.375rem;\n\n    &:hover {\n      border-color: #686868;\n      transition: border-color 0.3s;\n    }\n\n    &:focus,\n    &:focus-within {\n      outline: none;\n      border-color: $button-blue;\n    }\n  }\n}\n\n.error-message {\n  min-height: 24px;\n  margin-top: 5px;\n  p {\n    margin: 0;\n    padding-left: 20px;\n    color: red;\n  }\n}\n\n.description-input {\n  textarea {\n    background: $lightblue;\n    border-radius: 100px;\n    color: black;\n    font-size: 18px;\n    font-weight: 700;\n    height: 65px;\n    width: 100%;\n    border: 1px solid transparent;\n    cursor: pointer;\n    box-sizing: border-box;\n    max-width: 792px;\n    resize: none;\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding: 10px 20px;\n    padding-top: 1.2rem;\n    font-family: \"Nunito\", sans-serif;\n\n    &::placeholder {\n      font-family: \"Nunito\", \"Noto Color Emoji\", \"Segoe UI Emoji\", sans-serif;\n      font-size: 18px;\n      font-weight: 400;\n    }\n\n    &:hover {\n      border-color: #686868;\n      transition: border-color 0.3s;\n    }\n\n    &:focus,\n    &:focus-within {\n      outline: none;\n      border-color: $button-blue;\n    }\n\n    &:not(:focus) {\n      &:has(+ input:focus) {\n        border-color: blue;\n      }\n    }\n  }\n}\n\n.container {\n  max-width: 792px;\n  padding: 40px;\n  border-radius: 40px 0px 0px 0px;\n}\n\n.primary-button {\n  background: $button-blue;\n  border: none;\n  border-radius: 100px;\n  color: white;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 12px 25px;\n  width: 125px;\n  height: 49px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background: #5b5ffc;\n  }\n\n  &:disabled {\n    background-color: #686868;\n    cursor: not-allowed;\n  }\n}\n\n.mat-mdc-dialog-actions {\n  padding: 20px 0;\n  justify-content: flex-end;\n}\n\n::ng-deep .mat-mdc-dialog-container {\n  border-radius: 30px !important;\n}\n\n::ng-deep .mdc-dialog__surface {\n  border-radius: 30px !important;\n  overflow: hidden;\n}\n\n::ng-deep.mat-mdc-dialog-content .mdc-dialog__content {\n  padding: 0;\n}\n\n::ng-deep.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content {\n  padding: 0;\n}\n\n::ng-deep.mat-mdc-dialog-title,\n.mdc-dialog__title,\n.mat-mdc-dialog-container .mat-mdc-dialog-content,\n.mdc-dialog .mdc-dialog__content {\n  padding: 0;\n  margin: 0;\n}\n\n::ng-deep.mat-mdc-dialog-title,\n.mdc-dialog__title {\n  margin: 0 0 20px !important ;\n}\n\n.mdc-dialog__content > :first-child {\n  font-size: 18px;\n  color: black;\n}\n\n@media (max-width: 868px) {\n  .container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    border-radius: 0;\n    max-width: 100%;\n    padding: 20px;\n    overflow-y: auto;\n    box-sizing: border-box;\n    background-color: white;\n  }\n\n  .mdc-dialog__content > :first-child {\n    font-size: 17px;\n  }\n\n  .custom-input .input-icon {\n    left: 10px;\n  }\n\n  .custom-input input {\n    padding: 1.125rem 2.3rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Channel erstellen                  Channels dienen deinem Team zur Kommunikation. Am besten sollten sie      themenbezogen sein, z. B. #marketing zum Beispiel.        Channel-Name                              Channel-Name existiert bereits              Beschreibung      (optional)                                Erstellen      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChannelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelMessageData.html":{"url":"interfaces/ChannelMessageData.html","title":"interface - ChannelMessageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChannelMessageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channelId\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            messageFormat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderAvatar\n                                        \n                                \n                                \n                                        \n                                            senderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  id?: string;\n  content: MessageContent;\n  timestamp: any;\n  senderId: string;\n  time: string;\n  date?: string | { seconds: number; nanoseconds: number };\n  recipientId?: string;\n  channelId?: string;\n  conversationId?: string;\n  formattedDate?: string;\n  replyCount?: number;\n  lastResponseTime?: any;\n  channelName?: string;\n  threadChannelId?: string;\n  parentId?: string;\n  isHighlighted?: boolean;\n  isEditing?: boolean;\n  isEmojiPickerVisible?: boolean;\n  showAllEmojisList?: boolean;\n  expanded?: boolean;\n  type?: string;\n  threadId?: string;\n  lastReplyTime?: any;\n  recipientName?: string;\n  showDateSeparator?: boolean; \n}\n\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n  emojis?: Array;\n}\n\n/**\n * FirestoreMessageData defines the structure of a message document in Firestore.\n * Add more properties as needed to reflect your Firestore schema.\n */\nexport interface FirestoreMessageData {\n  content?: {\n    emojis?: Array;\n  };\n  // additional fields go here, e.g. senderId, timestamp, etc.\n}\n\n\n// message.models.ts\nexport interface BroadcastMessageData {\n  broadcastChannels: string[]; \n  senderId: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderName?: string;\n  senderAvatar?: string;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n// message.models.ts\n\nexport interface ChannelMessageData {\n  channelId?: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderId: string;\n  senderName?: string;\n \n\n senderAvatar?: string ;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectMessagesComponent.html":{"url":"components/DirectMessagesComponent.html","title":"component - DirectMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/direct-messages/direct-messages.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-direct-messages\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./direct-messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./direct-messages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserStatus\n                            \n                            \n                                inactivityTimeout\n                            \n                            \n                                isChannelsVisible\n                            \n                            \n                                members\n                            \n                            \n                                userIsActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                handleUserActivity\n                            \n                            \n                                    Private\n                                listenForAuthChanges\n                            \n                            \n                                    Private\n                                loadMembers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirectMessage\n                            \n                            \n                                    Private\n                                resetInactivityTimer\n                            \n                            \n                                    Private\n                                    Async\n                                setUserAsInactive\n                            \n                            \n                                toggleChannels\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                memberSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                            \n                                document:mousemove\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/direct-messages/direct-messages.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        memberSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/direct-messages/direct-messages.component.ts:22\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \ndocument:keydown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:mousemove\n                        \n                    \n                \n            \n            \n                \ndocument:mousemove()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:77\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleUserActivity\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUserActivity()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:mousemove')@HostListener('document:keydown')\n                \n            \n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listenForAuthChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    listenForAuthChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectMessage\n                        \n                    \n                \n            \n            \n                \nopenDirectMessage(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInactivityTimer\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInactivityTimer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setUserAsInactive\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserAsInactive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChannels\n                        \n                    \n                \n            \n            \n                \ntoggleChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/direct-messages/direct-messages.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Abwesend'\n                    \n                \n                    \n                        \n                                Defined in src/app/direct-messages/direct-messages.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inactivityTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/direct-messages/direct-messages.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChannelsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/direct-messages/direct-messages.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/direct-messages/direct-messages.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIsActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/direct-messages/direct-messages.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  HostListener,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { MessageService } from '../message.service'; // ACHTUNG: anpassen, falls anderer Pfad\nimport { getAuth, onAuthStateChanged } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-direct-messages',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './direct-messages.component.html',\n  styleUrls: ['./direct-messages.component.scss'],\n})\nexport class DirectMessagesComponent implements OnInit {\n  @Output() memberSelected = new EventEmitter();\n  members: any[] = [];\n  isChannelsVisible: boolean = false;\n\n  inactivityTimeout: any;\n  currentUserStatus: string = 'Abwesend';\n  userIsActive: boolean = true;\n\n  constructor(\n    private userService: UserService,\n    private messageService: MessageService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMembers();\n\n    this.messageService.onAllUsersChanged((allUsers) => {\n      const auth = getAuth();\n      const currentUid = auth.currentUser?.uid;\n      this.members = allUsers\n        .filter((m) => m.id !== currentUid)\n        .map((m) => ({\n          ...m,\n          userStatus: m.isOnline ? 'Aktiv' : 'Abwesend',\n        }));\n    });\n\n    this.listenForAuthChanges();\n    this.resetInactivityTimer();\n  }\n\n  private loadMembers(): void {\n    this.userService\n      .getAllUsers()\n      .then((data) => {\n        const auth = getAuth();\n        const currentUid = auth.currentUser?.uid;\n        this.members = data\n          .filter((m) => m.id !== currentUid)\n          .map((m) => ({\n            ...m,\n            userStatus: m.isOnline ? 'Aktiv' : 'Abwesend',\n          }));\n      })\n      .catch(() => {\n        // intentionally empty\n      });\n  }\n\n  // -----------------------------------------------\n  // 2) USER (IN)ACTIVITY\n  // -----------------------------------------------\n  @HostListener('document:mousemove')\n  @HostListener('document:keydown')\n  handleUserActivity(): void {\n    this.resetInactivityTimer();\n  }\n\n  private resetInactivityTimer(): void {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (currentUser && !this.userIsActive) {\n      this.userIsActive = true;\n      // --> Online-Status in UserService\n      this.messageService.setUserOnlineStatus(currentUser.uid, true);\n    }\n    if (this.inactivityTimeout) clearTimeout(this.inactivityTimeout);\n\n    this.inactivityTimeout = setTimeout(() => {\n      this.setUserAsInactive();\n    }, 50000);\n  }\n\n  private async setUserAsInactive(): Promise {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (currentUser && this.userIsActive) {\n      this.userIsActive = false;\n      // --> Offline-Status in UserService\n      await this.messageService.setUserOnlineStatus(currentUser.uid, false);\n    }\n  }\n\n  // -----------------------------------------------\n  // 3) AUTH CHANGES\n  // -----------------------------------------------\n  private listenForAuthChanges(): void {\n    const auth = getAuth();\n    // Use onAuthStateChanged -> bei login oder logout\n    onAuthStateChanged(auth, async (user) => {\n      if (user && user.uid) {\n        // user eingeloggt -> online setzen\n        await this.messageService.setUserOnlineStatus(user.uid, true);\n        this.resetInactivityTimer();\n      } else {\n        // user ausgeloggt -> offline setzen\n        const current = auth.currentUser;\n        if (current) {\n          await this.messageService.setUserOnlineStatus(current.uid, false);\n        }\n      }\n    });\n  }\n\n  // -----------------------------------------------\n  // 4) DIRECT MESSAGES UI\n  // -----------------------------------------------\n  toggleChannels(): void {\n    this.isChannelsVisible = !this.isChannelsVisible;\n  }\n\n  openDirectMessage(member: any): void {\n    this.memberSelected.emit(member);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n\n      \n        \n\n        Direktnachrichten\n      \n    \n\n    \n      \n        \n          \n            \n\n            \n            \n          \n          {{ member.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./direct-messages.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.selection {\n  display: flex;\n  flex-direction: column;\n\n  .channel-box {\n    display: flex;\n    flex-direction: column;\n    cursor: pointer;\n    gap: 25px;\n\n    .hover-container {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n\n      &:hover {\n        img {\n          filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n            saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n        }\n\n        h1 {\n          color: $hoverColor;\n        }\n      }\n\n      img {\n        width: 24px;\n        height: 24px;\n        object-fit: cover;\n        transition: filter 0.3s ease, transform 0.3s ease;\n      }\n\n      h1 {\n        font-size: 20px;\n        font-weight: 700;\n        transition: color 0.3s ease, transform 0.3s ease;\n      }\n    }\n\n    .work-box {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n    }\n\n    .channel-left {\n      transition: transform 0.3s ease;\n\n      &.rotate-down {\n        transform: rotate(180deg);\n      }\n    }\n  }\n\n  .mitglieder {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    padding-left: 35px;\n    cursor: pointer;\n    border-radius: 50px;\n    transition: background-color 0.3s ease;\n    width: fit-content;\n    height: 58px;\n\n    .avatar-container {\n      position: relative;\n      display: inline-block;\n    }\n\n    .status-icon {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      background-color: white;\n      border: 2px solid white;\n    }\n\n    img {\n      width: 50px;\n      height: 50px;\n      object-fit: cover;\n      border-radius: 50%;\n    }\n\n    h2 {\n      font-size: 18px;\n      font-weight: 400;\n      padding: 10px 15px;\n      transition: background-color 0.3s ease;\n      border-radius: 50px;\n      display: inline-block;   \n      width: 100%;\n      max-width: 150px;            \n      white-space: nowrap;    \n      overflow: hidden;        \n      text-overflow: ellipsis; \n    }\n    \n    &:hover {\n      background-color: $lightblue;\n      padding-right: 30px;\n      border-radius: 100px;\n    }\n  }\n}\n\n.mitglieder-box {\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n}\n\n@media (max-width: 1278px) {\n  .selection .mitglieder {\n    .status-icon {\n      width: 14px;\n      height: 14px;\n    }\n\n    h2 {\n      font-size: 17px !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Direktnachrichten                                                                                              {{ member.name }}                    '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmojiItem.html":{"url":"interfaces/EmojiItem.html","title":"interface - EmojiItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmojiItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search-field/search-field.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Structure of an emoji item, with an emoji character and a usage count.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            emoji\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emoji\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule, formatDate } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Message } from '../message.models';\nimport { MessageService } from '../message.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PickerModule } from '@ctrl/ngx-emoji-mart';\nimport { Router } from '@angular/router';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { BroadcastMessageData } from '../message.models';\n\n/**\n * Structure of a message's main content, potentially containing text,\n * an image, and an array of emojis with usage counts.\n */\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n}\n\n/**\n * Structure of an emoji item, with an emoji character and a usage count.\n */\ninterface EmojiItem {\n  emoji: string;\n  count: number;\n}\n\n/**\n * The SearchFieldComponent allows for user search,\n * multi-selection of recipients, and sending messages\n * (including images and emojis) to these recipients.\n */\n@Component({\n  selector: 'app-search-field',\n  standalone: true,\n  imports: [CommonModule, FormsModule, PickerModule, OverlayModule],\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.scss'],\n})\nexport class SearchFieldComponent {\n  /**\n   * Emitted when this search field is closed (e.g., user\n   * has completed or canceled the search).\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emitted when a user is selected, passing that user's info\n   * (e.g., id, name) to the parent.\n   */\n  @Output() memberSelected = new EventEmitter();\n\n  /**\n   * The query text used for searching users.\n   */\n  searchQuery: string = '';\n\n  /**\n   * Holds the users filtered by the search query.\n   */\n  filteredMembers: any[] = [];\n\n  /**\n   * Flag indicating if no results were found for the current query.\n   */\n  noResultsFound: boolean = false;\n\n  /**\n   * A reference to the DOM element containing the message list,\n   * used for auto-scrolling.\n   */\n  @ViewChild('messageList') messageList!: ElementRef;\n\n  /**\n   * The display name of a specific recipient (if used for direct messages).\n   */\n  @Input() recipientName: string = '';\n\n  /**\n   * The unique ID of that recipient (if used for direct messages).\n   */\n  @Input() recipientId: string = '';\n\n  /**\n   * Toggles the visibility of the search field in the UI.\n   */\n  @Input() showSearchField: boolean = false;\n\n  /**\n   * An image URL or data URL representing a selected file to attach to a message.\n   */\n  imageUrl: string | ArrayBuffer | null = null;\n\n  /**\n   * Text for sending as a private or group message.\n   */\n  privateMessage: string = '';\n\n  /**\n   * Stores the current user's info after loading from Firestore.\n   */\n  currentUser: any;\n\n  /**\n   * Array of messages if fetching direct messages. Each item is typed\n   * as a `Message` from message.models.\n   */\n  privateMessages: any[] = [];\n\n  /**\n   * A generated conversation ID (if used for a direct conversation).\n   */\n  conversationId: string | undefined;\n\n  /**\n   * The online/offline status of a direct chat recipient (e.g., 'Aktiv', 'Abwesend').\n   */\n  recipientStatus: string = '';\n\n  /**\n   * The avatar URL of the direct chat recipient.\n   */\n  recipientAvatarUrl: string = '';\n\n  /**\n   * Toggles the global emoji picker for sending messages.\n   */\n  isEmojiPickerVisible: boolean = false;\n\n  /**\n   * Indicates if an image modal is open for viewing a selected image in detail.\n   */\n  isImageModalOpen = false;\n\n  /**\n   * Stores the current date for logic such as \"Heute\" or \"Gestern\".\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * The \"yesterday\" date used for date comparisons.\n   */\n  yesterdayDate: Date = this.getYesterdayDate();\n\n  /**\n   * Tracks if a textarea is expanded because an image is attached.\n   */\n  isTextareaExpanded: boolean = false;\n\n  /**\n   * Lists of emojis frequently used in sent or received messages.\n   */\n  lastUsedEmojisReceived: string[] = [];\n  lastUsedEmojisSent: string[] = [];\n\n  /**\n   * Toggles edit options for a specific message.\n   */\n  showEditOptions: boolean = false;\n\n  /**\n   * Identifies the currently edited message by its ID.\n   */\n  currentMessageId: string | null = null;\n\n  /**\n   * Stores a backup of the original message content if the user starts editing.\n   */\n  originalMessage: any = null;\n\n  /**\n   * Tooltip management for emojis (visibility, position, etc.).\n   */\n  tooltipVisible = false;\n  tooltipPosition = { x: 0, y: 0 };\n  tooltipEmoji = '';\n  tooltipSenderName = '';\n\n  /**\n   * If sending a broadcast message to multiple recipients,\n   * this array tracks which recipients are selected.\n   */\n  selectedRecipients: any[] = [];\n\n  /**\n   * The text typed when sending a broadcast to all selected recipients.\n   */\n  messageToAll: string = 'An: #channel, oder @jemand';\n\n  /**\n   * Toggles an \"@\" mention dropdown.\n   */\n  showAtDropdown: boolean = false;\n\n  /**\n   * Holds all members (e.g., for mention or multi-select).\n   */\n  allMembers: any[] = [];\n\n  /**\n   * Indicates whether the screen is in desktop mode (>= 1278px).\n   */\n  isDesktop = false;\n  placeholderText = '';\n  filteredResults: any[] = [];\n\n  /**\n   * Constructor injecting route info, user/channels, dialog, messageService, and router if needed.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private channelService: ChannelService,\n    private dialog: MatDialog,\n    private messageService: MessageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Lifecycle hook. Loads current user, recipient data, sets desktop mode,\n   * and if needed, fetches messages or emojis for a direct conversation.\n   */\n  async ngOnInit(): Promise {\n    await this.loadCurrentUser();\n    this.loadRecipientData();\n    this.checkDesktopWidth();\n    this.updatePlaceholderText(window.innerWidth);\n    this.currentUser = await this.userService.getCurrentUserData();\n\n    if (this.currentUser && this.recipientId) {\n      this.initializeDirectConversation();\n    }\n  }\n\n  private initializeDirectConversation(): void {\n    this.conversationId = this.messageService.generateConversationId(\n      this.currentUser.id,\n      this.recipientId\n    );\n\n    this.messageService\n      .getMessagesOnce('private', this.conversationId)\n      .then((messages: Message[]) => {\n        this.privateMessages = messages.map((msg) => ({\n          ...msg,\n          content: { ...msg.content, emojis: msg.content?.emojis || [] },\n        }));\n        this.scrollToBottom();\n      })\n      .catch(() => {});\n\n    this.loadLastUsedEmojis();\n  }\n\n  /**\n   * HostListener tracking window resize events to update desktop mode status.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.checkDesktopWidth();\n    this.updatePlaceholderText(event.target.innerWidth);\n  }\n\n  /**\n   * Updates the placeholder text depending on screen width.\n   */\n  private updatePlaceholderText(width: number) {\n    if (width > 1278) {\n      this.placeholderText = 'An: #channel, oder @jemand oder E-Mail Adresse';\n    } else {\n      this.placeholderText = 'An: #channel, oder @jemand';\n    }\n  }\n\n  /**\n   * Checks if the screen width is >= 1278px to set isDesktop to true.\n   */\n  checkDesktopWidth() {\n    this.isDesktop = window.innerWidth >= 1278;\n  }\n\n  /**\n   * Loads the last used emojis from the conversation's recent messages,\n   * storing them in `lastUsedEmojisSent`/`Received`.\n   */\n  private async loadLastUsedEmojis(): Promise {\n    if (!this.conversationId) return;\n\n    try {\n      const messages = await this.messageService.getMessagesOnce(\n        'private',\n        this.conversationId\n      );\n      const lastMessages = messages.slice(-10);\n\n      this.lastUsedEmojisSent = [];\n      this.lastUsedEmojisReceived = [];\n\n      lastMessages.forEach((msg: Message) => {\n        if (msg.content?.emojis) {\n          if (msg.senderId === this.currentUser.id) {\n            this.lastUsedEmojisSent.push(\n              ...msg.content.emojis.map((e) => e.emoji)\n            );\n          } else {\n            this.lastUsedEmojisReceived.push(\n              ...msg.content.emojis.map((e) => e.emoji)\n            );\n          }\n        }\n      });\n\n      this.lastUsedEmojisSent = [...new Set(this.lastUsedEmojisSent)].slice(\n        0,\n        5\n      );\n      this.lastUsedEmojisReceived = [\n        ...new Set(this.lastUsedEmojisReceived),\n      ].slice(0, 5);\n    } catch (error) {}\n  }\n\n  /**\n   * Formats a date string as 'Heute', 'Gestern', or a localized German date.\n   */\n  getFormattedDate(dateString: string): string {\n    if (!dateString) {\n      return 'Ungültiges Datum';\n    }\n\n    const date = this.parseDateString(dateString);\n\n    if (isNaN(date.getTime())) {\n      return 'Ungültiges Datum';\n    }\n\n    if (this.isSameDay(date, new Date())) {\n      return 'Heute';\n    } else if (this.isSameDay(date, this.getYesterdayDate())) {\n      return 'Gestern';\n    }\n\n    const options: Intl.DateTimeFormatOptions = {\n      weekday: 'long',\n      day: '2-digit',\n      month: 'long',\n    };\n    return date.toLocaleDateString('de-DE', options);\n  }\n\n  /**\n   * Parses a date string in the format 'dd.mm.yyyy' or a generic string date.\n   * Returns the corresponding Date object (may be invalid if the parsing fails).\n   */\n  private parseDateString(dateString: string): Date {\n    const parts = dateString.split('.');\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1;\n      const year = parseInt(parts[2], 10);\n      return new Date(year, month, day);\n    }\n    return new Date(dateString);\n  }\n\n  /**\n   * Returns the date object representing \"yesterday\" for date comparison.\n   */\n  private getYesterdayDate(): Date {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return yesterday;\n  }\n\n  /**\n   * Checks if two dates fall on the same calendar day.\n   */\n  private isSameDay(date1: Date, date2: Date): boolean {\n    return (\n      date1.getDate() === date2.getDate() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getFullYear() === date2.getFullYear()\n    );\n  }\n\n  /**\n   * Loads the current user's data from Firestore, storing it in `currentUser`.\n   */\n  async loadCurrentUser(): Promise {\n    return this.userService\n      .getCurrentUserData()\n      .then((user) => {\n        this.currentUser = user;\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * If a `recipientId` is provided, loads that user's data (status, avatar, etc.) for display.\n   */\n  loadRecipientData(): void {\n    if (this.recipientId) {\n      this.userService\n        .getUserById(this.recipientId)\n        .then((userData) => {\n          this.recipientStatus = userData.isOnline ? 'Aktiv' : 'Abwesend';\n          this.recipientAvatarUrl = userData.avatarUrl || '';\n        })\n        .catch(() => {});\n    }\n  }\n\n  /**\n   * Loads private messages once for the generated conversation ID, storing them in `privateMessages`.\n   */\n  loadPrivateMessages(): void {\n    const senderId = this.userService.getCurrentUserId();\n    if (senderId && this.recipientId) {\n      const conversationId = this.messageService.generateConversationId(\n        senderId,\n        this.recipientId\n      );\n      this.messageService\n        .getMessagesOnce('private', conversationId)\n        .then((messages: Message[]) => {\n          this.privateMessages = messages.map((msg: Message) => ({\n            ...msg,\n            timestamp:\n              msg.timestamp instanceof Date ? msg.timestamp : new Date(),\n          }));\n          this.scrollToBottom();\n        })\n        .catch(() => {});\n    } else {\n    }\n  }\n\n  /**\n   * Called when an image is selected from a file input. Reads as data URL and optionally adjusts textarea height.\n   */\n  onImageSelected(event: Event, textArea?: HTMLTextAreaElement): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imageUrl = e.target?.result || null;\n        if (textArea) {\n          this.adjustTextareaHeight(textArea);\n        }\n        this.isTextareaExpanded = true;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  /**\n   * Toggles the global emoji picker for the broadcast message input or other usage.\n   */\n  toggleEmojiPicker(): void {\n    this.isEmojiPickerVisible = !this.isEmojiPickerVisible;\n  }\n\n  /**\n   * Adds a selected emoji from the global picker to `messageToAll`.\n   */\n  addEmoji(event: any): void {\n    if (event?.emoji?.native) {\n      this.messageToAll += event.emoji.native;\n    }\n    this.isEmojiPickerVisible = false;\n  }\n\n  /**\n   * Opens a modal to view the selected image in larger detail.\n   */\n  openImageModal(): void {\n    this.isImageModalOpen = true;\n  }\n\n  /**\n   * Closes the image modal.\n   */\n  closeImageModal(): void {\n    this.isImageModalOpen = false;\n  }\n\n  /**\n   * Closes the profile card or image preview, clearing the selected image and resetting textarea height.\n   */\n  closeProfileCard(textArea: HTMLTextAreaElement): void {\n    this.imageUrl = null;\n    this.resetTextareaHeight(textArea);\n  }\n\n  /**\n   * Increases the textarea's bottom padding if an image is present.\n   */\n  adjustTextareaHeight(textArea: HTMLTextAreaElement): void {\n    if (this.imageUrl) {\n      textArea.style.paddingBottom = '160px';\n    }\n  }\n\n  /**\n   * Resets the bottom padding of the textarea to default.\n   */\n  resetTextareaHeight(textArea: HTMLTextAreaElement): void {\n    textArea.style.paddingBottom = '20px';\n  }\n\n  /**\n   * Handles the Enter key in the broadcast message input. If Shift is not pressed, sends the message.\n   */\n  handleKeyDown(event: KeyboardEvent, textArea: HTMLTextAreaElement): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessageToAll(textArea);\n    }\n  }\n\n  /**\n   * Scrolls the message list to the bottom after a brief delay, ensuring the view is updated first.\n   */\n  private scrollToBottom(): void {\n    setTimeout(() => {\n      if (this.messageList) {\n        this.messageList.nativeElement.scrollTop =\n          this.messageList.nativeElement.scrollHeight;\n      }\n    }, 100);\n  }\n\n  /**\n   * Inserts '@' at the end of messageToAll, potentially used to mention a user\n   * in a broadcast scenario.\n   */\n  addAtSymbolAndOpenDialog(): void {\n    this.messageToAll += '@';\n  }\n\n  /**\n   * Toggles an inline emoji picker for a specific message object, ensuring only one is open at once.\n   */\n  toggleEmojiPickerForMessage(msg: any): void {\n    const isCurrentlyVisible = msg.isEmojiPickerVisible;\n    this.privateMessages.forEach((m) => (m.isEmojiPickerVisible = false));\n    msg.isEmojiPickerVisible = !isCurrentlyVisible;\n  }\n\n  /**\n   * Lifecycle hook that watches for changes to `recipientId`,\n   * reloading data if a new recipient is set.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['recipientId'] && !changes['recipientId'].isFirstChange()) {\n      this.loadRecipientData();\n      this.loadPrivateMessages();\n    }\n  }\n\n  /**\n   * Generates a stable conversation ID by sorting two user IDs alphabetically.\n   */\n  generateConversationId(userId1: string, userId2: string): string {\n    return [userId1, userId2].sort().join('_');\n  }\n\n  /**\n   * Adds an emoji to a given message, updating the local message's emoji array.\n   * (Ohne das Schließen des Pickers und Firestore-Update)\n   */\n  addEmojiToMessage(event: any, msg: any): void {\n    if (!msg.content.emojis) {\n      msg.content.emojis = [];\n    }\n    const newEmoji = event.emoji.native;\n    const existingEmoji = msg.content.emojis.find(\n      (e: any) => e.emoji === newEmoji\n    );\n\n    if (existingEmoji) {\n      existingEmoji.count += 1;\n    } else {\n      msg.content.emojis.push({ emoji: newEmoji, count: 1 });\n    }\n\n    if (msg.senderName === this.currentUser?.name) {\n      if (!this.lastUsedEmojisSent.includes(newEmoji)) {\n        this.lastUsedEmojisSent = [newEmoji, ...this.lastUsedEmojisSent].slice(\n          0,\n          2\n        );\n      }\n    } else {\n      if (!this.lastUsedEmojisReceived.includes(newEmoji)) {\n        this.lastUsedEmojisReceived = [\n          newEmoji,\n          ...this.lastUsedEmojisReceived,\n        ].slice(0, 2);\n      }\n    }\n  }\n\n  /**\n   * Closes the emoji picker for the given message and saves the updated emoji array to Firestore.\n   */\n  closeEmojiPicker(msg: any): void {\n    msg.isEmojiPickerVisible = false;\n\n    this.messageService\n      .updateMessage(msg.id, {\n        'content.emojis': msg.content.emojis,\n      })\n      .then(() => {\n        // console.log entfernt\n      })\n      .catch((error) => console.error('❌ Error adding emoji:', error));\n  }\n\n  /**\n   * Saves an edited message to Firestore, updating the local list afterward.\n   */\n  async saveMessage(msg: any): Promise {\n    if (msg?.isEditing !== undefined) {\n      msg.isEditing = false;\n      const messageId = msg.id;\n      if (messageId) {\n        try {\n          await this.messageService.updateMessage(messageId, {\n            content: msg.content,\n          });\n          this.privateMessages = this.privateMessages.map((m) =>\n            m.id === messageId ? { ...msg, isEditing: false } : m\n          );\n        } catch (err) {}\n      } else {\n      }\n    }\n  }\n\n  /**\n   * Initializes a conversation by loading the last emojis and messages for a user/recipient combination.\n   */\n  async initializeConversation(): Promise {\n    if (!this.currentUser || !this.recipientId) {\n      return;\n    }\n\n    const conversationId = this.messageService.generateConversationId(\n      this.currentUser.id,\n      this.recipientId\n    );\n\n    await this.loadLastUsedEmojisForConversation(conversationId);\n    this.loadPrivateMessagesForConversation(conversationId);\n  }\n\n  /**\n   * Loads up to the last 10 messages of the conversation, extracting emojis\n   * to update 'lastUsedEmojisSent' / 'lastUsedEmojisReceived' for the current user.\n   */\n  private async loadLastUsedEmojisForConversation(\n    conversationId: string\n  ): Promise {\n    try {\n      const lastMessages = await this.fetchLastTenMessages(conversationId);\n\n      this.processEmojisFromMessages(lastMessages);\n\n      this.limitTopEmojis();\n    } catch (error: any) {\n      console.error('❌ Error loading last emojis:', error);\n    }\n  }\n\n  /**\n   * Fetches all messages and returns only the last 10 of them.\n   */\n  private async fetchLastTenMessages(\n    conversationId: string\n  ): Promise {\n    const messages: Message[] = await this.messageService.getMessagesOnce(\n      'private',\n      conversationId\n    );\n    return messages.slice(-10);\n  }\n\n  /**\n   * Pushes emojis from each message into either lastUsedEmojisSent or lastUsedEmojisReceived,\n   * depending on who sent the message.\n   */\n  private processEmojisFromMessages(lastMessages: Message[]): void {\n    this.lastUsedEmojisSent = [];\n    this.lastUsedEmojisReceived = [];\n\n    lastMessages.forEach((msg: Message) => {\n      if (msg.content?.emojis) {\n        if (msg.senderId === this.currentUser.id) {\n          this.lastUsedEmojisSent.push(\n            ...msg.content.emojis.map((e) => e.emoji)\n          );\n        } else {\n          this.lastUsedEmojisReceived.push(\n            ...msg.content.emojis.map((e) => e.emoji)\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Keeps only up to the first 5 unique emojis in both\n   * lastUsedEmojisSent and lastUsedEmojisReceived.\n   */\n  private limitTopEmojis(): void {\n    this.lastUsedEmojisSent = [...new Set(this.lastUsedEmojisSent)].slice(0, 5);\n    this.lastUsedEmojisReceived = [\n      ...new Set(this.lastUsedEmojisReceived),\n    ].slice(0, 5);\n  }\n\n  /**\n   * Loads all messages for the conversation, normalizing the 'emojis' array,\n   * then scrollt zum Ende der Liste.\n   */\n  private loadPrivateMessagesForConversation(conversationId: string): void {\n    this.messageService\n      .getMessagesOnce('private', conversationId)\n      .then((messages: Message[]) => {\n        this.privateMessages = messages.map((msg: Message) => ({\n          ...msg,\n          content: { ...msg.content, emojis: msg.content?.emojis || [] },\n        }));\n        this.scrollToBottom();\n      })\n      .catch((error: any) => {\n        console.error('❌ Error retrieving private messages:', error);\n      });\n  }\n\n  /**\n   * Toggles the edit options for a specific message based on its ID.\n   */\n  toggleEditOptions(msgId: string): void {\n    if (this.currentMessageId === msgId && this.showEditOptions) {\n      this.showEditOptions = false;\n      this.currentMessageId = null;\n    } else {\n      this.showEditOptions = true;\n      this.currentMessageId = msgId;\n    }\n  }\n\n  /**\n   * Marks a message as editing mode, storing its original for revert if canceled.\n   */\n  startEditing(msg: any): void {\n    msg.isEditing = true;\n    this.originalMessage = { ...msg };\n    this.showEditOptions = false;\n  }\n\n  /**\n   * Alternative approach to open editing for a message, also saving the original content.\n   */\n  toggleEditMessage(msg: any): void {\n    msg.isEditing = true;\n    this.originalMessage = { ...msg };\n  }\n\n  /**\n   * Cancels editing of a message, reverting to the original text if available.\n   */\n  cancelEditing(msg: any): void {\n    msg.isEditing = false;\n    if (this.originalMessage) {\n      msg.content = { ...this.originalMessage.content };\n      this.originalMessage = null;\n    }\n    this.showEditOptions = false;\n  }\n\n  /**\n   * Displays a tooltip above an emoji, showing the emoji char and the sender's name.\n   */\n  showTooltip(event: MouseEvent, emoji: string, senderName: string): void {\n    this.tooltipVisible = true;\n    this.tooltipEmoji = emoji;\n    this.tooltipSenderName = senderName;\n    this.tooltipPosition = {\n      x: event.clientX,\n      y: event.clientY - 40,\n    };\n  }\n\n  /**\n   * Hides the currently shown tooltip.\n   */\n  hideTooltip(): void {\n    this.tooltipVisible = false;\n  }\n\n  /**\n   * Selects a user from the search results, emits an event to the parent, then closes the search.\n   */\n  selectMember(member: any): void {\n    this.memberSelected.emit(member);\n    this.closeSearch();\n  }\n\n  /**\n   * Closes the search field, emitting an event to the parent.\n   */\n  closeSearch(): void {\n    this.close.emit();\n  }\n\n  /**\n   * Triggers whenever the user types in the search field. Decides if it's a user or channel query.\n   */\n  onSearchInput(): void {\n    const trimmed = this.searchQuery.trim();\n    if (!trimmed) {\n      return this.handleEmptySearch();\n    }\n    const firstChar = trimmed.charAt(0);\n    const rest = trimmed.substring(1).trim();\n\n    if (firstChar === '@') {\n      this.handleUserSearch(rest);\n    } else if (firstChar === '#') {\n      this.handleChannelSearch(rest);\n    } else {\n      this.handleNoPrefix();\n    }\n  }\n\n  /** Handles an empty search input by resetting any filtered results. */\n  private handleEmptySearch(): void {\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /** Handles the case when the input doesn't start with '@' or '#'. */\n  private handleNoPrefix(): void {\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /** Searches for users based on the given query (without the '@' prefix). */\n  private handleUserSearch(query: string): void {\n    this.userService\n      .getUsersByFirstLetter(query)\n      .then((users) => this.updateUserResults(users))\n      .catch(() => this.resetResultsOnError());\n  }\n\n  /** Updates filtered results with mapped user objects. */\n  private updateUserResults(users: any[]): void {\n    const mapped = users.map((u: any) => ({\n      type: 'user',\n      id: u.id || u.uid,\n      email: u.email,\n      name: u.name,\n      avatarUrl: u.avatarUrl || 'assets/img/avatar.png',\n    }));\n    this.filteredResults = mapped;\n    this.noResultsFound = mapped.length === 0;\n  }\n\n  /** Resets filtered results in case of an error during user/channel search. */\n  private resetResultsOnError(): void {\n    this.filteredResults = [];\n    this.noResultsFound = true;\n  }\n\n  /** Searches for channels based on the given query (without the '#' prefix). */\n  private handleChannelSearch(query: string): void {\n    this.channelService\n      .getChannelsByName(query)\n      .then((channels) => this.updateChannelResults(channels))\n      .catch(() => this.resetResultsOnError());\n  }\n\n  /** Updates filtered results with mapped channel objects. */\n  private updateChannelResults(channels: any[]): void {\n    const mapped = channels.map((ch: any) => ({\n      type: 'channel',\n      id: ch.id,\n      name: ch.name,\n    }));\n    this.filteredResults = mapped;\n    this.noResultsFound = mapped.length === 0;\n  }\n\n  /**\n   * Handles a click on one of the filtered results. If it's a user or channel,\n   * the item is added to the recipients. Then all search data is cleared.\n   */\n  onSelectResult(item: any): void {\n    if (item.type === 'user' || item.type === 'channel') {\n      this.addRecipient(item);\n    }\n    this.clearSearchData();\n  }\n\n  /** Resets the search query, filtered results, and the no-results state. */\n  private clearSearchData(): void {\n    this.searchQuery = '';\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /**\n   * Checks if sending should be canceled (no text/image or missing user).\n   */\n  private shouldCancelBroadcast(): boolean {\n    if (!this.messageToAll.trim() && !this.imageUrl) return true;\n    if (!this.currentUser?.id) return true;\n    return false;\n  }\n\n  /**\n   * Sends a message to a single recipient (user or channel).\n   */\n  private async sendToSingleRecipient(recipient: any): Promise {\n    if (recipient.type === 'user') {\n      const convId = this.messageService.generateConversationId(\n        this.currentUser.id,\n        recipient.id\n      );\n      const msgData = this.createBroadcastMessageData(convId, recipient.id);\n      await this.messageService.sendMessage(msgData);\n    }\n  }\n\n  /**\n   * Creates the data for private messages, including timestamps, text, and image.\n   */\n  private createBroadcastMessageData(\n    conversationId: string,\n    recipientId: string\n  ) {\n    return {\n      type: 'private' as const,\n      conversationId,\n      content: {\n        text: this.messageToAll.trim(),\n        image: typeof this.imageUrl === 'string' ? this.imageUrl : '',\n        emojis: [],\n      },\n      date: formatDate(new Date(), 'dd.MM.yyyy', 'en'),\n      timestamp: new Date(),\n      time: new Date().toLocaleTimeString(),\n      senderId: this.currentUser.id,\n      senderName: this.currentUser.name || 'Unbekannt',\n      senderAvatar: this.currentUser.avatarUrl || '',\n      recipientId,\n    };\n  }\n\n  /**\n   * Resets the message, image, emoji picker, and scroll state after broadcast.\n   */\n  private finishBroadcast(textArea: HTMLTextAreaElement): void {\n    this.messageToAll = '';\n    this.imageUrl = null;\n    if (textArea) this.resetTextareaHeight(textArea);\n    this.isEmojiPickerVisible = false;\n    this.scrollToBottom();\n  }\n\n  private clearBroadcastInput(textArea: HTMLTextAreaElement): void {\n    this.messageToAll = '';\n    this.imageUrl = null;\n    if (textArea) this.resetTextareaHeight(textArea);\n\n    this.isEmojiPickerVisible = false;\n    this.scrollToBottom();\n  }\n\n  /**\n   * Adds a recipient to the array of selected recipients.\n   */\n  addRecipient(member: any) {\n    const alreadySelected = this.selectedRecipients.some(\n      (m) => m.id === member.id\n    );\n    if (!alreadySelected) {\n      this.selectedRecipients.push(member);\n\n      // Optionally add a system message about it:\n    }\n\n    this.searchQuery = '';\n    this.filteredMembers = [];\n  }\n\n  /**\n   * Removes a previously added recipient from the selectedRecipients array.\n   */\n  removeRecipient(member: any) {\n    const index = this.selectedRecipients.findIndex((m) => m.id === member.id);\n    if (index > -1) {\n      this.selectedRecipients.splice(index, 1);\n    }\n  }\n\n  /**\n   * (Optional) Adds a system message to the local privateMessages array or systemMessages array.\n   */\n  addSystemMessage(text: string) {\n    const sysMsg = {\n      type: 'system',\n      content: { text },\n      timestamp: new Date(),\n    };\n    this.privateMessages.push(sysMsg);\n  }\n\n  /**\n   * Toggles the \"@\" mention dropdown, loading all members if opening for the first time.\n   */\n  toggleAtDropdown(): void {\n    if (!this.showAtDropdown) {\n      this.loadAllUsers();\n    }\n    this.showAtDropdown = !this.showAtDropdown;\n  }\n\n  /**\n   * Loads all users from Firestore for mention or multi-recipient selection,\n   * storing them in `allMembers`.\n   */\n  loadAllUsers(): void {\n    this.userService\n      .getAllUsers()\n      .then((users) => {\n        this.allMembers = users.map((u) => ({\n          id: u.id,\n          name: u.name,\n          avatarUrl: u.avatarUrl || 'assets/img/avatar.png',\n          isOnline: u.isOnline ?? false,\n        }));\n      })\n      .catch((err) => console.error('Error loading all users:', err));\n  }\n\n  /**\n   * On selecting a user from the \"@\" mention dropdown, inserts their name\n   * into the messageToAll string and closes the dropdown.\n   */\n  addAtSymbolFor(member: any): void {\n    this.messageToAll += '@' + member.name + ' ';\n    this.showAtDropdown = false;\n  }\n\n  /**\n   * Sends private messages to all user recipients and a single broadcast\n   * message to all channel recipients.\n   * @param textArea - The textarea reference for resetting UI state\n   */\n  async sendMessageToAll(textArea: HTMLTextAreaElement): Promise {\n    if (this.shouldCancelBroadcast()) return;\n    const channels = this.selectedRecipients.filter(\n      (r) => r.type === 'channel'\n    );\n    const users = this.selectedRecipients.filter((r) => r.type === 'user');\n    await this.sendToAllUsers(users);\n    if (channels.length) {\n      const broadcastData = this.buildBroadcastData(channels);\n      await this.messageService.sendBroadcastMessage(broadcastData);\n    }\n    this.finishBroadcast(textArea);\n    this.clearBroadcastInput(textArea);\n  }\n\n  /**\n   * Sends a private message (type='private') to each user in the array.\n   * @param users - The array of user recipients\n   */\n  private async sendToAllUsers(users: any[]): Promise {\n    for (const u of users) {\n      await this.sendToSingleRecipient(u);\n    }\n  }\n\n  /**\n   * Builds a broadcast message data object for the given channel recipients.\n   * @param channels - The array of channel recipients\n   * @returns A BroadcastMessageData object\n   */\n  private buildBroadcastData(channels: any[]): BroadcastMessageData {\n    const broadcastChannels = channels.map((ch) => ch.id);\n    return {\n      broadcastChannels,\n      senderId: this.currentUser.id,\n      senderName: this.currentUser.name || 'Unbekannt',\n      date: formatDate(new Date(), 'dd.MM.yyyy', 'en'),\n      time: new Date().toLocaleTimeString(),\n      timestamp: new Date(),\n      content: {\n        text: this.messageToAll.trim(),\n        image: typeof this.imageUrl === 'string' ? this.imageUrl : '',\n        emojis: [],\n      },\n      messageFormat: 'text',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreMessageData.html":{"url":"interfaces/FirestoreMessageData.html","title":"interface - FirestoreMessageData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreMessageData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.models.ts\n        \n\n\n            \n                Description\n            \n            \n                FirestoreMessageData defines the structure of a message document in Firestore.\nAdd more properties as needed to reflect your Firestore schema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  id?: string;\n  content: MessageContent;\n  timestamp: any;\n  senderId: string;\n  time: string;\n  date?: string | { seconds: number; nanoseconds: number };\n  recipientId?: string;\n  channelId?: string;\n  conversationId?: string;\n  formattedDate?: string;\n  replyCount?: number;\n  lastResponseTime?: any;\n  channelName?: string;\n  threadChannelId?: string;\n  parentId?: string;\n  isHighlighted?: boolean;\n  isEditing?: boolean;\n  isEmojiPickerVisible?: boolean;\n  showAllEmojisList?: boolean;\n  expanded?: boolean;\n  type?: string;\n  threadId?: string;\n  lastReplyTime?: any;\n  recipientName?: string;\n  showDateSeparator?: boolean; \n}\n\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n  emojis?: Array;\n}\n\n/**\n * FirestoreMessageData defines the structure of a message document in Firestore.\n * Add more properties as needed to reflect your Firestore schema.\n */\nexport interface FirestoreMessageData {\n  content?: {\n    emojis?: Array;\n  };\n  // additional fields go here, e.g. senderId, timestamp, etc.\n}\n\n\n// message.models.ts\nexport interface BroadcastMessageData {\n  broadcastChannels: string[]; \n  senderId: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderName?: string;\n  senderAvatar?: string;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n// message.models.ts\n\nexport interface ChannelMessageData {\n  channelId?: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderId: string;\n  senderName?: string;\n \n\n senderAvatar?: string ;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n})\nexport class FooterComponent {}\n\n    \n\n    \n        \n  \n    Impressum\n    Datenschutz\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Impressum    Datenschutz  '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showRegister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToSignup\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideContentContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideContentContainer\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToSignup\n                        \n                    \n                \n            \n            \n                \nnavigateToSignup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header/header.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header/header.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showRegister\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  showRegister = true;\n\n  @Input() hideContentContainer = false;\n\n  constructor(private router: Router) {}\n  ngOnInit(): void {\n    this.showRegister =\n      this.router.url !== '/signup' && this.router.url !== '/avatar';\n  }\n\n  navigateToSignup() {\n    this.router.navigate(['/signup']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Neu bei DABubble?\n      Konto erstellen\n    \n  \n\n  \n    \n      \n    \n\n    DABubble\n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  position: relative;\n\n  .register {\n    @include dFlex(null, flex-end, 10px, null);\n    flex-direction: column;\n    padding: 4rem 2rem;\n    .box {\n      @include dFlex(null, flex-end, 5px, null);\n      flex-direction: column;\n    }\n\n    h3 {\n      margin: 0;\n      color: black;\n      font-size: 18px;\n      font-weight: 400;\n    }\n\n    button {\n      color: $middleblue;\n      border: none;\n      border-radius: 100px;\n      padding: 10px 15px;\n      cursor: pointer;\n      font-size: 18px;\n      font-weight: 400;\n      background-color: $lightblue;\n      transition: border-color 0.3s ease-in-out;\n      border: 1px solid transparent;\n\n      &:hover {\n        border-color: $button-blue;\n        transform: scale(1.01);\n        transition: transform 0.3s ease-in-out;\n      }\n    }\n  }\n}\n\nh1 {\n  color: black;\n  font-size: 32px;\n  font-family: \"Nunito\", sans-serif;\n  font-weight: 700;\n  margin-left: 20px;\n  margin: 0;\n}\n\n.container-box {\n  @include dFlex(null, null, 0px);\n  flex-direction: column;\n\n  img {\n    width: 70px;\n  }\n}\n\n.content-container {\n  @include dFlex(null, null, 16px);\n  padding: 4rem 2rem;\n  position: absolute;\n  top: 0;\n  opacity: 1;\n  align-items: center;\n}\n\n@keyframes moveDiagonal {\n  from {\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50vw, -50vh);\n  }\n}\n\n@keyframes moveVertical {\n  from {\n    opacity: 0;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(-50vh);\n  }\n}\n\n@media (max-width: 850px) {\n  .content-container {\n    @include dFlex(center, center, null);\n    max-width: 0px;\n    padding: 4rem 0rem;\n    //animation: moveVertical 1s ease-in-out forwards;\n  }\n\n  .container .register {\n    display: none;\n  }\n\n  .container-box {\n    img {\n      width: 56px;\n    }\n  }\n\n  .container {\n    padding: 4rem 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Neu bei DABubble?      Konto erstellen                          DABubble  '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/imprint.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                FooterComponent\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n            \n                styleUrl\n                ./imprint.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/imprint/imprint.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/imprint/imprint.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/imprint/imprint.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FooterComponent } from '../footer/footer.component';\nimport { HeaderComponent } from '../header/header.component';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-imprint',\n  standalone: true,\n  imports: [FooterComponent,HeaderComponent],\n  templateUrl: './imprint.component.html',\n  styleUrl: './imprint.component.scss'\n})\nexport class ImprintComponent implements OnInit {\n\n  constructor(private location: Location){}\n\n  ngOnInit(): void {\n  }\n\n  goBack(){\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n        \n          \n            \n            \n              \n                \n              \n            \n          \n          \n            \n              Impressum\n              \n            \n            Angaben gemäß § 5 TMG\n            Vertreten durch:\n            Selcuk Kocyigit\n            \n\n            Contact\n            \n              Hochfelder Str.33\n              47226 Duisburg\n              Germany\n            \n            E-mail: info&#64;selcuk-kocyigit.de\n            \n              https://www.e-recht24.de\n            \n          \n        \n      \n    \n  \n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                              Impressum                                      Angaben gemäß § 5 TMG            Vertreten durch:            Selcuk Kocyigit                        Contact                          Hochfelder Str.33              47226 Duisburg              Germany                        E-mail: info@selcuk-kocyigit.de                          https://www.e-recht24.de                                            '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InnerChannelComponent.html":{"url":"components/InnerChannelComponent.html","title":"component - InnerChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InnerChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inner-channel/inner-channel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inner-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                \n            \n\n            \n                styleUrls\n                ./inner-channel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./inner-channel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelNameExists\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    \n                                entwicklerteamComponent\n                            \n                            \n                                entwicklerTeams\n                            \n                            \n                                isChannelsVisible\n                            \n                            \n                                selectedChannel\n                            \n                            \n                                showWelcomeContainer\n                            \n                            \n                                    Private\n                                unsubscribeFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildNewChannel\n                            \n                            \n                                    Async\n                                createChannel\n                            \n                            \n                                    Private\n                                doesChannelNameExist\n                            \n                            \n                                    Private\n                                ensureCurrentUserIncluded\n                            \n                            \n                                    Async\n                                leaveChannel\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                selectChannel\n                            \n                            \n                                toggleChannels\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, channelService: ChannelService, userService: UserService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/inner-channel/inner-channel.component.ts:62\n                            \n                        \n\n                \n                    \n                            Constructor injecting services for dialogs, channel data, user data,\nand change detection if needed.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inner-channel/inner-channel.component.ts:39\n                            \n                        \n                \n                    \n                        Event emitted when a new channel is selected, passing that channel data.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildNewChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildNewChannel(name: string, members: any[], creatorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Builds a new channel object with a random ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                members\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                creatorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createChannel(name: string, members: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Creates a new channel with the given name and members.\nChecks for duplicates, ensures current user is included,\nand saves the channel in Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                members\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        doesChannelNameExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    doesChannelNameExist(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Checks if a channel name already exists in the current array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ensureCurrentUserIncluded\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureCurrentUserIncluded(members: any[], userData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Ensures the current user is in the members array; returns the updated array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        leaveChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    leaveChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Allows the user to leave a channel, removing them from Firestore,\nupdating local state, and emitting null as the current channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Loads channels on init, then subscribes to currentChannels\nto filter those that include the current user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Opens a dialog for channel creation (ChannelDialogComponent),\nthen calls createChannel upon successful dialog close.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChannel\n                        \n                    \n                \n            \n            \n                \nselectChannel(channel: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Selects the specified channel, informs the ChannelService,\nand emits an event to notify other components.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChannels\n                        \n                    \n                \n            \n            \n                \ntoggleChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inner-channel/inner-channel.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Toggles visibility of the channel list UI.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelNameExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:54\n                        \n                    \n\n            \n                \n                    Flag indicating if a channel name already exists.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        entwicklerteamComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntwicklerteamComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(EntwicklerteamComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:34\n                        \n                    \n\n            \n                \n                    A ViewChild reference to the EntwicklerteamComponent for interacting with its instance.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entwicklerTeams\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:45\n                        \n                    \n\n            \n                \n                    Array of channels (teams) that the current user is a member of.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChannelsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:42\n                        \n                    \n\n            \n                \n                    Whether the channel list is visible or collapsed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:60\n                        \n                    \n\n            \n                \n                    Stores the currently selected channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWelcomeContainer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:57\n                        \n                    \n\n            \n                \n                    Whether the welcome screen is shown if no channel is selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribeFn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/inner-channel/inner-channel.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ViewChild,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { ChannelDialogComponent } from '../channel-dialog/channel-dialog.component';\nimport { EntwicklerteamComponent } from '../entwicklerteam/entwicklerteam.component';\nimport { ChannelService } from '../channel.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-inner-channel',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule],\n  templateUrl: './inner-channel.component.html',\n  styleUrls: ['./inner-channel.component.scss'],\n})\nexport class InnerChannelComponent implements OnInit, OnDestroy {\n  /**\n   * A ViewChild reference to the EntwicklerteamComponent for interacting with its instance.\n   */\n  @ViewChild(EntwicklerteamComponent)\n  entwicklerteamComponent!: EntwicklerteamComponent;\n\n  /**\n   * Event emitted when a new channel is selected, passing that channel data.\n   */\n  @Output() channelSelected = new EventEmitter();\n\n  /** Whether the channel list is visible or collapsed. */\n  isChannelsVisible = true;\n\n  /** Array of channels (teams) that the current user is a member of. */\n  entwicklerTeams: {\n    id: string;\n    name: string;\n    members: any[];\n    description?: string;\n    createdBy?: string;\n  }[] = [];\n\n  /** Flag indicating if a channel name already exists. */\n  channelNameExists = false;\n\n  /** Whether the welcome screen is shown if no channel is selected. */\n  showWelcomeContainer = false;\n\n  /** Stores the currently selected channel. */\n  selectedChannel: any = null;\n\n  private unsubscribeFn = () => {};\n\n  /**\n   * Constructor injecting services for dialogs, channel data, user data,\n   * and change detection if needed.\n   */\n  constructor(\n    public dialog: MatDialog,\n    private channelService: ChannelService,\n    private userService: UserService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Loads channels on init, then subscribes to currentChannels\n   * to filter those that include the current user.\n   */\n\n  ngOnInit() {\n    this.unsubscribeFn = this.channelService.listenChannelsLive(\n      (allChannels) => {\n        const userId = this.userService.getCurrentUserId();\n        this.entwicklerTeams = allChannels.filter((ch) =>\n          ch.membersUid.includes(userId)\n        );\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeFn();\n  }\n\n  /**\n   * Creates a new channel with the given name and members.\n   * Checks for duplicates, ensures current user is included,\n   * and saves the channel in Firestore.\n   */\n  async createChannel(name: string, members: any[]): Promise {\n    const userData = await this.userService.getCurrentUserData();\n    if (!userData) return;\n    if (this.doesChannelNameExist(name)) {\n      this.channelNameExists = true;\n      return;\n    }\n    this.channelNameExists = false;\n    members = this.ensureCurrentUserIncluded(members, userData);\n    const newChannel = this.buildNewChannel(name, members, userData.name);\n    this.entwicklerTeams.push(newChannel);\n    await this.channelService.addChannel(newChannel);\n    this.channelService.changeChannel(newChannel);\n  }\n\n  /**\n   * Checks if a channel name already exists in the current array.\n   */\n  private doesChannelNameExist(name: string): boolean {\n    return this.entwicklerTeams.some(\n      (ch) => ch.name.toLowerCase() === name.toLowerCase()\n    );\n  }\n\n  /**\n   * Ensures the current user is in the members array; returns the updated array.\n   */\n  private ensureCurrentUserIncluded(\n    members: any[],\n    userData: { uid: string; name?: string }\n  ): any[] {\n    const { uid, name = 'Unbekannt' } = userData;\n    const isAlreadyIncluded = members.some((m: any) => m.uid === uid);\n    if (!isAlreadyIncluded) {\n      members.push({ uid, name });\n    }\n    return members;\n  }\n\n  /**\n   * Builds a new channel object with a random ID.\n   */\n  private buildNewChannel(\n    name: string,\n    members: any[],\n    creatorName: string\n  ): any {\n    return {\n      id: Math.random().toString(36).substring(2, 15),\n      name,\n      members,\n      createdBy: creatorName || 'Unbekannt',\n    };\n  }\n\n  /**\n   * Selects the specified channel, informs the ChannelService,\n   * and emits an event to notify other components.\n   */\n  selectChannel(channel: any): void {\n    this.channelService.changeChannel(channel);\n    this.channelSelected.emit(channel);\n  }\n\n  /**\n   * Opens a dialog for channel creation (ChannelDialogComponent),\n   * then calls createChannel upon successful dialog close.\n   */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ChannelDialogComponent);\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result)\n        this.createChannel(result.channelName, result.selectedMembers);\n    });\n  }\n\n  /**\n   * Toggles visibility of the channel list UI.\n   */\n  toggleChannels(): void {\n    this.isChannelsVisible = !this.isChannelsVisible;\n  }\n\n  /**\n   * Allows the user to leave a channel, removing them from Firestore,\n   * updating local state, and emitting null as the current channel.\n   */\n  async leaveChannel(channelId: string): Promise {\n    const userId = this.userService.getCurrentUserId();\n    if (!userId) return;\n    try {\n      await this.channelService.leaveChannel(channelId, userId);\n      this.entwicklerTeams = this.entwicklerTeams.filter(\n        (ch) => ch.id !== channelId\n      );\n      this.channelSelected.emit(null);\n    } catch (_error) {}\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n\n      \n        \n\n        Channels\n      \n    \n    \n      \n    \n  \n\n  \n     0\">\n      \n        \n        {{ team.name }}\n      \n    \n\n    \n      \n      Channel hinzufügen\n    \n  \n\n\n    \n\n    \n                \n                    ./inner-channel.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.selection {\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  .channel-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n\n    h1 {\n      margin-left: 10px;\n    }\n\n    .hover-container {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n\n      &:hover {\n        img {\n          filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n            saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n        }\n\n        h1 {\n          color: $hoverColor;\n        }\n      }\n\n      img {\n        width: 24px;\n        height: 24px;\n        object-fit: cover;\n        transition: filter 0.3s ease, transform 0.3s ease;\n      }\n\n      h1 {\n        font-size: 24px;\n        font-weight: 700;\n        transition: color 0.3s ease, transform 0.3s ease;\n        margin: 0;\n      }\n    }\n\n    .work-box {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n    }\n\n    .edit-channel {\n      width: 40px;\n      height: 40px;\n      margin-left: auto;\n      cursor: pointer;\n      border-radius: 50%;\n      transition: background-color 0.3s ease, transform 0.3s ease;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        background-color: $lightblue;\n\n        img {\n          filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n            saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n        }\n      }\n\n      img {\n        width: 24px;\n        height: 24px;\n        object-fit: cover;\n        transition: filter 0.3s ease;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .entwickler-box {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 0 0 0 40px;\n    border-radius: 100px;\n    transition: background-color 0.3s ease, transform 0.3s ease;\n    width: 100%;\n    height: 33px;\n    max-width: 206px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: $lightblue;\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n\n    img {\n      width: 24px;\n      height: 24px;\n      object-fit: cover;\n      transition: filter 0.3s ease;\n      cursor: pointer;\n    }\n\n    p {\n      font-size: 18px;\n    }\n\n    &.selected {\n      background-color: $lightblue; \n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n\n      p {\n        color: $hoverColor;\n      }\n    }\n  }\n\n  .add-channel {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 0 0 0 40px;\n    cursor: pointer;\n    font-size: 18px;\n\n    p {\n      margin: 0;\n    }\n\n    &:hover {\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n        scale: (1.1);\n      }\n\n      p {\n        color: $hoverColor;\n      }\n    }\n    img {\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  .entwickler-box,\n  .add-channel {\n    transition: max-height 0.3s ease, opacity 0.3s ease;\n    overflow: hidden;\n    max-height: 500px; \n    opacity: 1;\n  }\n\n  .entwickler-box.ng-leave,\n  .add-channel.ng-leave {\n    max-height: 0;\n    opacity: 0;\n  }\n\n  .entwickler-box.ng-enter,\n  .add-channel.ng-enter {\n    max-height: 500px;\n    opacity: 1;\n  }\n\n  .channel-left {\n    transition: transform 0.3s ease; \n\n    &.rotate-down {\n      transform: rotate(180deg); \n    }\n  }\n\n  .channel-distanz {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n  }\n\n  .channel-detail-distanz {\n    display: flex;\n    flex-direction: column;\n    gap: 13px;\n  }\n\n  @media (max-width: 1200px) {\n    .channel-box,\n    .hover-container,\n    h1 {\n      font-size: 20px !important;\n    }\n\n    .entwickler-box,\n    p {\n      font-size: 17px !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Channels                                 0\">                      {{ team.name }}                          Channel hinzufügen      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InnerChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntroComponent.html":{"url":"components/IntroComponent.html","title":"component - IntroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/intro/intro.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-intro\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./intro.component.html\n            \n\n\n\n            \n                styleUrl\n                ./intro.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/intro/intro.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/intro/intro.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-intro',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './intro.component.html',\n  styleUrl: './intro.component.scss',\n})\nexport class IntroComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.router.navigate(['/login']);\n    }, 4000);\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n  DABubble\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          DABubble'\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IntroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/member.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Member {\n    id: string;      \n    name: string;\n    image: string;\n    email?: string;   \n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListDialogComponent.html":{"url":"components/MemberListDialogComponent.html","title":"component - MemberListDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/member-list-dialog/member-list-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            OverlayModule\n                \n            \n\n            \n                styleUrls\n                ./member-list-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                data\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                dialogRef\n                            \n                            \n                                    Private\n                                    Optional\n                                unsubscribeAllUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                openAddMembersOverlayMethod\n                            \n                            \n                                openProfileDialog\n                            \n                            \n                                removeMember\n                            \n                            \n                                startPrivateChat\n                            \n                            \n                                updateChannelMembers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelId\n                            \n                            \n                                members\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                openAddMembersOverlay\n                            \n                            \n                                openPrivateChat\n                            \n                            \n                                openProfileRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelService, messageService: MessageService, dialogRef?: MatDialogRef, data?: MemberListDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/member-list-dialog/member-list-dialog.component.ts:66\n                            \n                        \n\n                \n                    \n                            Constructor injecting services and optional references for Material Dialog usage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for channel-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nReference to the Material Dialog, if used.\n\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        MemberListDialogData\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nOptional data passed in via MAT_DIALOG_DATA, if used.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        channelId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:40\n                            \n                        \n                \n                    \n                        The channel ID if used in an overlay context. If data is passed\nvia Material Dialog, it may also come from MAT_DIALOG_DATA.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:45\n                            \n                        \n                \n                    \n                        An array of member objects belonging to the channel.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:50\n                            \n                        \n                \n                    \n                        Emitted when closing the overlay (in cdk Overlay context).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openAddMembersOverlay\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:55\n                            \n                        \n                \n                    \n                        Emitted when requesting the addition of new members (desktop overlay).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openPrivateChat\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:60\n                            \n                        \n                \n                    \n                        Emitted when starting a private chat with a specific member (in cdk overlay).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        openProfileRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-list-dialog/member-list-dialog.component.ts:65\n                            \n                        \n                \n                    \n                        Emitted when opening a profile is requested (desktop overlay).\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component initialization.\nLoads channel ID and members from the injected dialog data if provided.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Closes either the Material Dialog or emits a close event for cdk Overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersOverlayMethod\n                        \n                    \n                \n            \n            \n                \nopenAddMembersOverlayMethod()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Requests opening an \"Add Members\" overlay or dialog,\ndepending on whether we're in a Material Dialog context or an overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfileDialog\n                        \n                    \n                \n            \n            \n                \nopenProfileDialog(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Opens a profile dialog for the given member. For Material Dialog, closes\nwith member data; for an overlay, emits an event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe member object for profile display.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Removes a member from the channel, then updates Firestore via ChannelService.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe member object to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startPrivateChat\n                        \n                    \n                \n            \n            \n                \nstartPrivateChat(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Begins a private chat with the selected member. In a Material Dialog,\nit closes with data, and in an overlay context, it emits an event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe member object to start a chat with.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChannelMembers\n                        \n                    \n                \n            \n            \n                \nupdateChannelMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list-dialog/member-list-dialog.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Updates the channel's member list in Firestore through the ChannelService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MemberListDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/member-list-dialog/member-list-dialog.component.ts:80\n                        \n                    \n\n            \n                \n                    - Optional data passed in via MAT_DIALOG_DATA, if used.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/member-list-dialog/member-list-dialog.component.ts:79\n                        \n                    \n\n            \n                \n                    - Reference to the Material Dialog, if used.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        unsubscribeAllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/member-list-dialog/member-list-dialog.component.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChannelService } from '../channel.service';\nimport { MessageService } from '../message.service';\n\n\n/**\n * Optional interface if Material Dialog is used and data is passed.\n */\nexport interface MemberListDialogData {\n  channelId?: string;\n  members?: any[];\n}\n\n@Component({\n  selector: 'app-member-list-dialog',\n  standalone: true,\n  imports: [CommonModule, OverlayModule],\n  templateUrl: './member-list-dialog.component.html',\n  styleUrls: ['./member-list-dialog.component.scss']\n})\nexport class MemberListDialogComponent implements OnInit {\n\n  /**\n   * The channel ID if used in an overlay context. If data is passed\n   * via Material Dialog, it may also come from MAT_DIALOG_DATA.\n   */\n  @Input() channelId!: string;\n\n  /**\n   * An array of member objects belonging to the channel.\n   */\n  @Input() members: any[] = [];\n\n  /**\n   * Emitted when closing the overlay (in cdk Overlay context).\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emitted when requesting the addition of new members (desktop overlay).\n   */\n  @Output() openAddMembersOverlay = new EventEmitter();\n\n  /**\n   * Emitted when starting a private chat with a specific member (in cdk overlay).\n   */\n  @Output() openPrivateChat = new EventEmitter();\n\n  /**\n   * Emitted when opening a profile is requested (desktop overlay).\n   */\n  @Output() openProfileRequested = new EventEmitter();\n  private unsubscribeAllUsers?: () => void;\n\n\n  /**\n   * Constructor injecting services and optional references for Material Dialog usage.\n   *\n   * @param {ChannelService} channelService - Service for channel-related operations.\n   * @param {MatDialogRef} dialogRef - Reference to the Material Dialog, if used.\n   * @param {MemberListDialogData} data - Optional data passed in via MAT_DIALOG_DATA, if used.\n   */\n  constructor(\n    private channelService: ChannelService,\n    private messageService: MessageService,  \n    @Optional() public dialogRef?: MatDialogRef,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data?: MemberListDialogData\n  ) {}\n\n  /**\n   * Lifecycle hook that runs after component initialization.\n   * Loads channel ID and members from the injected dialog data if provided.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      if (this.data.channelId) {\n        this.channelId = this.data.channelId;\n      }\n      if (this.data.members) {\n        this.members = this.data.members;\n      }\n    }\n\n    this.unsubscribeAllUsers = this.messageService.onAllUsersChanged(\n      (allUsers) => {\n        // Filtere allUsers auf diejenigen, die in this.members enthalten sind\n        // (falls dein Ziel ist: \"members\" = Channel-Mitglieder + deren Live-Status)\n        this.members = allUsers.filter((user) =>\n          this.members.some((m) => m.uid === user.uid)\n        );\n      }\n    );\n  }\n\n  /**\n   * Removes a member from the channel, then updates Firestore via ChannelService.\n   *\n   * @param {any} member - The member object to remove.\n   */\n  removeMember(member: any): void {\n    this.members = this.members.filter(m => m !== member);\n    this.updateChannelMembers();\n  }\n\n  /**\n   * Updates the channel's member list in Firestore through the ChannelService.\n   */\n  updateChannelMembers(): void {\n    if (!this.channelId) return;\n    this.channelService.setMembers(this.channelId, this.members)\n      .then(() => {\n       \n      })\n      .catch(() => {\n       \n      });\n  }\n\n  /**\n   * Closes either the Material Dialog or emits a close event for cdk Overlay.\n   */\n  onCancel(): void {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    } else {\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Begins a private chat with the selected member. In a Material Dialog,\n   * it closes with data, and in an overlay context, it emits an event.\n   *\n   * @param {any} member - The member object to start a chat with.\n   */\n  startPrivateChat(member: any) {\n    const payload = { id: member.uid, name: member.name };\n    if (this.dialogRef) {\n      this.dialogRef.close({ openChatWith: payload });\n    } else {\n      this.openPrivateChat.emit(payload);\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Opens a profile dialog for the given member. For Material Dialog, closes\n   * with member data; for an overlay, emits an event.\n   *\n   * @param {any} member - The member object for profile display.\n   */\n  openProfileDialog(member: any) {\n    if (this.dialogRef) {\n      this.dialogRef.close({ openProfile: member });\n    } else {\n      this.openProfileRequested.emit(member);\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Requests opening an \"Add Members\" overlay or dialog,\n   * depending on whether we're in a Material Dialog context or an overlay.\n   */\n  openAddMembersOverlayMethod() {\n    if (this.dialogRef) {\n      this.dialogRef.close({ addMembers: true });\n    } else {\n      this.openAddMembersOverlay.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeAllUsers) {\n      this.unsubscribeAllUsers();\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n  \n    \n      Mitglieder\n      \n    \n    \n      \n        \n          \n          \n          \n        \n        {{ member.name }}\n\n      \n      \n        \n          \n        \n        Mitglieder Hinzufügen\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./member-list-dialog.component.scss\n                \n                @import \"./../../styles.scss\";\n\nul {\n  list-style-type: none;\n  padding: 0;\n  gap: 13px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n}\n\nli {\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  gap: 15px;\n  width: fit-content;\n  border-radius: 100px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n\n  .text-truncate {\n    display: inline-block;\n    max-width: 220px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex: 1;\n    min-width: 0;\n  }\n\n  &:hover {\n    background-color: $lightblue;\n    border-radius: 100px;\n  }\n}\n\nspan {\n  font-size: 18px;\n  font-weight: 400;\n  color: black;\n  transition: color 0.3s ease;\n}\n\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 40px;\n  gap: 20px;\n  border-radius: 30px 0px 30px 30px;\n  border: 1px 0px 0px 0px;\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n  height: 411px;\n  overflow-y: overlay;\n  overflow-x: hidden;\n  background-color: white;\n  max-width: 335px;\n}\n\n.container:hover {\n  scrollbar-color: $hoverColor white;\n}\n\n.close-dialog {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  h1 {\n    margin-right: 20px;\n    font-size: 24px;\n    font-weight: 700;\n    flex-grow: 1;\n  }\n\n  img {\n    cursor: pointer;\n    transition: filter 0.3s ease, background-color 0.3s ease;\n    border-radius: 50%;\n    margin-left: auto;\n    &:hover {\n      background-color: $lightblue;\n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n::ng-deep .mat-mdc-dialog-container {\n  border-radius: 30px 0 30px 30px !important;\n  width: unset;\n}\n\n::ng-deep .mdc-dialog__surface {\n  border-radius: 30px 0 30px 30px !important;\n  overflow: hidden;\n}\n\n.member-box {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 0 29px;\n  width: fit-content;\n  border-radius: 100px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n\n  .img-container {\n    width: 32px;\n    height: 32px;\n    background-color: $lightblue;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: background-color 0.3s ease;\n\n    img {\n      width: 24px;\n      height: 24px;\n      transition: filter 0.3s ease, transform 0.3s ease;\n    }\n  }\n\n  h2 {\n    font-size: 18px;\n    font-weight: 400;\n    color: #333;\n    transition: color 0.3s ease;\n  }\n\n  &:hover {\n    background-color: $lightblue;\n    border-radius: 100px;\n\n    h2 {\n      color: $hoverColor;\n    }\n\n    .img-container {\n      background-color: transparent;\n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n.avatar-container {\n  position: relative;\n\n  .status-icon {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid white;\n  }\n}\n\n@media (max-width: 1278px) {\n  .container {\n    height: 371px;\n    overflow-y: overlay;\n    overflow-x: hidden;\n    padding: 20px 16px;\n    max-width: 398px;\n  }\n\n  @media (max-width: 390px) {\n    .close-dialog h1 {\n      font-size: 18px;\n    }\n\n    .close-dialog img {\n      width: 30px;\n    }\n\n    .member-box .img-container {\n      width: 30px;\n    }\n    .member-box h2 {\n      font-size: 16px;\n    }\n\n    .member-box {\n      width: 100%;\n      gap: 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Mitglieder                                                                          {{ member.name }}                                              Mitglieder Hinzufügen            '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberListDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemberListDialogData.html":{"url":"interfaces/MemberListDialogData.html","title":"interface - MemberListDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MemberListDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/member-list-dialog/member-list-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Optional interface if Material Dialog is used and data is passed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channelId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            members\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChannelService } from '../channel.service';\nimport { MessageService } from '../message.service';\n\n\n/**\n * Optional interface if Material Dialog is used and data is passed.\n */\nexport interface MemberListDialogData {\n  channelId?: string;\n  members?: any[];\n}\n\n@Component({\n  selector: 'app-member-list-dialog',\n  standalone: true,\n  imports: [CommonModule, OverlayModule],\n  templateUrl: './member-list-dialog.component.html',\n  styleUrls: ['./member-list-dialog.component.scss']\n})\nexport class MemberListDialogComponent implements OnInit {\n\n  /**\n   * The channel ID if used in an overlay context. If data is passed\n   * via Material Dialog, it may also come from MAT_DIALOG_DATA.\n   */\n  @Input() channelId!: string;\n\n  /**\n   * An array of member objects belonging to the channel.\n   */\n  @Input() members: any[] = [];\n\n  /**\n   * Emitted when closing the overlay (in cdk Overlay context).\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emitted when requesting the addition of new members (desktop overlay).\n   */\n  @Output() openAddMembersOverlay = new EventEmitter();\n\n  /**\n   * Emitted when starting a private chat with a specific member (in cdk overlay).\n   */\n  @Output() openPrivateChat = new EventEmitter();\n\n  /**\n   * Emitted when opening a profile is requested (desktop overlay).\n   */\n  @Output() openProfileRequested = new EventEmitter();\n  private unsubscribeAllUsers?: () => void;\n\n\n  /**\n   * Constructor injecting services and optional references for Material Dialog usage.\n   *\n   * @param {ChannelService} channelService - Service for channel-related operations.\n   * @param {MatDialogRef} dialogRef - Reference to the Material Dialog, if used.\n   * @param {MemberListDialogData} data - Optional data passed in via MAT_DIALOG_DATA, if used.\n   */\n  constructor(\n    private channelService: ChannelService,\n    private messageService: MessageService,  \n    @Optional() public dialogRef?: MatDialogRef,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data?: MemberListDialogData\n  ) {}\n\n  /**\n   * Lifecycle hook that runs after component initialization.\n   * Loads channel ID and members from the injected dialog data if provided.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      if (this.data.channelId) {\n        this.channelId = this.data.channelId;\n      }\n      if (this.data.members) {\n        this.members = this.data.members;\n      }\n    }\n\n    this.unsubscribeAllUsers = this.messageService.onAllUsersChanged(\n      (allUsers) => {\n        // Filtere allUsers auf diejenigen, die in this.members enthalten sind\n        // (falls dein Ziel ist: \"members\" = Channel-Mitglieder + deren Live-Status)\n        this.members = allUsers.filter((user) =>\n          this.members.some((m) => m.uid === user.uid)\n        );\n      }\n    );\n  }\n\n  /**\n   * Removes a member from the channel, then updates Firestore via ChannelService.\n   *\n   * @param {any} member - The member object to remove.\n   */\n  removeMember(member: any): void {\n    this.members = this.members.filter(m => m !== member);\n    this.updateChannelMembers();\n  }\n\n  /**\n   * Updates the channel's member list in Firestore through the ChannelService.\n   */\n  updateChannelMembers(): void {\n    if (!this.channelId) return;\n    this.channelService.setMembers(this.channelId, this.members)\n      .then(() => {\n       \n      })\n      .catch(() => {\n       \n      });\n  }\n\n  /**\n   * Closes either the Material Dialog or emits a close event for cdk Overlay.\n   */\n  onCancel(): void {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    } else {\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Begins a private chat with the selected member. In a Material Dialog,\n   * it closes with data, and in an overlay context, it emits an event.\n   *\n   * @param {any} member - The member object to start a chat with.\n   */\n  startPrivateChat(member: any) {\n    const payload = { id: member.uid, name: member.name };\n    if (this.dialogRef) {\n      this.dialogRef.close({ openChatWith: payload });\n    } else {\n      this.openPrivateChat.emit(payload);\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Opens a profile dialog for the given member. For Material Dialog, closes\n   * with member data; for an overlay, emits an event.\n   *\n   * @param {any} member - The member object for profile display.\n   */\n  openProfileDialog(member: any) {\n    if (this.dialogRef) {\n      this.dialogRef.close({ openProfile: member });\n    } else {\n      this.openProfileRequested.emit(member);\n      this.close.emit();\n    }\n  }\n\n  /**\n   * Requests opening an \"Add Members\" overlay or dialog,\n   * depending on whether we're in a Material Dialog context or an overlay.\n   */\n  openAddMembersOverlayMethod() {\n    if (this.dialogRef) {\n      this.dialogRef.close({ addMembers: true });\n    } else {\n      this.openAddMembersOverlay.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeAllUsers) {\n      this.unsubscribeAllUsers();\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberSectionDialogComponent.html":{"url":"components/MemberSectionDialogComponent.html","title":"component - MemberSectionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberSectionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/member-section-dialog/member-section-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MemberSectionDialogComponent is a dialog that displays\na list of members and allows the user to pick one. Once\nselected, it emits the chosen member and closes the dialog.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-section-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./member-section-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-section-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                members\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                selectMember\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                memberSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/member-section-dialog/member-section-dialog.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor that receives the members array from the dialog data.\n  Reference to the current dialog.\n  Data injected into the dialog, expected to contain members.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                  Reference to the current dialog.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                  Data injected into the dialog, expected to contain members.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        memberSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/member-section-dialog/member-section-dialog.component.ts:30\n                            \n                        \n                \n                    \n                        Emits an event containing the selected member's UID and name.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-section-dialog/member-section-dialog.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Closes the dialog without selecting any member.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMember\n                        \n                    \n                \n            \n            \n                \nselectMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-section-dialog/member-section-dialog.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Selects a member, closing the dialog and emitting memberSelected\nif the member data is valid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe chosen member object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/member-section-dialog/member-section-dialog.component.ts:47\n                        \n                    \n\n            \n                \n                      Data injected into the dialog, expected to contain `members`.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/member-section-dialog/member-section-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                      Reference to the current dialog.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/member-section-dialog/member-section-dialog.component.ts:35\n                        \n                    \n\n            \n                \n                    The list of members provided to the dialog.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * The MemberSectionDialogComponent is a dialog that displays \n * a list of members and allows the user to pick one. Once \n * selected, it emits the chosen member and closes the dialog.\n */\n@Component({\n  selector: 'app-member-section-dialog',\n  standalone: true,\n  templateUrl: './member-section-dialog.component.html',\n  styleUrls: ['./member-section-dialog.component.scss'],\n  imports: [CommonModule, FormsModule]\n})\nexport class MemberSectionDialogComponent {\n  /**\n   * Emits an event containing the selected member's UID and name.\n   */\n  @Output() memberSelected = new EventEmitter();\n\n  /**\n   * The list of members provided to the dialog.\n   */\n  members: any[] = [];\n\n  /**\n   * Constructor that receives the members array from the dialog data.\n   *\n   * @param {MatDialogRef} dialogRef \n   *   Reference to the current dialog.\n   * @param {any} data \n   *   Data injected into the dialog, expected to contain `members`.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.members = data.members || [];\n  }\n\n  /**\n   * Selects a member, closing the dialog and emitting `memberSelected` \n   * if the member data is valid.\n   *\n   * @param {any} member - The chosen member object.\n   */\n  selectMember(member: any): void {\n    if (member && member.uid && member.name) {\n      this.dialogRef.close(); \n      this.memberSelected.emit({ uid: member.uid, name: member.name });\n    } else {\n    }\n  }\n\n  /**\n   * Closes the dialog without selecting any member.\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{ member.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./member-section-dialog.component.scss\n                \n                @import \"./../../styles.scss\";\n\nul {\n  list-style-type: none;\n  padding: 0;\n  gap: 13px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n}\n\nli {\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  gap: 15px;\n  width: fit-content;\n  border-radius: 100px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n\n  &:hover {\n    background-color: $lightblue;\n    border-radius: 100px;\n  }\n}\n\nspan {\n  font-size: 18px;\n  font-weight: 400;\n  color: black;\n  transition: color 0.3s ease;\n}\n\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 40px;\n  gap: 20px;\n  border-radius: 40px 0px 0px 0px;\n  border: 1px 0px 0px 0px;\n  gap: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.avatar-container {\n  position: relative;\n}\n\n::ng-deep .mat-mdc-dialog-container {\n  border-radius: 30px 30px 30px 0px !important;\n}\n\n::ng-deep .mdc-dialog__surface {\n  border-radius: 0px 30px 30px 30px !important;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ member.name }}      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberSectionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channelId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channelName\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            conversationId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expanded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formattedDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isEditing\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isEmojiPickerVisible\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isHighlighted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastReplyTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastResponseTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipientId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipientName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyCount\n                                        \n                                \n                                \n                                        \n                                            senderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAllEmojisList\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDateSeparator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            threadChannelId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            threadId\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         MessageContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conversationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        conversationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     string | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEditing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEditing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEmojiPickerVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEmojiPickerVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isHighlighted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isHighlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastReplyTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastReplyTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastResponseTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastResponseTime:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipientName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipientName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllEmojisList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAllEmojisList:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDateSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDateSeparator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threadChannelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        threadChannelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threadId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        threadId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  id?: string;\n  content: MessageContent;\n  timestamp: any;\n  senderId: string;\n  time: string;\n  date?: string | { seconds: number; nanoseconds: number };\n  recipientId?: string;\n  channelId?: string;\n  conversationId?: string;\n  formattedDate?: string;\n  replyCount?: number;\n  lastResponseTime?: any;\n  channelName?: string;\n  threadChannelId?: string;\n  parentId?: string;\n  isHighlighted?: boolean;\n  isEditing?: boolean;\n  isEmojiPickerVisible?: boolean;\n  showAllEmojisList?: boolean;\n  expanded?: boolean;\n  type?: string;\n  threadId?: string;\n  lastReplyTime?: any;\n  recipientName?: string;\n  showDateSeparator?: boolean; \n}\n\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n  emojis?: Array;\n}\n\n/**\n * FirestoreMessageData defines the structure of a message document in Firestore.\n * Add more properties as needed to reflect your Firestore schema.\n */\nexport interface FirestoreMessageData {\n  content?: {\n    emojis?: Array;\n  };\n  // additional fields go here, e.g. senderId, timestamp, etc.\n}\n\n\n// message.models.ts\nexport interface BroadcastMessageData {\n  broadcastChannels: string[]; \n  senderId: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderName?: string;\n  senderAvatar?: string;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n// message.models.ts\n\nexport interface ChannelMessageData {\n  channelId?: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderId: string;\n  senderName?: string;\n \n\n senderAvatar?: string ;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageContent.html":{"url":"interfaces/MessageContent.html","title":"interface - MessageContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/message.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            emojis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emojis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emojis:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | ArrayBuffer | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | ArrayBuffer | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  id?: string;\n  content: MessageContent;\n  timestamp: any;\n  senderId: string;\n  time: string;\n  date?: string | { seconds: number; nanoseconds: number };\n  recipientId?: string;\n  channelId?: string;\n  conversationId?: string;\n  formattedDate?: string;\n  replyCount?: number;\n  lastResponseTime?: any;\n  channelName?: string;\n  threadChannelId?: string;\n  parentId?: string;\n  isHighlighted?: boolean;\n  isEditing?: boolean;\n  isEmojiPickerVisible?: boolean;\n  showAllEmojisList?: boolean;\n  expanded?: boolean;\n  type?: string;\n  threadId?: string;\n  lastReplyTime?: any;\n  recipientName?: string;\n  showDateSeparator?: boolean; \n}\n\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n  emojis?: Array;\n}\n\n/**\n * FirestoreMessageData defines the structure of a message document in Firestore.\n * Add more properties as needed to reflect your Firestore schema.\n */\nexport interface FirestoreMessageData {\n  content?: {\n    emojis?: Array;\n  };\n  // additional fields go here, e.g. senderId, timestamp, etc.\n}\n\n\n// message.models.ts\nexport interface BroadcastMessageData {\n  broadcastChannels: string[]; \n  senderId: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderName?: string;\n  senderAvatar?: string;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n// message.models.ts\n\nexport interface ChannelMessageData {\n  channelId?: string;\n  date?: string;\n  time?: string;\n  timestamp?: any;\n  senderId: string;\n  senderName?: string;\n \n\n senderAvatar?: string ;\n  content: {\n    text: string;\n    image?: string;\n    emojis?: any[];\n  };\n  messageFormat: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageContent-3.html":{"url":"interfaces/MessageContent-3.html","title":"interface - MessageContent-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search-field/search-field.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Structure of a message's main content, potentially containing text,\nan image, and an array of emojis with usage counts.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | ArrayBuffer | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | ArrayBuffer | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule, formatDate } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Message } from '../message.models';\nimport { MessageService } from '../message.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PickerModule } from '@ctrl/ngx-emoji-mart';\nimport { Router } from '@angular/router';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { BroadcastMessageData } from '../message.models';\n\n/**\n * Structure of a message's main content, potentially containing text,\n * an image, and an array of emojis with usage counts.\n */\nexport interface MessageContent {\n  text?: string;\n  image?: string | ArrayBuffer | null;\n}\n\n/**\n * Structure of an emoji item, with an emoji character and a usage count.\n */\ninterface EmojiItem {\n  emoji: string;\n  count: number;\n}\n\n/**\n * The SearchFieldComponent allows for user search,\n * multi-selection of recipients, and sending messages\n * (including images and emojis) to these recipients.\n */\n@Component({\n  selector: 'app-search-field',\n  standalone: true,\n  imports: [CommonModule, FormsModule, PickerModule, OverlayModule],\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.scss'],\n})\nexport class SearchFieldComponent {\n  /**\n   * Emitted when this search field is closed (e.g., user\n   * has completed or canceled the search).\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emitted when a user is selected, passing that user's info\n   * (e.g., id, name) to the parent.\n   */\n  @Output() memberSelected = new EventEmitter();\n\n  /**\n   * The query text used for searching users.\n   */\n  searchQuery: string = '';\n\n  /**\n   * Holds the users filtered by the search query.\n   */\n  filteredMembers: any[] = [];\n\n  /**\n   * Flag indicating if no results were found for the current query.\n   */\n  noResultsFound: boolean = false;\n\n  /**\n   * A reference to the DOM element containing the message list,\n   * used for auto-scrolling.\n   */\n  @ViewChild('messageList') messageList!: ElementRef;\n\n  /**\n   * The display name of a specific recipient (if used for direct messages).\n   */\n  @Input() recipientName: string = '';\n\n  /**\n   * The unique ID of that recipient (if used for direct messages).\n   */\n  @Input() recipientId: string = '';\n\n  /**\n   * Toggles the visibility of the search field in the UI.\n   */\n  @Input() showSearchField: boolean = false;\n\n  /**\n   * An image URL or data URL representing a selected file to attach to a message.\n   */\n  imageUrl: string | ArrayBuffer | null = null;\n\n  /**\n   * Text for sending as a private or group message.\n   */\n  privateMessage: string = '';\n\n  /**\n   * Stores the current user's info after loading from Firestore.\n   */\n  currentUser: any;\n\n  /**\n   * Array of messages if fetching direct messages. Each item is typed\n   * as a `Message` from message.models.\n   */\n  privateMessages: any[] = [];\n\n  /**\n   * A generated conversation ID (if used for a direct conversation).\n   */\n  conversationId: string | undefined;\n\n  /**\n   * The online/offline status of a direct chat recipient (e.g., 'Aktiv', 'Abwesend').\n   */\n  recipientStatus: string = '';\n\n  /**\n   * The avatar URL of the direct chat recipient.\n   */\n  recipientAvatarUrl: string = '';\n\n  /**\n   * Toggles the global emoji picker for sending messages.\n   */\n  isEmojiPickerVisible: boolean = false;\n\n  /**\n   * Indicates if an image modal is open for viewing a selected image in detail.\n   */\n  isImageModalOpen = false;\n\n  /**\n   * Stores the current date for logic such as \"Heute\" or \"Gestern\".\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * The \"yesterday\" date used for date comparisons.\n   */\n  yesterdayDate: Date = this.getYesterdayDate();\n\n  /**\n   * Tracks if a textarea is expanded because an image is attached.\n   */\n  isTextareaExpanded: boolean = false;\n\n  /**\n   * Lists of emojis frequently used in sent or received messages.\n   */\n  lastUsedEmojisReceived: string[] = [];\n  lastUsedEmojisSent: string[] = [];\n\n  /**\n   * Toggles edit options for a specific message.\n   */\n  showEditOptions: boolean = false;\n\n  /**\n   * Identifies the currently edited message by its ID.\n   */\n  currentMessageId: string | null = null;\n\n  /**\n   * Stores a backup of the original message content if the user starts editing.\n   */\n  originalMessage: any = null;\n\n  /**\n   * Tooltip management for emojis (visibility, position, etc.).\n   */\n  tooltipVisible = false;\n  tooltipPosition = { x: 0, y: 0 };\n  tooltipEmoji = '';\n  tooltipSenderName = '';\n\n  /**\n   * If sending a broadcast message to multiple recipients,\n   * this array tracks which recipients are selected.\n   */\n  selectedRecipients: any[] = [];\n\n  /**\n   * The text typed when sending a broadcast to all selected recipients.\n   */\n  messageToAll: string = 'An: #channel, oder @jemand';\n\n  /**\n   * Toggles an \"@\" mention dropdown.\n   */\n  showAtDropdown: boolean = false;\n\n  /**\n   * Holds all members (e.g., for mention or multi-select).\n   */\n  allMembers: any[] = [];\n\n  /**\n   * Indicates whether the screen is in desktop mode (>= 1278px).\n   */\n  isDesktop = false;\n  placeholderText = '';\n  filteredResults: any[] = [];\n\n  /**\n   * Constructor injecting route info, user/channels, dialog, messageService, and router if needed.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private channelService: ChannelService,\n    private dialog: MatDialog,\n    private messageService: MessageService,\n    private router: Router\n  ) {}\n\n  /**\n   * Lifecycle hook. Loads current user, recipient data, sets desktop mode,\n   * and if needed, fetches messages or emojis for a direct conversation.\n   */\n  async ngOnInit(): Promise {\n    await this.loadCurrentUser();\n    this.loadRecipientData();\n    this.checkDesktopWidth();\n    this.updatePlaceholderText(window.innerWidth);\n    this.currentUser = await this.userService.getCurrentUserData();\n\n    if (this.currentUser && this.recipientId) {\n      this.initializeDirectConversation();\n    }\n  }\n\n  private initializeDirectConversation(): void {\n    this.conversationId = this.messageService.generateConversationId(\n      this.currentUser.id,\n      this.recipientId\n    );\n\n    this.messageService\n      .getMessagesOnce('private', this.conversationId)\n      .then((messages: Message[]) => {\n        this.privateMessages = messages.map((msg) => ({\n          ...msg,\n          content: { ...msg.content, emojis: msg.content?.emojis || [] },\n        }));\n        this.scrollToBottom();\n      })\n      .catch(() => {});\n\n    this.loadLastUsedEmojis();\n  }\n\n  /**\n   * HostListener tracking window resize events to update desktop mode status.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.checkDesktopWidth();\n    this.updatePlaceholderText(event.target.innerWidth);\n  }\n\n  /**\n   * Updates the placeholder text depending on screen width.\n   */\n  private updatePlaceholderText(width: number) {\n    if (width > 1278) {\n      this.placeholderText = 'An: #channel, oder @jemand oder E-Mail Adresse';\n    } else {\n      this.placeholderText = 'An: #channel, oder @jemand';\n    }\n  }\n\n  /**\n   * Checks if the screen width is >= 1278px to set isDesktop to true.\n   */\n  checkDesktopWidth() {\n    this.isDesktop = window.innerWidth >= 1278;\n  }\n\n  /**\n   * Loads the last used emojis from the conversation's recent messages,\n   * storing them in `lastUsedEmojisSent`/`Received`.\n   */\n  private async loadLastUsedEmojis(): Promise {\n    if (!this.conversationId) return;\n\n    try {\n      const messages = await this.messageService.getMessagesOnce(\n        'private',\n        this.conversationId\n      );\n      const lastMessages = messages.slice(-10);\n\n      this.lastUsedEmojisSent = [];\n      this.lastUsedEmojisReceived = [];\n\n      lastMessages.forEach((msg: Message) => {\n        if (msg.content?.emojis) {\n          if (msg.senderId === this.currentUser.id) {\n            this.lastUsedEmojisSent.push(\n              ...msg.content.emojis.map((e) => e.emoji)\n            );\n          } else {\n            this.lastUsedEmojisReceived.push(\n              ...msg.content.emojis.map((e) => e.emoji)\n            );\n          }\n        }\n      });\n\n      this.lastUsedEmojisSent = [...new Set(this.lastUsedEmojisSent)].slice(\n        0,\n        5\n      );\n      this.lastUsedEmojisReceived = [\n        ...new Set(this.lastUsedEmojisReceived),\n      ].slice(0, 5);\n    } catch (error) {}\n  }\n\n  /**\n   * Formats a date string as 'Heute', 'Gestern', or a localized German date.\n   */\n  getFormattedDate(dateString: string): string {\n    if (!dateString) {\n      return 'Ungültiges Datum';\n    }\n\n    const date = this.parseDateString(dateString);\n\n    if (isNaN(date.getTime())) {\n      return 'Ungültiges Datum';\n    }\n\n    if (this.isSameDay(date, new Date())) {\n      return 'Heute';\n    } else if (this.isSameDay(date, this.getYesterdayDate())) {\n      return 'Gestern';\n    }\n\n    const options: Intl.DateTimeFormatOptions = {\n      weekday: 'long',\n      day: '2-digit',\n      month: 'long',\n    };\n    return date.toLocaleDateString('de-DE', options);\n  }\n\n  /**\n   * Parses a date string in the format 'dd.mm.yyyy' or a generic string date.\n   * Returns the corresponding Date object (may be invalid if the parsing fails).\n   */\n  private parseDateString(dateString: string): Date {\n    const parts = dateString.split('.');\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1;\n      const year = parseInt(parts[2], 10);\n      return new Date(year, month, day);\n    }\n    return new Date(dateString);\n  }\n\n  /**\n   * Returns the date object representing \"yesterday\" for date comparison.\n   */\n  private getYesterdayDate(): Date {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return yesterday;\n  }\n\n  /**\n   * Checks if two dates fall on the same calendar day.\n   */\n  private isSameDay(date1: Date, date2: Date): boolean {\n    return (\n      date1.getDate() === date2.getDate() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getFullYear() === date2.getFullYear()\n    );\n  }\n\n  /**\n   * Loads the current user's data from Firestore, storing it in `currentUser`.\n   */\n  async loadCurrentUser(): Promise {\n    return this.userService\n      .getCurrentUserData()\n      .then((user) => {\n        this.currentUser = user;\n      })\n      .catch(() => {});\n  }\n\n  /**\n   * If a `recipientId` is provided, loads that user's data (status, avatar, etc.) for display.\n   */\n  loadRecipientData(): void {\n    if (this.recipientId) {\n      this.userService\n        .getUserById(this.recipientId)\n        .then((userData) => {\n          this.recipientStatus = userData.isOnline ? 'Aktiv' : 'Abwesend';\n          this.recipientAvatarUrl = userData.avatarUrl || '';\n        })\n        .catch(() => {});\n    }\n  }\n\n  /**\n   * Loads private messages once for the generated conversation ID, storing them in `privateMessages`.\n   */\n  loadPrivateMessages(): void {\n    const senderId = this.userService.getCurrentUserId();\n    if (senderId && this.recipientId) {\n      const conversationId = this.messageService.generateConversationId(\n        senderId,\n        this.recipientId\n      );\n      this.messageService\n        .getMessagesOnce('private', conversationId)\n        .then((messages: Message[]) => {\n          this.privateMessages = messages.map((msg: Message) => ({\n            ...msg,\n            timestamp:\n              msg.timestamp instanceof Date ? msg.timestamp : new Date(),\n          }));\n          this.scrollToBottom();\n        })\n        .catch(() => {});\n    } else {\n    }\n  }\n\n  /**\n   * Called when an image is selected from a file input. Reads as data URL and optionally adjusts textarea height.\n   */\n  onImageSelected(event: Event, textArea?: HTMLTextAreaElement): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imageUrl = e.target?.result || null;\n        if (textArea) {\n          this.adjustTextareaHeight(textArea);\n        }\n        this.isTextareaExpanded = true;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  /**\n   * Toggles the global emoji picker for the broadcast message input or other usage.\n   */\n  toggleEmojiPicker(): void {\n    this.isEmojiPickerVisible = !this.isEmojiPickerVisible;\n  }\n\n  /**\n   * Adds a selected emoji from the global picker to `messageToAll`.\n   */\n  addEmoji(event: any): void {\n    if (event?.emoji?.native) {\n      this.messageToAll += event.emoji.native;\n    }\n    this.isEmojiPickerVisible = false;\n  }\n\n  /**\n   * Opens a modal to view the selected image in larger detail.\n   */\n  openImageModal(): void {\n    this.isImageModalOpen = true;\n  }\n\n  /**\n   * Closes the image modal.\n   */\n  closeImageModal(): void {\n    this.isImageModalOpen = false;\n  }\n\n  /**\n   * Closes the profile card or image preview, clearing the selected image and resetting textarea height.\n   */\n  closeProfileCard(textArea: HTMLTextAreaElement): void {\n    this.imageUrl = null;\n    this.resetTextareaHeight(textArea);\n  }\n\n  /**\n   * Increases the textarea's bottom padding if an image is present.\n   */\n  adjustTextareaHeight(textArea: HTMLTextAreaElement): void {\n    if (this.imageUrl) {\n      textArea.style.paddingBottom = '160px';\n    }\n  }\n\n  /**\n   * Resets the bottom padding of the textarea to default.\n   */\n  resetTextareaHeight(textArea: HTMLTextAreaElement): void {\n    textArea.style.paddingBottom = '20px';\n  }\n\n  /**\n   * Handles the Enter key in the broadcast message input. If Shift is not pressed, sends the message.\n   */\n  handleKeyDown(event: KeyboardEvent, textArea: HTMLTextAreaElement): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessageToAll(textArea);\n    }\n  }\n\n  /**\n   * Scrolls the message list to the bottom after a brief delay, ensuring the view is updated first.\n   */\n  private scrollToBottom(): void {\n    setTimeout(() => {\n      if (this.messageList) {\n        this.messageList.nativeElement.scrollTop =\n          this.messageList.nativeElement.scrollHeight;\n      }\n    }, 100);\n  }\n\n  /**\n   * Inserts '@' at the end of messageToAll, potentially used to mention a user\n   * in a broadcast scenario.\n   */\n  addAtSymbolAndOpenDialog(): void {\n    this.messageToAll += '@';\n  }\n\n  /**\n   * Toggles an inline emoji picker for a specific message object, ensuring only one is open at once.\n   */\n  toggleEmojiPickerForMessage(msg: any): void {\n    const isCurrentlyVisible = msg.isEmojiPickerVisible;\n    this.privateMessages.forEach((m) => (m.isEmojiPickerVisible = false));\n    msg.isEmojiPickerVisible = !isCurrentlyVisible;\n  }\n\n  /**\n   * Lifecycle hook that watches for changes to `recipientId`,\n   * reloading data if a new recipient is set.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['recipientId'] && !changes['recipientId'].isFirstChange()) {\n      this.loadRecipientData();\n      this.loadPrivateMessages();\n    }\n  }\n\n  /**\n   * Generates a stable conversation ID by sorting two user IDs alphabetically.\n   */\n  generateConversationId(userId1: string, userId2: string): string {\n    return [userId1, userId2].sort().join('_');\n  }\n\n  /**\n   * Adds an emoji to a given message, updating the local message's emoji array.\n   * (Ohne das Schließen des Pickers und Firestore-Update)\n   */\n  addEmojiToMessage(event: any, msg: any): void {\n    if (!msg.content.emojis) {\n      msg.content.emojis = [];\n    }\n    const newEmoji = event.emoji.native;\n    const existingEmoji = msg.content.emojis.find(\n      (e: any) => e.emoji === newEmoji\n    );\n\n    if (existingEmoji) {\n      existingEmoji.count += 1;\n    } else {\n      msg.content.emojis.push({ emoji: newEmoji, count: 1 });\n    }\n\n    if (msg.senderName === this.currentUser?.name) {\n      if (!this.lastUsedEmojisSent.includes(newEmoji)) {\n        this.lastUsedEmojisSent = [newEmoji, ...this.lastUsedEmojisSent].slice(\n          0,\n          2\n        );\n      }\n    } else {\n      if (!this.lastUsedEmojisReceived.includes(newEmoji)) {\n        this.lastUsedEmojisReceived = [\n          newEmoji,\n          ...this.lastUsedEmojisReceived,\n        ].slice(0, 2);\n      }\n    }\n  }\n\n  /**\n   * Closes the emoji picker for the given message and saves the updated emoji array to Firestore.\n   */\n  closeEmojiPicker(msg: any): void {\n    msg.isEmojiPickerVisible = false;\n\n    this.messageService\n      .updateMessage(msg.id, {\n        'content.emojis': msg.content.emojis,\n      })\n      .then(() => {\n        // console.log entfernt\n      })\n      .catch((error) => console.error('❌ Error adding emoji:', error));\n  }\n\n  /**\n   * Saves an edited message to Firestore, updating the local list afterward.\n   */\n  async saveMessage(msg: any): Promise {\n    if (msg?.isEditing !== undefined) {\n      msg.isEditing = false;\n      const messageId = msg.id;\n      if (messageId) {\n        try {\n          await this.messageService.updateMessage(messageId, {\n            content: msg.content,\n          });\n          this.privateMessages = this.privateMessages.map((m) =>\n            m.id === messageId ? { ...msg, isEditing: false } : m\n          );\n        } catch (err) {}\n      } else {\n      }\n    }\n  }\n\n  /**\n   * Initializes a conversation by loading the last emojis and messages for a user/recipient combination.\n   */\n  async initializeConversation(): Promise {\n    if (!this.currentUser || !this.recipientId) {\n      return;\n    }\n\n    const conversationId = this.messageService.generateConversationId(\n      this.currentUser.id,\n      this.recipientId\n    );\n\n    await this.loadLastUsedEmojisForConversation(conversationId);\n    this.loadPrivateMessagesForConversation(conversationId);\n  }\n\n  /**\n   * Loads up to the last 10 messages of the conversation, extracting emojis\n   * to update 'lastUsedEmojisSent' / 'lastUsedEmojisReceived' for the current user.\n   */\n  private async loadLastUsedEmojisForConversation(\n    conversationId: string\n  ): Promise {\n    try {\n      const lastMessages = await this.fetchLastTenMessages(conversationId);\n\n      this.processEmojisFromMessages(lastMessages);\n\n      this.limitTopEmojis();\n    } catch (error: any) {\n      console.error('❌ Error loading last emojis:', error);\n    }\n  }\n\n  /**\n   * Fetches all messages and returns only the last 10 of them.\n   */\n  private async fetchLastTenMessages(\n    conversationId: string\n  ): Promise {\n    const messages: Message[] = await this.messageService.getMessagesOnce(\n      'private',\n      conversationId\n    );\n    return messages.slice(-10);\n  }\n\n  /**\n   * Pushes emojis from each message into either lastUsedEmojisSent or lastUsedEmojisReceived,\n   * depending on who sent the message.\n   */\n  private processEmojisFromMessages(lastMessages: Message[]): void {\n    this.lastUsedEmojisSent = [];\n    this.lastUsedEmojisReceived = [];\n\n    lastMessages.forEach((msg: Message) => {\n      if (msg.content?.emojis) {\n        if (msg.senderId === this.currentUser.id) {\n          this.lastUsedEmojisSent.push(\n            ...msg.content.emojis.map((e) => e.emoji)\n          );\n        } else {\n          this.lastUsedEmojisReceived.push(\n            ...msg.content.emojis.map((e) => e.emoji)\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Keeps only up to the first 5 unique emojis in both\n   * lastUsedEmojisSent and lastUsedEmojisReceived.\n   */\n  private limitTopEmojis(): void {\n    this.lastUsedEmojisSent = [...new Set(this.lastUsedEmojisSent)].slice(0, 5);\n    this.lastUsedEmojisReceived = [\n      ...new Set(this.lastUsedEmojisReceived),\n    ].slice(0, 5);\n  }\n\n  /**\n   * Loads all messages for the conversation, normalizing the 'emojis' array,\n   * then scrollt zum Ende der Liste.\n   */\n  private loadPrivateMessagesForConversation(conversationId: string): void {\n    this.messageService\n      .getMessagesOnce('private', conversationId)\n      .then((messages: Message[]) => {\n        this.privateMessages = messages.map((msg: Message) => ({\n          ...msg,\n          content: { ...msg.content, emojis: msg.content?.emojis || [] },\n        }));\n        this.scrollToBottom();\n      })\n      .catch((error: any) => {\n        console.error('❌ Error retrieving private messages:', error);\n      });\n  }\n\n  /**\n   * Toggles the edit options for a specific message based on its ID.\n   */\n  toggleEditOptions(msgId: string): void {\n    if (this.currentMessageId === msgId && this.showEditOptions) {\n      this.showEditOptions = false;\n      this.currentMessageId = null;\n    } else {\n      this.showEditOptions = true;\n      this.currentMessageId = msgId;\n    }\n  }\n\n  /**\n   * Marks a message as editing mode, storing its original for revert if canceled.\n   */\n  startEditing(msg: any): void {\n    msg.isEditing = true;\n    this.originalMessage = { ...msg };\n    this.showEditOptions = false;\n  }\n\n  /**\n   * Alternative approach to open editing for a message, also saving the original content.\n   */\n  toggleEditMessage(msg: any): void {\n    msg.isEditing = true;\n    this.originalMessage = { ...msg };\n  }\n\n  /**\n   * Cancels editing of a message, reverting to the original text if available.\n   */\n  cancelEditing(msg: any): void {\n    msg.isEditing = false;\n    if (this.originalMessage) {\n      msg.content = { ...this.originalMessage.content };\n      this.originalMessage = null;\n    }\n    this.showEditOptions = false;\n  }\n\n  /**\n   * Displays a tooltip above an emoji, showing the emoji char and the sender's name.\n   */\n  showTooltip(event: MouseEvent, emoji: string, senderName: string): void {\n    this.tooltipVisible = true;\n    this.tooltipEmoji = emoji;\n    this.tooltipSenderName = senderName;\n    this.tooltipPosition = {\n      x: event.clientX,\n      y: event.clientY - 40,\n    };\n  }\n\n  /**\n   * Hides the currently shown tooltip.\n   */\n  hideTooltip(): void {\n    this.tooltipVisible = false;\n  }\n\n  /**\n   * Selects a user from the search results, emits an event to the parent, then closes the search.\n   */\n  selectMember(member: any): void {\n    this.memberSelected.emit(member);\n    this.closeSearch();\n  }\n\n  /**\n   * Closes the search field, emitting an event to the parent.\n   */\n  closeSearch(): void {\n    this.close.emit();\n  }\n\n  /**\n   * Triggers whenever the user types in the search field. Decides if it's a user or channel query.\n   */\n  onSearchInput(): void {\n    const trimmed = this.searchQuery.trim();\n    if (!trimmed) {\n      return this.handleEmptySearch();\n    }\n    const firstChar = trimmed.charAt(0);\n    const rest = trimmed.substring(1).trim();\n\n    if (firstChar === '@') {\n      this.handleUserSearch(rest);\n    } else if (firstChar === '#') {\n      this.handleChannelSearch(rest);\n    } else {\n      this.handleNoPrefix();\n    }\n  }\n\n  /** Handles an empty search input by resetting any filtered results. */\n  private handleEmptySearch(): void {\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /** Handles the case when the input doesn't start with '@' or '#'. */\n  private handleNoPrefix(): void {\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /** Searches for users based on the given query (without the '@' prefix). */\n  private handleUserSearch(query: string): void {\n    this.userService\n      .getUsersByFirstLetter(query)\n      .then((users) => this.updateUserResults(users))\n      .catch(() => this.resetResultsOnError());\n  }\n\n  /** Updates filtered results with mapped user objects. */\n  private updateUserResults(users: any[]): void {\n    const mapped = users.map((u: any) => ({\n      type: 'user',\n      id: u.id || u.uid,\n      email: u.email,\n      name: u.name,\n      avatarUrl: u.avatarUrl || 'assets/img/avatar.png',\n    }));\n    this.filteredResults = mapped;\n    this.noResultsFound = mapped.length === 0;\n  }\n\n  /** Resets filtered results in case of an error during user/channel search. */\n  private resetResultsOnError(): void {\n    this.filteredResults = [];\n    this.noResultsFound = true;\n  }\n\n  /** Searches for channels based on the given query (without the '#' prefix). */\n  private handleChannelSearch(query: string): void {\n    this.channelService\n      .getChannelsByName(query)\n      .then((channels) => this.updateChannelResults(channels))\n      .catch(() => this.resetResultsOnError());\n  }\n\n  /** Updates filtered results with mapped channel objects. */\n  private updateChannelResults(channels: any[]): void {\n    const mapped = channels.map((ch: any) => ({\n      type: 'channel',\n      id: ch.id,\n      name: ch.name,\n    }));\n    this.filteredResults = mapped;\n    this.noResultsFound = mapped.length === 0;\n  }\n\n  /**\n   * Handles a click on one of the filtered results. If it's a user or channel,\n   * the item is added to the recipients. Then all search data is cleared.\n   */\n  onSelectResult(item: any): void {\n    if (item.type === 'user' || item.type === 'channel') {\n      this.addRecipient(item);\n    }\n    this.clearSearchData();\n  }\n\n  /** Resets the search query, filtered results, and the no-results state. */\n  private clearSearchData(): void {\n    this.searchQuery = '';\n    this.filteredResults = [];\n    this.noResultsFound = false;\n  }\n\n  /**\n   * Checks if sending should be canceled (no text/image or missing user).\n   */\n  private shouldCancelBroadcast(): boolean {\n    if (!this.messageToAll.trim() && !this.imageUrl) return true;\n    if (!this.currentUser?.id) return true;\n    return false;\n  }\n\n  /**\n   * Sends a message to a single recipient (user or channel).\n   */\n  private async sendToSingleRecipient(recipient: any): Promise {\n    if (recipient.type === 'user') {\n      const convId = this.messageService.generateConversationId(\n        this.currentUser.id,\n        recipient.id\n      );\n      const msgData = this.createBroadcastMessageData(convId, recipient.id);\n      await this.messageService.sendMessage(msgData);\n    }\n  }\n\n  /**\n   * Creates the data for private messages, including timestamps, text, and image.\n   */\n  private createBroadcastMessageData(\n    conversationId: string,\n    recipientId: string\n  ) {\n    return {\n      type: 'private' as const,\n      conversationId,\n      content: {\n        text: this.messageToAll.trim(),\n        image: typeof this.imageUrl === 'string' ? this.imageUrl : '',\n        emojis: [],\n      },\n      date: formatDate(new Date(), 'dd.MM.yyyy', 'en'),\n      timestamp: new Date(),\n      time: new Date().toLocaleTimeString(),\n      senderId: this.currentUser.id,\n      senderName: this.currentUser.name || 'Unbekannt',\n      senderAvatar: this.currentUser.avatarUrl || '',\n      recipientId,\n    };\n  }\n\n  /**\n   * Resets the message, image, emoji picker, and scroll state after broadcast.\n   */\n  private finishBroadcast(textArea: HTMLTextAreaElement): void {\n    this.messageToAll = '';\n    this.imageUrl = null;\n    if (textArea) this.resetTextareaHeight(textArea);\n    this.isEmojiPickerVisible = false;\n    this.scrollToBottom();\n  }\n\n  private clearBroadcastInput(textArea: HTMLTextAreaElement): void {\n    this.messageToAll = '';\n    this.imageUrl = null;\n    if (textArea) this.resetTextareaHeight(textArea);\n\n    this.isEmojiPickerVisible = false;\n    this.scrollToBottom();\n  }\n\n  /**\n   * Adds a recipient to the array of selected recipients.\n   */\n  addRecipient(member: any) {\n    const alreadySelected = this.selectedRecipients.some(\n      (m) => m.id === member.id\n    );\n    if (!alreadySelected) {\n      this.selectedRecipients.push(member);\n\n      // Optionally add a system message about it:\n    }\n\n    this.searchQuery = '';\n    this.filteredMembers = [];\n  }\n\n  /**\n   * Removes a previously added recipient from the selectedRecipients array.\n   */\n  removeRecipient(member: any) {\n    const index = this.selectedRecipients.findIndex((m) => m.id === member.id);\n    if (index > -1) {\n      this.selectedRecipients.splice(index, 1);\n    }\n  }\n\n  /**\n   * (Optional) Adds a system message to the local privateMessages array or systemMessages array.\n   */\n  addSystemMessage(text: string) {\n    const sysMsg = {\n      type: 'system',\n      content: { text },\n      timestamp: new Date(),\n    };\n    this.privateMessages.push(sysMsg);\n  }\n\n  /**\n   * Toggles the \"@\" mention dropdown, loading all members if opening for the first time.\n   */\n  toggleAtDropdown(): void {\n    if (!this.showAtDropdown) {\n      this.loadAllUsers();\n    }\n    this.showAtDropdown = !this.showAtDropdown;\n  }\n\n  /**\n   * Loads all users from Firestore for mention or multi-recipient selection,\n   * storing them in `allMembers`.\n   */\n  loadAllUsers(): void {\n    this.userService\n      .getAllUsers()\n      .then((users) => {\n        this.allMembers = users.map((u) => ({\n          id: u.id,\n          name: u.name,\n          avatarUrl: u.avatarUrl || 'assets/img/avatar.png',\n          isOnline: u.isOnline ?? false,\n        }));\n      })\n      .catch((err) => console.error('Error loading all users:', err));\n  }\n\n  /**\n   * On selecting a user from the \"@\" mention dropdown, inserts their name\n   * into the messageToAll string and closes the dropdown.\n   */\n  addAtSymbolFor(member: any): void {\n    this.messageToAll += '@' + member.name + ' ';\n    this.showAtDropdown = false;\n  }\n\n  /**\n   * Sends private messages to all user recipients and a single broadcast\n   * message to all channel recipients.\n   * @param textArea - The textarea reference for resetting UI state\n   */\n  async sendMessageToAll(textArea: HTMLTextAreaElement): Promise {\n    if (this.shouldCancelBroadcast()) return;\n    const channels = this.selectedRecipients.filter(\n      (r) => r.type === 'channel'\n    );\n    const users = this.selectedRecipients.filter((r) => r.type === 'user');\n    await this.sendToAllUsers(users);\n    if (channels.length) {\n      const broadcastData = this.buildBroadcastData(channels);\n      await this.messageService.sendBroadcastMessage(broadcastData);\n    }\n    this.finishBroadcast(textArea);\n    this.clearBroadcastInput(textArea);\n  }\n\n  /**\n   * Sends a private message (type='private') to each user in the array.\n   * @param users - The array of user recipients\n   */\n  private async sendToAllUsers(users: any[]): Promise {\n    for (const u of users) {\n      await this.sendToSingleRecipient(u);\n    }\n  }\n\n  /**\n   * Builds a broadcast message data object for the given channel recipients.\n   * @param channels - The array of channel recipients\n   * @returns A BroadcastMessageData object\n   */\n  private buildBroadcastData(channels: any[]): BroadcastMessageData {\n    const broadcastChannels = channels.map((ch) => ch.id);\n    return {\n      broadcastChannels,\n      senderId: this.currentUser.id,\n      senderName: this.currentUser.name || 'Unbekannt',\n      date: formatDate(new Date(), 'dd.MM.yyyy', 'en'),\n      time: new Date().toLocaleTimeString(),\n      timestamp: new Date(),\n      content: {\n        text: this.messageToAll.trim(),\n        image: typeof this.imageUrl === 'string' ? this.imageUrl : '',\n        emojis: [],\n      },\n      messageFormat: 'text',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewPasswortComponent.html":{"url":"components/NewPasswortComponent.html","title":"component - NewPasswortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewPasswortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/new-passwort/new-passwort.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-passwort\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                HeaderComponent\n                                FooterComponent\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./new-passwort.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-passwort.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                newPasswordForm\n                            \n                            \n                                    Private\n                                oobCode\n                            \n                            \n                                submitted\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                passwordsMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fb: FormBuilder, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/new-passwort/new-passwort.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFirebase Auth instance.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUtility for creating and managing form controls.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to read the query parameters (oobCode).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/new-passwort/new-passwort.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Retrieves a user-friendly error message based on Firebase's error codes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object caught during password reset.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nA descriptive error message for display.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/new-passwort/new-passwort.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component by subscribing\nto query parameters and form value changes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/new-passwort/new-passwort.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Called when the user submits the form. Validates password\nmatch and uses Firebase Auth to confirm the password reset\nif valid.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatch\n                        \n                    \n                \n            \n            \n                \npasswordsMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/new-passwort/new-passwort.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Checks if newPassword and confirmPassword fields contain the same value.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if both fields match; false otherwise.\n\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/new-passwort/new-passwort.component.ts:41\n                        \n                    \n\n            \n                \n                    Displays any error message encountered during the password reset process.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/new-passwort/new-passwort.component.ts:36\n                        \n                    \n\n            \n                \n                    A reactive form group containing newPassword and confirmPassword fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/new-passwort/new-passwort.component.ts:51\n                        \n                    \n\n            \n                \n                    The out-of-band code (oobCode) passed through query parameters for password reset.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/new-passwort/new-passwort.component.ts:56\n                        \n                    \n\n            \n                \n                    Indicates whether the form has been submitted (used to manage error resetting).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/new-passwort/new-passwort.component.ts:46\n                        \n                    \n\n            \n                \n                    Displays a success message once the password is successfully reset.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Auth, confirmPasswordReset } from '@angular/fire/auth';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-new-passwort',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HeaderComponent,\n    FooterComponent,\n    RouterModule\n  ],\n  templateUrl: './new-passwort.component.html',\n  styleUrls: ['./new-passwort.component.scss']\n})\nexport class NewPasswortComponent implements OnInit {\n  /**\n   * A reactive form group containing newPassword and confirmPassword fields.\n   */\n  newPasswordForm: FormGroup;\n\n  /**\n   * Displays any error message encountered during the password reset process.\n   */\n  errorMessage: string = '';\n\n  /**\n   * Displays a success message once the password is successfully reset.\n   */\n  successMessage: string = '';\n\n  /**\n   * The out-of-band code (oobCode) passed through query parameters for password reset.\n   */\n  private oobCode: string | null = null;\n\n  /**\n   * Indicates whether the form has been submitted (used to manage error resetting).\n   */\n  submitted: boolean = false;\n\n  /**\n   * @param {Auth} auth - Firebase Auth instance.\n   * @param {FormBuilder} fb - Utility for creating and managing form controls.\n   * @param {Router} router - The Angular router for navigation.\n   * @param {ActivatedRoute} route - Used to read the query parameters (oobCode).\n   */\n  constructor(\n    private auth: Auth,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.newPasswordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  /**\n   * Lifecycle hook that initializes the component by subscribing \n   * to query parameters and form value changes.\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.oobCode = params['oobCode'] || null;\n    });\n\n    this.newPasswordForm.valueChanges.subscribe(() => {\n      if (this.submitted) {\n        this.errorMessage = '';\n      }\n    });\n  }\n\n  /**\n   * Called when the user submits the form. Validates password \n   * match and uses Firebase Auth to confirm the password reset \n   * if valid.\n   */\n  async onSubmit() {\n    this.submitted = true;\n\n    if (!this.passwordsMatch()) {\n      this.errorMessage = 'Die Passwörter stimmen nicht überein.';\n      return;\n    }\n\n    if (this.newPasswordForm.valid && this.oobCode) {\n      const newPassword = this.newPasswordForm.value.newPassword;\n\n      try {\n        await confirmPasswordReset(this.auth, this.oobCode, newPassword);\n        this.successMessage = 'Ihr Passwort wurde zurückgesetzt.';\n        this.errorMessage = '';\n        this.newPasswordForm.reset();\n        this.submitted = false;\n\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 3000);\n      } catch (error: any) {\n        this.successMessage = '';\n        this.errorMessage = this.getErrorMessage(error);\n        this.newPasswordForm.reset();\n      }\n    }\n  }\n\n  /**\n   * Checks if newPassword and confirmPassword fields contain the same value.\n   *\n   * @returns {boolean} - True if both fields match; false otherwise.\n   */\n  passwordsMatch(): boolean {\n    const password = this.newPasswordForm.get('newPassword')?.value;\n    const confirmPassword = this.newPasswordForm.get('confirmPassword')?.value;\n    return password === confirmPassword;\n  }\n\n  /**\n   * Retrieves a user-friendly error message based on Firebase's error codes.\n   *\n   * @param {any} error - The error object caught during password reset.\n   * @returns {string} - A descriptive error message for display.\n   */\n  getErrorMessage(error: any): string {\n    switch (error.code) {\n      case 'auth/invalid-action-code':\n        return 'Der Link ist ungültig oder abgelaufen.';\n      case 'auth/expired-action-code':\n        return 'Der Link ist abgelaufen.';\n      default:\n        return 'Ein unbekannter Fehler ist aufgetreten.';\n    }\n  }\n}\n\n\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            Passwort zurücksetzen\n            \n              \n                \n              \n            \n          \n        \n\n        \n          \n            \n          \n\n          \n            \n          \n\n          \n            {{ errorMessage }}\n          \n\n          \n            {{ errorMessage }}\n          \n\n          \n            \n              Passwort ändern\n            \n          \n        \n      \n    \n    \n      \n      \n        {{ successMessage }}\n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./new-passwort.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.container {\n  @include dFlex(center, center, null);\n  width: 100%;\n  background-color: $lightblue;\n  flex-direction: column;\n  flex: 1;\n  padding: 2rem;\n  box-sizing: border-box;\n}\n\n.login-container {\n  text-align: center;\n  background-color: white;\n  border-radius: 30px;\n  box-shadow: 0px 2px 10px 0px #00000014;\n  max-width: 692px;\n  width: 100%;\n  position: relative;\n\n  .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 40px 40px;\n\n    .box {\n      @include dFlex(null, null, 20px);\n      flex-direction: column;\n      max-width: 512px;\n      width: 100%;\n    }\n\n    .konto-container {\n      @include dFlex(null, center, null);\n      flex-direction: row-reverse;\n    }\n\n    .image-container {\n      position: absolute;\n      top: 45px;\n      left: 32px;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      transition: background-color 0.3s;\n      overflow: hidden;\n      z-index: 1;\n      align-content: center;\n\n      &:hover {\n        filter: brightness(100%);\n        background-color: $lightblue;\n      }\n\n      img {\n        object-fit: cover;\n        border-radius: 50%;\n        transition: transform 0.3s;\n        cursor: pointer;\n\n        &:hover {\n          filter: brightness(0) saturate(100%) invert(35%) sepia(62%)\n            saturate(2733%) hue-rotate(225deg) brightness(93%) contrast(104%);\n        }\n      }\n    }\n\n    h2 {\n      color: $button-blue;\n      font-size: 46px;\n      font-weight: 700;\n      margin: 0;\n      flex-grow: 1;\n      text-align: center;\n      max-width: 491px;\n      width: 100%;\n      line-height: 55.2px;\n    }\n\n    p {\n      color: black;\n      font-size: 20px;\n      font-weight: 400;\n      margin: 0;\n    }\n\n    a {\n      color: $middleblue;\n      font-size: 18px;\n      font-weight: 400;\n      text-decoration: none;\n      transition: background-color 0.3s, border-radius 0.3s, padding 0.3s;\n    }\n\n    .button-container {\n      @include dFlex(flex-end, null, null);\n      max-width: 500px;\n      width: 100%;\n\n      .error-message p {\n        color: red !important;\n        font-weight: bold;\n        width: 70%;\n      }\n\n      .success-message p {\n        color: green;\n        font-weight: bold;\n      }\n    }\n\n    form {\n      max-width: 500px;\n      width: 100%;\n\n      input {\n        background: $lightblue;\n        border-radius: 100px;\n        color: #686868;\n        font-size: 18px;\n        font-weight: 500;\n        height: 60px;\n        width: 100%;\n        border: 1px solid transparent;\n        cursor: pointer;\n        box-sizing: border-box;\n        max-width: 500px;\n        padding: 18px 40px;\n\n        &:hover {\n          border-color: #686868;\n          transition: border-color 0.3s;\n        }\n\n        &:focus,\n        &:focus-within {\n          outline: none;\n          border-color: $button-blue;\n        }\n\n        &:not(:focus) {\n          &:has(+ input:focus) {\n            border-color: blue;\n          }\n        }\n      }\n\n      .error-message {\n        font-size: 14px;\n        color: #ed1e79;\n        font-weight: 400;\n        text-align: left;\n        text-align: center;\n        width: 100%;\n        max-width: 320px;\n        align-items: flex-end;\n        display: flex;\n        padding-left:50px;\n      }\n\n      .input-container {\n        margin-top: 40px;\n      }\n    }\n  }\n}\n\n.button-anmelden {\n  width: 188px;\n  font-size: 16px;\n  margin-top: 40px;\n}\n\n.registration-ok {\n  gap: 28px;\n}\n\n@media (max-width: 1278px) {\n   .container{\n      padding:8px 0 0 0;\n    }\n}\n\n@media (max-width: 780px) {\n  .login-container .login .image-container {\n    width: unset;\n  }\n\n  .box {\n    @include dFlex(null, null, 10px);\n    flex-direction: column;\n    max-width: 345px;\n    width: 100px;\n  }\n\n  .login-container .login .image-container {\n    left: 22px;\n  }\n\n  .login-container {\n    width: unset;\n  }\n\n  .container {\n    box-sizing: border-box;\n  }\n\n  .login-container .login p {\n    margin: 0 auto;\n    padding: unset;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    max-width: 320px;\n  }\n\n  .login-container .login form .error-message {\n    font-size: 11px;\n  }\n\n  .login-container .login form .input-container input {\n    font-size: 14px;\n  }\n\n  .login-container .login form .input-container {\n    margin-top: 20px;\n  }\n\n  .button-container {\n    gap: 30px;\n  }\n\n  .login-container .login .box {\n    gap: 20px;\n    max-width: 346px;\n  }\n\n  .login-container .login form {\n    width: 100%;\n    max-width: 320px;\n  }\n\n  .login-container .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .login-container .login h2 {\n    line-height: 35.2px;\n  }\n\n  .login-container .login h2 {\n    font-size: 36px;\n  }\n}\n\n@media (max-width: 780px) {\n  .button-anmelden {\n    margin-top: 20px;\n  }\n}\n\n@media (max-width: 520px) {\n  .login-container .login .image-container {\n    top: unset;\n  }\n\n  .registration-ok {\n    padding: unset;\n    gap: unset;\n    img {\n      padding: 10px;\n    }\n  }\n\n  .login-container .login h2 {\n    font-size: 30px;\n    width: 100%;\n    max-width: 300px;\n    line-height: 35.2px;\n  }\n\n  .login-container .login .box {\n    gap: 10px;\n  }\n\n  .login-container .login .image-container {\n    height: 30px;\n  }\n\n  .login-container .login .konto-container {\n    flex-direction: column;\n  }\n\n  .login-container .login p {\n    width: 300px;\n    justify-content: center;\n  }\n\n  .login-container .login .button-container {\n    gap: 10px;\n  }\n\n  .login-container .login {\n    padding: unset;\n  }\n\n  .login-container {\n    padding: 20px;\n  }\n\n  .login-container .login form .input-container input {\n    height: 40px;\n  }\n\n  .login-container .login form {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 390px) {\n  .login-container .login {\n    width: 260px;\n  }\n\n  .login-container .login p {\n    width: 260px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Passwort zurücksetzen                                                                                                                                                                                    {{ errorMessage }}                                {{ errorMessage }}                                              Passwort ändern                                                                {{ successMessage }}              '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewPasswortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswortResetComponent.html":{"url":"components/PasswortResetComponent.html","title":"component - PasswortResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswortResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/passwort-reset/passwort-reset.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-passwort-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                HeaderComponent\n                                FooterComponent\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./passwort-reset.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./passwort-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailPattern\n                            \n                            \n                                errorMessage\n                            \n                            \n                                filledStates\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmailExists\n                            \n                            \n                                emailValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, auth: Auth, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFirestore service for database checks.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFirebase Auth service for password reset.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUtility for constructing the reactive form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Checks Firestore to see if the given email exists in the 'users' collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nTrue if email is found, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Validates an email string using a regex pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \nError object if invalid, or null if valid.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Translates Firebase error codes into user-friendly messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe caught error object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nA string describing the error.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that currently has no additional logic.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Marks the specified form field as filled or unfilled on blur,\nbased on whether it has a value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocus\n                        \n                    \n                \n            \n            \n                \nonFocus(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Marks the specified form field as filled and clears error messages if focusing on email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Submits the form, checks if email exists, and if valid,\nsends a reset email. Displays success or error messages as needed,\nand navigates to '/new-passwort' after a short delay.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(email: string, actionCodeSettings: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/passwort-reset/passwort-reset.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Sends a password reset email using Firebase Auth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's email for reset.\n\n\n                                            \n                                        \n                                        \n                                                actionCodeSettings\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional settings for reset links.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailPattern\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:69\n                        \n                    \n\n            \n                \n                    A regex pattern for validating emails.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:54\n                        \n                    \n\n            \n                \n                    Holds any error message that occurs during the reset process.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filledStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:64\n                        \n                    \n\n            \n                \n                    Tracks which fields are filled for styling purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSmallScreen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : window.innerWidth \n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:74\n                        \n                    \n\n            \n                \n                    Boolean to determine if the screen width is below 780px (mobile styling).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:49\n                        \n                    \n\n            \n                \n                    The reactive form containing the email field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/passwort-reset/passwort-reset.component.ts:59\n                        \n                    \n\n            \n                \n                    Holds a success message once the reset email is sent.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ReactiveFormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n  AbstractControl,\n  ValidationErrors\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Auth, sendPasswordResetEmail } from '@angular/fire/auth';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { RouterModule } from '@angular/router';\nimport {\n  Firestore,\n  query,\n  where,\n  getDocs,\n  collection\n} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-passwort-reset',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HeaderComponent,\n    FooterComponent,\n    RouterModule\n  ],\n  templateUrl: './passwort-reset.component.html',\n  styleUrls: ['./passwort-reset.component.scss']\n})\nexport class PasswortResetComponent implements OnInit {\n  /**\n   * The reactive form containing the email field.\n   */\n  resetPasswordForm: FormGroup;\n\n  /**\n   * Holds any error message that occurs during the reset process.\n   */\n  errorMessage: string = '';\n\n  /**\n   * Holds a success message once the reset email is sent.\n   */\n  successMessage: string = '';\n\n  /**\n   * Tracks which fields are filled for styling purposes.\n   */\n  filledStates: { [key: string]: boolean } = {};\n\n  /**\n   * A regex pattern for validating emails.\n   */\n  emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  /**\n   * Boolean to determine if the screen width is below 780px (mobile styling).\n   */\n  isSmallScreen: boolean = window.innerWidth } - True if email is found, otherwise false.\n   */\n  async checkEmailExists(email: string): Promise {\n    const usersCollection = collection(this.firestore, 'users');\n    const q = query(usersCollection, where('email', '==', email));\n    const querySnapshot = await getDocs(q);\n\n    return !querySnapshot.empty;\n  }\n\n  /**\n   * Marks the specified form field as filled and clears error messages if focusing on email.\n   *\n   * @param {string} field - The name of the form field.\n   */\n  onFocus(field: string) {\n    this.filledStates[field + 'Filled'] = true;\n\n    if (field === 'email') {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }\n  }\n\n  /**\n   * Marks the specified form field as filled or unfilled on blur,\n   * based on whether it has a value.\n   *\n   * @param {string} field - The name of the form field.\n   */\n  onBlur(field: string) {\n    this.filledStates[field + 'Filled'] = Boolean(\n      this.resetPasswordForm.get(field)?.value\n    );\n  }\n\n  /**\n   * Sends a password reset email using Firebase Auth.\n   *\n   * @param {string} email - The user's email for reset.\n   * @param {any} actionCodeSettings - Additional settings for reset links.\n   */\n \n  async resetPassword(email: string, actionCodeSettings: any): Promise {\n    try {\n      await sendPasswordResetEmail(this.auth, email, actionCodeSettings);\n    } catch (error: any) {\n      throw new Error(this.getErrorMessage(error));\n    }\n  }\n  \n  /**\n   * Submits the form, checks if email exists, and if valid,\n   * sends a reset email. Displays success or error messages as needed,\n   * and navigates to '/new-passwort' after a short delay.\n   */\n  async onSubmit() {\n    if (this.resetPasswordForm.valid) {\n      const email = this.resetPasswordForm.value.email;\n\n      const emailExists = await this.checkEmailExists(email);\n      if (!emailExists) {\n        this.errorMessage = 'Diese E-Mail-Adresse ist nicht registriert.';\n        return;\n      }\n\n      const actionCodeSettings = {\n        url: 'http://localhost:4200/new-passwort',\n        handleCodeInApp: true\n      };\n\n      try {\n        await this.resetPassword(email, actionCodeSettings);\n        this.successMessage = 'E-Mail gesendet';\n        this.errorMessage = '';\n        setTimeout(() => {\n          this.successMessage = '';\n          this.router.navigate(['/new-passwort']);\n        }, 3000);\n      } catch (error: any) {\n        this.successMessage = '';\n        this.errorMessage = error.message;\n      }\n    }\n  }\n\n  /**\n   * Translates Firebase error codes into user-friendly messages.\n   *\n   * @param {any} error - The caught error object.\n   * @returns {string} - A string describing the error.\n   */\n \n  getErrorMessage(error: any): string {\n    switch (error.code) {\n      case 'auth/invalid-email':\n        return 'Die angegebene E-Mail-Adresse ist ungültig.';\n      case 'auth/user-not-found':\n        return 'Es gibt keinen Benutzer mit dieser E-Mail-Adresse.';\n      case 'auth/too-many-requests':\n        return 'Zu viele Anfragen in kurzer Zeit. Bitte versuche es später erneut.';\n      default:\n        return 'Ein unbekannter Fehler ist aufgetreten.';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            Passwort zurücksetzen\n            \n              \n                \n              \n            \n          \n          Bitte geben Sie Ihre E-Mail-Adresse ein.\n        \n\n        \n          \n            \n\n            \n          \n          \n            \n              {{ errorMessage }}\n            \n          \n          \n            \n              *Bitte füllen Sie das E-Mail-Feld aus.\n            \n            \n              Diese E-Mail-Adresse ist leider ungültig.\n            \n          \n          \n            \n              Wir senden Ihnen eine E-Mail, über die Sie Ihre Passwort ändern\n              können.\n            \n          \n\n          \n            \n              E-Mail senden\n            \n          \n        \n      \n    \n    \n      \n      \n        {{ successMessage }}\n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./passwort-reset.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.container {\n  @include dFlex(center, center, null);\n  width: 100%;\n  background-color: $lightblue;\n  flex-direction: column;\n  flex: 1;\n  padding: 2rem;\n  box-sizing: border-box;\n}\n\n.login-container {\n  text-align: center;\n  background-color: white;\n  border-radius: 30px;\n  box-shadow: 0px 2px 10px 0px #00000014;\n  max-width: 698px;\n  width: 100%;\n  position: relative;\n\n  .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 40px 40px;\n\n    .box {\n      @include dFlex(null, null, 20px);\n      flex-direction: column;\n      max-width: 512px;\n      width: 100%;\n    }\n\n    .konto-container {\n      @include dFlex(null, center, null);\n      flex-direction: row-reverse;\n    }\n\n    .image-container {\n      position: absolute;\n      top: 45px;\n      left: 32px;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      transition: background-color 0.3s;\n      overflow: hidden;\n      z-index: 1;\n      align-content: center;\n\n      &:hover {\n        filter: brightness(100%);\n        background-color: $lightblue;\n      }\n\n      img {\n        object-fit: cover;\n        border-radius: 50%;\n        transition: transform 0.3s;\n        cursor: pointer;\n\n        &:hover {\n          filter: brightness(0) saturate(100%) invert(35%) sepia(62%)\n            saturate(2733%) hue-rotate(225deg) brightness(93%) contrast(104%);\n        }\n      }\n    }\n\n    h2 {\n      color: $button-blue;\n      font-size: 46px;\n      font-weight: 700;\n      margin: 0;\n      flex-grow: 1;\n      text-align: center;\n      max-width: 491px;\n      width: 100%;\n      line-height: 55.2px;\n    }\n\n    p {\n      color: black;\n      font-size: 20px;\n      font-weight: 400;\n      margin: 0;\n    }\n\n    a {\n      color: $middleblue;\n      font-size: 18px;\n      font-weight: 400;\n      text-decoration: none;\n      transition: background-color 0.3s, border-radius 0.3s, padding 0.3s;\n    }\n\n    .button-container {\n      @include dFlex(flex-end, null, null);\n      max-width: 500px;\n      width: 100%;\n\n      .error-message p {\n        color: red !important;\n        font-weight: bold;\n        width: 70%;\n      }\n\n      .success-message p {\n        color: green;\n        font-weight: bold;\n      }\n    }\n\n    form {\n      max-width: 500px;\n      width: 100%;\n\n      input {\n        background: $lightblue;\n        border-radius: 100px;\n        color: #686868;\n        font-size: 18px;\n        font-weight: 500;\n        height: 60px;\n        width: 100%;\n        border: 1px solid transparent;\n        cursor: pointer;\n        box-sizing: border-box;\n        max-width: 500px;\n\n        &:hover {\n          border-color: #686868;\n          transition: border-color 0.3s;\n        }\n\n        &:focus,\n        &:focus-within {\n          outline: none;\n          border-color: $button-blue;\n        }\n\n        &:not(:focus) {\n          &:has(+ input:focus) {\n            border-color: blue;\n          }\n        }\n      }\n\n      .privacy-box {\n        @include dFlex(center, center, 8px);\n        width: 100%;\n\n        p {\n          @include dFlex(null, center, 4px);\n          color: #686868;\n          font-size: 20px;\n          font-weight: 400;\n          width: 100%;\n          max-width: 354px;\n          margin-top: 40px;\n        }\n      }\n\n      .error-message {\n        font-size: 14px;\n        color: #ed1e79;\n        font-weight: 400;\n        text-align: left;\n        text-align: center;\n        width: 100%;\n        max-width: 320px;\n        align-items: flex-end;\n        display: flex;\n        padding-left:50px;\n      }\n\n      .input-container {\n        margin-top: 40px;\n      }\n\n      .email-icon {\n        padding-left: 70px;\n      }\n    }\n  }\n}\n\n.icon-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  img {\n    position: absolute;\n    left: 15px;\n    width: 24px;\n    height: 24px;\n  }\n\n  input,\n  button {\n    padding-left: 50px;\n    height: 50px;\n    border-radius: 100px;\n    border: 1px solid #ccc;\n    width: 100%;\n  }\n}\n\n.button-anmelden {\n  width: 170px;\n  font-size: 16px;\n  margin-top: 40px;\n}\n\n.registration-ok {\n  max-width: 441px;\n  gap: 28px;\n}\n\n@media (max-width: 1278px) {\n  .registration-ok {\n    max-width: 269px !important;\n    width: 100%;\n    gap: 18px;\n  }\n\n  .container{\n  //  flex:none;\n     padding:8px 0 0 0 ;\n   }\n}\n\n@media (max-width: 780px) {\n  .login-container .login {\n    form {\n      .privacy-box p {\n        margin-top: 20px;\n        font-size: 14px;\n      }\n    }\n  }\n\n  .login-container .login .image-container {\n    width: unset;\n  }\n\n  .box {\n    @include dFlex(null, null, 10px);\n    flex-direction: column;\n    max-width: 345px;\n    width: 100px;\n  }\n\n  .login-container .login .image-container {\n    left: 22px;\n  }\n\n  .login-container {\n    width: unset;\n  }\n\n  .container {\n    box-sizing: border-box;\n  }\n\n  .login-container .login p {\n    margin: 0 auto;\n    padding: unset;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    max-width: 320px;\n  }\n\n  .login-container .login form .error-message {\n    font-size: 11px;\n  }\n\n  .login-container .login form .input-container input {\n    font-size: 14px;\n  }\n\n  .login-container .login form .input-container {\n    margin-top: 20px;\n  }\n\n  .button-container {\n    gap: 30px;\n  }\n\n  .login-container .login .box {\n    gap: 20px;\n    max-width: 346px;\n  }\n\n  .login-container .login form {\n    width: 100%;\n    max-width: 320px;\n  }\n\n  .login-container .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .login-container .login h2 {\n    line-height: 35.2px;\n  }\n\n  .login-container .login h2 {\n    font-size: 36px;\n  }\n\n  .button-anmelden {\n    margin-top: 20px;\n  }\n}\n\n@media (max-width: 520px) {\n  .login-container .login .image-container {\n    top: unset;\n  }\n\n  .registration-ok {\n    padding: unset;\n  }\n\n  .login-container .login h2 {\n    font-size: 30px;\n    width: 100%;\n    max-width: 300px;\n    line-height: 35.2px;\n  }\n\n  .login-container .login .box {\n    gap: 10px;\n  }\n\n  .login-container .login .image-container {\n    height: 30px;\n  }\n\n  .login-container .login .konto-container {\n    flex-direction: column;\n  }\n\n  .login-container .login p {\n    width: 300px;\n    justify-content: center;\n  }\n\n  .login-container .login .button-container {\n    gap: 10px;\n  }\n\n  .login-container .login {\n    padding: unset;\n  }\n\n  .login-container {\n    padding: 20px;\n  }\n\n  .login-container .login form .input-container input {\n    height: 40px;\n  }\n\n  .login-container .login form {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 390px) {\n  .login-container .login {\n    width: 260px;\n  }\n\n  .login-container .login p {\n    width: 260px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Passwort zurücksetzen                                                                                        Bitte geben Sie Ihre E-Mail-Adresse ein.                                                                                                {{ errorMessage }}                                                          *Bitte füllen Sie das E-Mail-Feld aus.                                      Diese E-Mail-Adresse ist leider ungültig.                                                          Wir senden Ihnen eine E-Mail, über die Sie Ihre Passwort ändern              können.                                                          E-Mail senden                                                                {{ successMessage }}              '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswortResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                FooterComponent\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n\n            \n                styleUrl\n                ./privacy.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/privacy/privacy.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/privacy/privacy.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FooterComponent } from '../footer/footer.component';\nimport { HeaderComponent } from '../header/header.component';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-privacy',\n  standalone: true,\n  imports: [FooterComponent,HeaderComponent],\n  templateUrl: './privacy.component.html',\n  styleUrl: './privacy.component.scss'\n})\nexport class PrivacyComponent implements OnInit  {\n\n  constructor(private location: Location){}\n  \n  ngOnInit(): void {\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n        \n          \n            \n            \n              \n            \n          \n           \n            \n              Datenschutzerklärung\n              \n            \n            \n              \n                Personenbezogene Daten (nachfolgend zumeist nur „Daten“ genannt)\n                werden von uns nur im Rahmen der Erforderlichkeit sowie zum\n                Zwecke der Bereitstellung eines funktionsfähigen und\n                nutzerfreundlichen Internetauftritts, inklusive seiner Inhalte\n                und der dort angebotenen Leistungen, verarbeitet.\n              \n\n              \n                Gemäß Art. 4 Ziffer 1. der Verordnung (EU) 2016/679, also der\n                Datenschutz-Grundverordnung (nachfolgend nur „DSGVO“ genannt),\n                gilt als „Verarbeitung“ jeder mit oder ohne Hilfe\n                automatisierter Verfahren ausgeführter Vorgang oder jede solche\n                Vorgangsreihe im Zusammenhang mit personenbezogenen Daten, wie\n                das Erheben, das Erfassen, die Organisation, das Ordnen, die\n                Speicherung, die Anpassung oder Veränderung, das Auslesen, das\n                Abfragen, die Verwendung, die Offenlegung durch Übermittlung,\n                Verbreitung oder eine andere Form der Bereitstellung, den\n                Abgleich oder die Verknüpfung, die Einschränkung, das Löschen\n                oder die Vernichtung.\n              \n\n              \n                Mit der nachfolgenden Datenschutzerklärung informieren wir Sie\n                insbesondere über Art, Umfang, Zweck, Dauer und Rechtsgrundlage\n                der Verarbeitung personenbezogener Daten, soweit wir entweder\n                allein oder gemeinsam mit anderen über die Zwecke und Mittel der\n                Verarbeitung entscheiden. Zudem informieren wir Sie nachfolgend\n                über die von uns zu Optimierungszwecken sowie zur Steigerung der\n                Nutzungsqualität eingesetzten Fremdkomponenten, soweit hierdurch\n                Dritte Daten in wiederum eigener Verantwortung verarbeiten.\n              \n            \n\n            \n              Unsere Datenschutzerklärung ist wie folgt gegliedert:\n\n              \n                I. Informationen über uns als Verantwortliche,\n                II. Rechte der Nutzer und Betroffenen, \n                III. Informationen zur Datenverarbeitung,\n              \n            \n\n            \n              I. Informationen über uns als Verantwortliche,\n\n              \n                Verantwortlicher Anbieter dieses Internetauftritts im\n                datenschutzrechtlichen Sinne ist:,\n              \n\n              Selcuk Kocyigit\n              Hochfelder Str.33\n              47226 Duisburg\n\n              Telefon: 017643203362E-Mail: selcuk.80&#64;outlook.de\n\n              II. Rechte der Nutzer und Betroffenen,\n\n              \n                Mit Blick auf die nachfolgend noch näher beschriebene\n                Datenverarbeitung haben die Nutzer und Betroffenen das Recht,\n              \n              \n                \n                  auf Bestätigung, ob sie betreffende Daten verarbeitet werden,\n                  auf Auskunft über die verarbeiteten Daten, auf weitere\n                  Informationen über die Datenverarbeitung sowie auf Kopien der\n                  Daten (vgl. auch Art. 15 DSGVO);,\n                \n\n                \n                  auf Berichtigung oder Vervollständigung unrichtiger bzw.\n                  unvollständiger Daten (vgl. auch Art. 16 DSGVO);,\n                \n\n                \n                  auf unverzügliche Löschung der sie betreffenden Daten (vgl.\n                  auch Art. 17 DSGVO), oder, alternativ, soweit eine weitere\n                  Verarbeitung gemäß Art. 17 Abs. 3 DSGVO erforderlich ist, auf\n                  Einschränkung der Verarbeitung nach Maßgabe von Art. 18\n                  DSGVO;,\n                \n\n                \n                  auf Erhalt der sie betreffenden und von ihnen bereitgestellten\n                  Daten und auf Übermittlung dieser Daten an andere\n                  Anbieter/Verantwortliche (vgl. auch Art. 20 DSGVO);,\n                \n\n                \n                  auf Beschwerde gegenüber der Aufsichtsbehörde, sofern sie der\n                  Ansicht sind, dass die sie betreffenden Daten durch den\n                  Anbieter unter Verstoß gegen datenschutzrechtliche\n                  Bestimmungen verarbeitet werden (vgl. auch Art. 77 DSGVO).,\n                \n              \n              \n                Darüber hinaus ist der Anbieter dazu verpflichtet, alle\n                Empfänger, denen gegenüber Daten durch den Anbieter offengelegt\n                worden sind, über jedwede Berichtigung oder Löschung von Daten\n                oder die Einschränkung der Verarbeitung, die aufgrund der\n                Artikel 16, 17 Abs. 1, 18 DSGVO erfolgt, zu unterrichten. Diese\n                Verpflichtung besteht jedoch nicht, soweit diese Mitteilung\n                unmöglich oder mit einem unverhältnismäßigen Aufwand verbunden\n                ist. Unbeschadet dessen hat der Nutzer ein Recht auf Auskunft\n                über diese Empfänger.,\n              \n\n              \n                Ebenfalls haben die Nutzer und Betroffenen nach Art. 21 DSGVO\n                  das Recht auf Widerspruch gegen die künftige Verarbeitung der\n                  sie betreffenden Daten, sofern die Daten durch den Anbieter\n                  nach Maßgabe von Art. 6 Abs. 1 lit. f) DSGVO verarbeitet\n                  werden. Insbesondere ist ein Widerspruch gegen die\n                  Datenverarbeitung zum Zwecke der Direktwerbung\n                  statthaft.,\n              \n\n              III. Informationen zur Datenverarbeitung,\n\n              \n                Ihre bei Nutzung unseres Internetauftritts verarbeiteten Daten\n                werden gelöscht oder gesperrt, sobald der Zweck der Speicherung\n                entfällt, der Löschung der Daten keine gesetzlichen\n                Aufbewahrungspflichten entgegenstehen und nachfolgend keine\n                anderslautenden Angaben zu einzelnen Verarbeitungsverfahren\n                gemacht werden.\",\n              \n\n              Kontaktanfragen / Kontaktmöglichkeit,\n\n              \n                \n                  Sofern Sie per Kontaktformular oder E-Mail mit uns in Kontakt\n                  treten, werden die dabei von Ihnen angegebenen Daten zur\n                  Bearbeitung Ihrer Anfrage genutzt. Die Angabe der Daten ist\n                  zur Bearbeitung und Beantwortung Ihre Anfrage erforderlich –\n                  ohne deren Bereitstellung können wir Ihre Anfrage nicht oder\n                  allenfalls eingeschränkt beantworten.,\n                \n                \n                  Rechtsgrundlage für diese Verarbeitung ist Art. 6 Abs. 1 lit.\n                  b DSGVO.,\n                \n                \n                  Ihre Daten werden gelöscht, sofern Ihre Anfrage abschließend\n                  beantwortet worden ist und der Löschung keine gesetzlichen\n                  Aufbewahrungspflichten entgegenstehen, wie bspw. bei einer\n                  sich etwaig anschließenden Vertragsabwicklung.,\n                \n              \n\n              \n                \n                  Muster-Datenschutzerklärung,\n\n                der,\n                \n                  Anwaltskanzlei Weiß & Partner\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                 Datenschutzerklärung                                                                    Personenbezogene Daten (nachfolgend zumeist nur „Daten“ genannt)                werden von uns nur im Rahmen der Erforderlichkeit sowie zum                Zwecke der Bereitstellung eines funktionsfähigen und                nutzerfreundlichen Internetauftritts, inklusive seiner Inhalte                und der dort angebotenen Leistungen, verarbeitet.                                            Gemäß Art. 4 Ziffer 1. der Verordnung (EU) 2016/679, also der                Datenschutz-Grundverordnung (nachfolgend nur „DSGVO“ genannt),                gilt als „Verarbeitung“ jeder mit oder ohne Hilfe                automatisierter Verfahren ausgeführter Vorgang oder jede solche                Vorgangsreihe im Zusammenhang mit personenbezogenen Daten, wie                das Erheben, das Erfassen, die Organisation, das Ordnen, die                Speicherung, die Anpassung oder Veränderung, das Auslesen, das                Abfragen, die Verwendung, die Offenlegung durch Übermittlung,                Verbreitung oder eine andere Form der Bereitstellung, den                Abgleich oder die Verknüpfung, die Einschränkung, das Löschen                oder die Vernichtung.                                            Mit der nachfolgenden Datenschutzerklärung informieren wir Sie                insbesondere über Art, Umfang, Zweck, Dauer und Rechtsgrundlage                der Verarbeitung personenbezogener Daten, soweit wir entweder                allein oder gemeinsam mit anderen über die Zwecke und Mittel der                Verarbeitung entscheiden. Zudem informieren wir Sie nachfolgend                über die von uns zu Optimierungszwecken sowie zur Steigerung der                Nutzungsqualität eingesetzten Fremdkomponenten, soweit hierdurch                Dritte Daten in wiederum eigener Verantwortung verarbeiten.                                                    Unsere Datenschutzerklärung ist wie folgt gegliedert:                              I. Informationen über uns als Verantwortliche,                II. Rechte der Nutzer und Betroffenen,                 III. Informationen zur Datenverarbeitung,                                                    I. Informationen über uns als Verantwortliche,                              Verantwortlicher Anbieter dieses Internetauftritts im                datenschutzrechtlichen Sinne ist:,                            Selcuk Kocyigit              Hochfelder Str.33              47226 Duisburg              Telefon: 017643203362E-Mail: selcuk.80@outlook.de              II. Rechte der Nutzer und Betroffenen,                              Mit Blick auf die nachfolgend noch näher beschriebene                Datenverarbeitung haben die Nutzer und Betroffenen das Recht,                                                              auf Bestätigung, ob sie betreffende Daten verarbeitet werden,                  auf Auskunft über die verarbeiteten Daten, auf weitere                  Informationen über die Datenverarbeitung sowie auf Kopien der                  Daten (vgl. auch Art. 15 DSGVO);,                                                  auf Berichtigung oder Vervollständigung unrichtiger bzw.                  unvollständiger Daten (vgl. auch Art. 16 DSGVO);,                                                  auf unverzügliche Löschung der sie betreffenden Daten (vgl.                  auch Art. 17 DSGVO), oder, alternativ, soweit eine weitere                  Verarbeitung gemäß Art. 17 Abs. 3 DSGVO erforderlich ist, auf                  Einschränkung der Verarbeitung nach Maßgabe von Art. 18                  DSGVO;,                                                  auf Erhalt der sie betreffenden und von ihnen bereitgestellten                  Daten und auf Übermittlung dieser Daten an andere                  Anbieter/Verantwortliche (vgl. auch Art. 20 DSGVO);,                                                  auf Beschwerde gegenüber der Aufsichtsbehörde, sofern sie der                  Ansicht sind, dass die sie betreffenden Daten durch den                  Anbieter unter Verstoß gegen datenschutzrechtliche                  Bestimmungen verarbeitet werden (vgl. auch Art. 77 DSGVO).,                                                            Darüber hinaus ist der Anbieter dazu verpflichtet, alle                Empfänger, denen gegenüber Daten durch den Anbieter offengelegt                worden sind, über jedwede Berichtigung oder Löschung von Daten                oder die Einschränkung der Verarbeitung, die aufgrund der                Artikel 16, 17 Abs. 1, 18 DSGVO erfolgt, zu unterrichten. Diese                Verpflichtung besteht jedoch nicht, soweit diese Mitteilung                unmöglich oder mit einem unverhältnismäßigen Aufwand verbunden                ist. Unbeschadet dessen hat der Nutzer ein Recht auf Auskunft                über diese Empfänger.,                                            Ebenfalls haben die Nutzer und Betroffenen nach Art. 21 DSGVO                  das Recht auf Widerspruch gegen die künftige Verarbeitung der                  sie betreffenden Daten, sofern die Daten durch den Anbieter                  nach Maßgabe von Art. 6 Abs. 1 lit. f) DSGVO verarbeitet                  werden. Insbesondere ist ein Widerspruch gegen die                  Datenverarbeitung zum Zwecke der Direktwerbung                  statthaft.,                            III. Informationen zur Datenverarbeitung,                              Ihre bei Nutzung unseres Internetauftritts verarbeiteten Daten                werden gelöscht oder gesperrt, sobald der Zweck der Speicherung                entfällt, der Löschung der Daten keine gesetzlichen                Aufbewahrungspflichten entgegenstehen und nachfolgend keine                anderslautenden Angaben zu einzelnen Verarbeitungsverfahren                gemacht werden.\",                            Kontaktanfragen / Kontaktmöglichkeit,                                                Sofern Sie per Kontaktformular oder E-Mail mit uns in Kontakt                  treten, werden die dabei von Ihnen angegebenen Daten zur                  Bearbeitung Ihrer Anfrage genutzt. Die Angabe der Daten ist                  zur Bearbeitung und Beantwortung Ihre Anfrage erforderlich –                  ohne deren Bereitstellung können wir Ihre Anfrage nicht oder                  allenfalls eingeschränkt beantworten.,                                                  Rechtsgrundlage für diese Verarbeitung ist Art. 6 Abs. 1 lit.                  b DSGVO.,                                                  Ihre Daten werden gelöscht, sofern Ihre Anfrage abschließend                  beantwortet worden ist und der Löschung keine gesetzlichen                  Aufbewahrungspflichten entgegenstehen, wie bspw. bei einer                  sich etwaig anschließenden Vertragsabwicklung.,                                                                              Muster-Datenschutzerklärung,                der,                                  Anwaltskanzlei Weiß & Partner                                                                          '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilDialogComponent.html":{"url":"components/ProfilDialogComponent.html","title":"component - ProfilDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profil-dialog/profil-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ProfilDialogComponent is displayed in a Material Dialog\nto show a user's profile data, including avatar, status, and email.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profil-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./profil-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profil-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Private\n                                    Optional\n                                unsubscribeRecipient\n                            \n                            \n                                userAvatarUrl\n                            \n                            \n                                userEmail\n                            \n                            \n                                userName\n                            \n                            \n                                userStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ProfileData, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:62\n                            \n                        \n\n                \n                    \n                            Constructor injecting the material dialog references and incoming data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReference to this dialog instance.\n\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ProfileData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nData passed in when opening this dialog (user profile info).\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profil-dialog/profil-dialog.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Closes the dialog without taking additional action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profil-dialog/profil-dialog.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profil-dialog/profil-dialog.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that copies relevant profile data to local variables on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profil-dialog/profil-dialog.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Closes the dialog and signals the parent that a private chat\nshould be opened with the given user ID.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:72\n                        \n                    \n\n            \n                \n                    - Data passed in when opening this dialog (user profile info).\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    - Reference to this dialog instance.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        unsubscribeRecipient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:62\n                        \n                    \n\n            \n                \n                    Hier speichern wir später die unsubscribe-Funktion des Snapshot-Listeners,\ndamit wir ihn bei Bedarf beenden können.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAvatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/avatar.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:51\n                        \n                    \n\n            \n                \n                    Local copy of the user's avatar URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Local copy of user's email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Local copy of user's name, used in the dialog display.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Aktiv'\n                    \n                \n                    \n                        \n                                Defined in src/app/profil-dialog/profil-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    Local copy of user's status (e.g., 'Aktiv', 'Abwesend').\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from '../message.service';\n\n/**\n * Data structure expected when opening ProfilDialogComponent via MatDialog.\n */\nexport interface ProfileData {\n  userId: string;\n  userName: string;\n  userStatus: string;\n  userAvatarUrl: string;\n  userEmail: string;\n}\n\n/**\n * The ProfilDialogComponent is displayed in a Material Dialog\n * to show a user's profile data, including avatar, status, and email.\n */\n@Component({\n  selector: 'app-profil-dialog',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './profil-dialog.component.html',\n  styleUrls: ['./profil-dialog.component.scss']\n})\nexport class ProfilDialogComponent implements OnInit {\n  /**\n   * Local copy of user's name, used in the dialog display.\n   */\n  userName: string = '';\n\n  /**\n   * Local copy of user's status (e.g., 'Aktiv', 'Abwesend').\n   */\n  userStatus: string = 'Aktiv';\n\n  /**\n   * Local copy of the user's avatar URL.\n   */\n  userAvatarUrl: string = 'assets/img/avatar.png';\n\n  /**\n   * Local copy of user's email address.\n   */\n  userEmail: string = '';\n  \n  /**\n   * Hier speichern wir später die unsubscribe-Funktion des Snapshot-Listeners,\n   * damit wir ihn bei Bedarf beenden können.\n   */\n  private unsubscribeRecipient?: () => void;\n\n  /**\n   * Constructor injecting the material dialog references and incoming data.\n   *\n   * @param {MatDialogRef} dialogRef - Reference to this dialog instance.\n   * @param {ProfileData} data - Data passed in when opening this dialog (user profile info).\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ProfileData,\n    private messageService: MessageService\n  ) {}\n\n  /**\n   * Lifecycle hook that copies relevant profile data to local variables on initialization.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      this.userName = this.data.userName;\n      this.userStatus = this.data.userStatus;\n      this.userAvatarUrl = this.data.userAvatarUrl;\n      this.userEmail = this.data.userEmail;\n    }\n\n    if (this.data.userId) {\n      this.unsubscribeRecipient = this.messageService.onRecipientStatusChanged(\n        this.data.userId,\n        (result) => {\n          this.userStatus = result.isOnline ? 'Aktiv' : 'Abwesend';\n          this.userAvatarUrl = result.avatarUrl;\n          this.userName = result.name;\n          this.userEmail = result.email;\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the dialog without taking additional action.\n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Closes the dialog and signals the parent that a private chat \n   * should be opened with the given user ID.\n   */\n  sendMessage(): void {\n    this.dialogRef.close({ openChatWith: this.data.userId });\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeRecipient) {\n      this.unsubscribeRecipient();\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n  \n    \n      Profil\n\n      \n        \n      \n    \n\n    \n      \n    \n\n    \n      \n        \n          \n            {{ data.userName }}\n          \n        \n\n        \n          \n          \n          \n          {{ userStatus }}\n        \n        \n        \n      \n\n      \n        \n          \n          E-Mail-Adresse\n        \n        {{ data.userEmail }}\n      \n    \n\n    \n      \n      Nachricht\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./profil-dialog.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.profile-card-container {\n  background-color: white;\n  box-shadow: -2px 0px 8px rgba(0, 0, 0, 0.1);\n  transition: right 0.3s ease;\n  z-index: 1001;\n  display: flex;\n  padding: 45px 40px;\n\n  &.show {\n    right: 20px;\n    border-radius: 30px 0px 30px 30px;\n    display: block;\n  }\n\n  .profile-card {\n    @include dFlex(space-between, center, 45px);\n    flex-direction: column;\n  }\n\n  .profile-avatar {\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    border-radius: 50%;\n\n    img {\n      border-radius: 50%;\n      transition: 0.3s ease;\n      width: 200px;\n      height: 200px;\n      object-fit: cover;\n    }\n  }\n\n  .profile-info {\n    @include dFlex(null, null, 45px);\n    flex-direction: column;\n\n    p {\n      font-size: 20px;\n      font-weight: 700;\n      margin: 0;\n    }\n\n    .secondary-text {\n      font-size: 18px;\n      color: $hoverColor;\n      font-weight: 500;\n      float: left;\n      padding-left: 50px;\n      margin: 0;\n    }\n  }\n}\n\n\n.profil-container {\n  @include dFlex(space-between, center, 0);\n  width: 420px;\n  height: 40px;\n\n  .img-wrapper {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    transition: background-color 0.3s ease, transform 0.3s ease;\n\n    &:hover {\n      background-color: $lightblue;\n      transform: scale(1.1);\n    }\n\n    img {\n      width: 40px;\n      height: 40px;\n      object-fit: cover;\n      border-radius: 50%;\n      transition: filter 0.3s ease;\n      cursor: pointer;\n\n      &:hover {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n.profil-settings {\n  @include dFlex(space-between, center, 0);\n  width: 420px;\n  height: 44px;\n\n  p {\n    font-size: 32px !important;\n    font-weight: 700 !important;\n  }\n}\n\n.email-container {\n  @include dFlex(null, center, 20px);\n\n  img {\n    width: 30px;\n    height: 30px;\n  }\n}\n\n.online-aktiv-passiv {\n  @include dFlex(null, center, 15px);\n  img {\n    width: 16px;\n    height: 16px;\n  }\n\n  p {\n    font-size: 20px !important;\n    font-weight: 400 !important;\n    color: #92c83e;\n  }\n}\n\n\n.button-anmelden {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n}\n\n.profil-box,\n.profil-email-box {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n::ng-deep .mdc-dialog__surface {\n  border-radius: 30px !important;\n  overflow: hidden;\n  width: auto !important;\n  min-width: 0 !important;\n}\n\n@media (min-width: 1278px) {\n  .profil-settings img {\n    display: none;\n  }\n}\n\n@media (max-width: 1278px) {\n  .profil-settings {\n    width: unset;\n  }\n\n  .profil-container {\n    width: 100%;\n  }\n\n  .button-anmelden {\n    margin-top: 10px;\n    height: 25px;\n  }\n\n  .profile-card-container .profile-info {\n    gap: 20px;\n    width: 100%;\n  }\n\n  .profile-card-container .profile-card {\n    width: 100vw;\n    max-width: 358px;\n    gap: unset;\n  }\n\n  .profile-card-container {\n    padding: 40px 20px;\n  }\n\n  .profil-settings {\n    display: flex;\n    justify-content: space-between;\n\n    img {\n      width: 30px;\n      height: 30px;\n      object-fit: cover;\n      border-radius: 50%;\n      transition: filter 0.3s ease;\n\n      &:hover {\n        background-color: $lightblue;\n        transform: scale(1.1);\n        cursor: pointer;\n\n        img {\n          filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n            saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n        }\n      }\n    }\n  }\n}\n\n@media (max-width: 390px) {\n  .profil-container {\n    width: 100%;\n\n    h2 {\n      font-size: 18px;\n    }\n  }\n\n  .profil-settings p {\n    font-size: 26px !important;\n  }\n\n  .profil-email-box p {\n    font-size: 18px !important;\n  }\n\n  .profil-email-box .secondary-text {\n    font-size: 16px !important;\n  }\n\n  .online-aktiv-passiv p {\n    font-size: 18px !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profil                                                                              {{ data.userName }}                                                                  {{ userStatus }}                                                                E-Mail-Adresse                {{ data.userEmail }}                          Nachricht      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileData.html":{"url":"interfaces/ProfileData.html","title":"interface - ProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profil-dialog/profil-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data structure expected when opening ProfilDialogComponent via MatDialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userAvatarUrl\n                                        \n                                \n                                \n                                        \n                                            userEmail\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                                \n                                        \n                                            userStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userAvatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAvatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from '../message.service';\n\n/**\n * Data structure expected when opening ProfilDialogComponent via MatDialog.\n */\nexport interface ProfileData {\n  userId: string;\n  userName: string;\n  userStatus: string;\n  userAvatarUrl: string;\n  userEmail: string;\n}\n\n/**\n * The ProfilDialogComponent is displayed in a Material Dialog\n * to show a user's profile data, including avatar, status, and email.\n */\n@Component({\n  selector: 'app-profil-dialog',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './profil-dialog.component.html',\n  styleUrls: ['./profil-dialog.component.scss']\n})\nexport class ProfilDialogComponent implements OnInit {\n  /**\n   * Local copy of user's name, used in the dialog display.\n   */\n  userName: string = '';\n\n  /**\n   * Local copy of user's status (e.g., 'Aktiv', 'Abwesend').\n   */\n  userStatus: string = 'Aktiv';\n\n  /**\n   * Local copy of the user's avatar URL.\n   */\n  userAvatarUrl: string = 'assets/img/avatar.png';\n\n  /**\n   * Local copy of user's email address.\n   */\n  userEmail: string = '';\n  \n  /**\n   * Hier speichern wir später die unsubscribe-Funktion des Snapshot-Listeners,\n   * damit wir ihn bei Bedarf beenden können.\n   */\n  private unsubscribeRecipient?: () => void;\n\n  /**\n   * Constructor injecting the material dialog references and incoming data.\n   *\n   * @param {MatDialogRef} dialogRef - Reference to this dialog instance.\n   * @param {ProfileData} data - Data passed in when opening this dialog (user profile info).\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ProfileData,\n    private messageService: MessageService\n  ) {}\n\n  /**\n   * Lifecycle hook that copies relevant profile data to local variables on initialization.\n   */\n  ngOnInit(): void {\n    if (this.data) {\n      this.userName = this.data.userName;\n      this.userStatus = this.data.userStatus;\n      this.userAvatarUrl = this.data.userAvatarUrl;\n      this.userEmail = this.data.userEmail;\n    }\n\n    if (this.data.userId) {\n      this.unsubscribeRecipient = this.messageService.onRecipientStatusChanged(\n        this.data.userId,\n        (result) => {\n          this.userStatus = result.isOnline ? 'Aktiv' : 'Abwesend';\n          this.userAvatarUrl = result.avatarUrl;\n          this.userName = result.name;\n          this.userEmail = result.email;\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the dialog without taking additional action.\n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Closes the dialog and signals the parent that a private chat \n   * should be opened with the given user ID.\n   */\n  sendMessage(): void {\n    this.dialogRef.close({ openChatWith: this.data.userId });\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeRecipient) {\n      this.unsubscribeRecipient();\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectedMembersDialogComponent.html":{"url":"components/SelectedMembersDialogComponent.html","title":"component - SelectedMembersDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectedMembersDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/selected-members-dialog/selected-members-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        The SelectedMembersDialogComponent displays the list of currently\nselected members passed in via the dialog data context.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-selected-members-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./selected-members-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selected-members-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedMembers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                onCancel\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for the SelectedMembersDialogComponent, injecting\nthe dialog reference and the members data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReference to this dialog instance.\n\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data object passed to the dialog, containing members.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Closes the dialog, optionally returning updated data if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Closes the dialog without any further action or changes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Removes a member from the selectedMembers array at the specified index.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe index of the member to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:39\n                        \n                    \n\n            \n                \n                    - The data object passed to the dialog, containing members.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    - Reference to this dialog instance.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/selected-members-dialog/selected-members-dialog.component.ts:28\n                        \n                    \n\n            \n                \n                    An array of selected members passed in through MAT_DIALOG_DATA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\n\n/**\n * The SelectedMembersDialogComponent displays the list of currently\n * selected members passed in via the dialog data context.\n */\n@Component({\n  selector: 'app-selected-members-dialog',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './selected-members-dialog.component.html',\n  styleUrls: ['./selected-members-dialog.component.scss']\n})\nexport class SelectedMembersDialogComponent {\n  /**\n   * An array of selected members passed in through `MAT_DIALOG_DATA`.\n   */\n  selectedMembers: any[];\n\n  /**\n   * Constructor for the SelectedMembersDialogComponent, injecting\n   * the dialog reference and the members data.\n   *\n   * @param {MatDialogRef} dialogRef - Reference to this dialog instance.\n   * @param {any} data - The data object passed to the dialog, containing members.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.selectedMembers = data.members || [];\n  }\n\n  /**\n   * Removes a member from the selectedMembers array at the specified index.\n   *\n   * @param {number} index - The index of the member to remove.\n   */\n  removeMember(index: number): void {\n    this.selectedMembers.splice(index, 1);\n  }\n\n  /**\n   * Closes the dialog, optionally returning updated data if needed.\n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Closes the dialog without any further action or changes.\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Ausgewählte Mitglieder\n      \n    \n    \n      \n        \n        {{ member.name }}\n        ×\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./selected-members-dialog.component.scss\n                \n                @import \"./../../styles.scss\";\n\nul {\n  list-style-type: none;\n  padding: 0;\n  gap: 13px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n}\n\nli {\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  gap: 20px;\n\n  &:hover {\n    background-color: $lightblue;\n    border-radius: 100px;\n    color: black;\n    transition: color 0.3s ease, font-size 0.3s ease;\n  }\n}\n\nspan {\n  font-size: 18px;\n  font-weight: 400;\n  color: black;\n}\n\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 40px;\n  gap: 20px;\n  border-radius: 40px 0px 0px 0px;\n  border: 1px 0px 0px 0px;\n  display: flex;\n  flex-direction: column;\n}\n\n.remove-btn {\n  background-color: transparent;\n  border: none;\n  color: gray;\n  cursor: pointer;\n  font-size: 20px;\n  margin-left: auto;\n\n  &:hover {\n    color: $hoverColor;\n  }\n}\n\n.close-dialog {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n\n  h1 {\n    margin-right: 20px;\n    font-size: 24px;\n    font-weight: 700;\n    flex-grow: 1;\n  }\n\n  img {\n    cursor: pointer;\n    transition: filter 0.3s ease, background-color 0.3s ease;\n    border-radius: 50%;\n    margin-left: auto;\n    &:hover {\n      background-color: $lightblue;\n\n      img {\n        filter: brightness(0) saturate(100%) invert(34%) sepia(39%)\n          saturate(6834%) hue-rotate(230deg) brightness(100%) contrast(90%);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Ausgewählte Mitglieder                                    {{ member.name }}        ×            '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectedMembersDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThreadChannelParentDoc.html":{"url":"interfaces/ThreadChannelParentDoc.html","title":"interface - ThreadChannelParentDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThreadChannelParentDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/chat/chat.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            channelId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderAvatar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            senderName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  ViewChild,\n  CUSTOM_ELEMENTS_SCHEMA,\n  HostListener,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatHeaderComponent } from '../chat-header/chat-header.component';\nimport { DevspaceComponent } from '../devspace/devspace.component';\nimport { EntwicklerteamComponent } from '../entwicklerteam/entwicklerteam.component';\nimport { InnerChannelComponent } from '../inner-channel/inner-channel.component';\nimport { DirectMessagesComponent } from '../direct-messages/direct-messages.component';\nimport { PrivateMessagesComponent } from '../private-messages/private-messages.component';\nimport { WelcomeScreenComponent } from '../welcome-screen/welcome-screen.component';\nimport { AppStateService } from '../app-state.service';\nimport { UserService } from '../user.service';\nimport { ChannelService } from '../channel.service';\nimport { SearchFieldComponent } from '../search-field/search-field.component';\nimport { ThreadComponent } from '../thread/thread.component';\nimport { ThreadChannelComponent } from '../thread-channel/thread-channel.component';\nimport { MessageService } from '../message.service';\n\ninterface ThreadChannelParentDoc {\n  senderName?: string;\n  senderAvatar?: string;\n  content?: {\n    text?: string;\n    emojis?: any[];\n  };\n  timestamp?: any;\n  replyCount?: number;\n  channelName?: string;\n  channelId?: string;\n}\n\n@Component({\n  selector: 'app-chat',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ChatHeaderComponent,\n    DevspaceComponent,\n    EntwicklerteamComponent,\n    InnerChannelComponent,\n    DirectMessagesComponent,\n    PrivateMessagesComponent,\n    WelcomeScreenComponent,\n    SearchFieldComponent,\n    ThreadComponent,\n    ThreadChannelComponent,\n  ],\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class ChatComponent implements OnInit {\n  isPrivateMessage: boolean = false;\n  selectedMemberId: string = '';\n  selectedMemberName: string = '';\n  isEditingChannel: boolean = false;\n  isPrivateChat: boolean = false;\n  selectedMember: any = null;\n  showWelcomeContainer: boolean = false;\n  selectedChannel: any = null;\n  isSearchActive: boolean = false;\n  selectedThread: any = null;\n  selectedThreadChannel: any = null;\n  isWorkspaceVisible: boolean = true;\n  isThreadFromSearch: boolean = false;\n  isThreadChannelFromSearch: boolean = false;\n  isThreadActive: boolean = false;\n  threadData: any = null; // Even if unused, left as is to not alter logic.\n  private recipientCache: Map = new Map();\n\n  currentMobileView:\n    | 'container'\n    | 'team'\n    | 'private'\n    | 'thread'\n    | 'threadChannel'\n    | 'welcome'\n    | 'search' = 'container';\n  previousView:\n    | 'container'\n    | 'team'\n    | 'private'\n    | 'thread'\n    | 'threadChannel'\n    | 'welcome'\n    | 'search' = 'container';\n\n  showDesktopHeader = false;\n  showMemberListDialog = false;\n\n  @ViewChild('chatHeaderRef') chatHeaderRef!: ChatHeaderComponent;\n  @Output() editSquareClicked = new EventEmitter();\n  @ViewChild('devspaceRef') devspaceRef!: DevspaceComponent;\n  @ViewChild(ChatComponent) chatComponent!: ChatComponent;\n  @ViewChild(EntwicklerteamComponent) entwicklerteam!: EntwicklerteamComponent;\n\n  private forcedMobileActive = false;\n  private oldDesktopView:\n    | 'container'\n    | 'team'\n    | 'private'\n    | 'thread'\n    | 'threadChannel'\n    | 'welcome'\n    | 'search' = 'container';\n  private oldIsSearchActive = false;\n  private oldIsWorkspaceVisible = true;\n\n  shouldShowContainer = false;\n\n  /**\n   * Constructor for the ChatComponent. Injects services needed\n   * for managing application state, users, channels, messages, and\n   * the change detection reference.\n   *\n   * @param {AppStateService} appStateService - Manages global state across the app.\n   * @param {UserService} userService - Provides user-related operations.\n   * @param {ChannelService} channelService - Provides channel-related operations.\n   * @param {MessageService} messageService - Provides message-related operations.\n   * @param {ChangeDetectorRef} cdr - Detects and triggers UI updates.\n   */\n  constructor(\n    private appStateService: AppStateService,\n    private userService: UserService,\n    private channelService: ChannelService,\n    private messageService: MessageService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Lifecycle hook. Initializes the component,\n   * sets the welcome screen visibility, and checks screen size.\n   */\n  ngOnInit(): void {\n    this.showWelcomeContainer = this.appStateService.getShowWelcomeContainer();\n    this.checkScreenSize();\n    this.updateContainerVisibility();\n  }\n\n  /**\n   * Opens a private chat with the specified member, hiding the member list\n   * and updating relevant component states. If on a small screen, switches\n   * to 'private' mobile view and displays the header.\n   *\n   * @param {{ id: string; name: string }} payload - Contains the member's ID and name.\n   */\n  onOpenPrivateChat(payload: { id: string; name: string }) {\n    this.showMemberListDialog = false;\n    this.isPrivateChat = true;\n    this.selectedMember = { id: payload.id, name: payload.name };\n    this.isSearchActive = false;\n    this.selectedChannel = null;\n\n    if (window.innerWidth = 1278) {\n      this.isWorkspaceVisible = true;\n    } else {\n      // Additional mobile handling if needed\n    }\n  }\n\n  /**\n   * HostListener that triggers on window resize events.\n   * Enters or exits forced mobile mode depending on screen width.\n   */\n  @HostListener('window:resize')\n  onResize() {\n    const width = window.innerWidth;\n    if (width = 1470\n    this.shouldShowContainer =\n      width = 1470 ||\n      this.showWelcomeContainer ||\n      this.isSearchActive;\n    // this.shouldShowContainer = (width >= 1470) || this.showWelcomeContainer;\n  }\n\n  openWelcome() {\n    this.showWelcomeContainer = true;\n    this.updateContainerVisibility(); // Erneut prüfen\n  }\n\n  closeWelcome() {\n    this.showWelcomeContainer = false;\n    this.updateContainerVisibility(); // Erneut prüfen\n  }\n\n  /**\n   * Activates forced mobile mode by storing the current view\n   * and search/workspace states, then switches to 'container' view.\n   */\n  private enterForcedMobileMode() {\n    this.forcedMobileActive = true;\n    this.oldDesktopView = this.currentMobileView;\n    this.oldIsSearchActive = this.isSearchActive;\n    this.oldIsWorkspaceVisible = this.isWorkspaceVisible;\n    this.currentMobileView = 'container';\n  }\n\n  /**\n   * Exits forced mobile mode by restoring the previously stored\n   * desktop view and search/workspace states.\n   */\n  private exitForcedMobileMode() {\n    this.forcedMobileActive = false;\n    if (this.oldDesktopView === 'search') {\n      this.currentMobileView = 'search';\n      this.showDesktopHeader = true;\n    } else {\n      this.currentMobileView = this.oldDesktopView;\n      this.isSearchActive = this.oldIsSearchActive;\n      this.showDesktopHeader = false;\n    }\n    this.isWorkspaceVisible = this.oldIsWorkspaceVisible;\n  }\n\n  /**\n   * Handles the back navigation from the header in mobile view.\n   * Resets to the 'container' view and hides the desktop header.\n   */\n  onHeaderBackClicked() {\n    this.showDesktopHeader = false;\n    if (this.isPrivateChat && this.selectedMember) {\n    } else if (this.selectedChannel) {\n    } else if (this.selectedThread) {\n    } else {\n    }\n    this.showDesktopHeader = false;\n    this.currentMobileView = 'container';\n  }\n\n  /**\n   * Simple method to switch the current mobile view\n   * back to 'container', typically used in mobile contexts.\n   */\n  backToContainer() {\n    this.currentMobileView = 'container';\n  }\n\n  /**\n   * Opens a thread channel view from a search result, orchestrating\n   * sub-steps like loading data and adjusting UI state.\n   *\n   * @param {any} result - The search result with details to open the thread channel.\n   */\n  async openThreadChannelFromSearch(result: any): Promise {\n    this.prepThreadChannelSearch(result);\n    const threadChannelId = this.getThreadChannelId(result);\n    if (!threadChannelId) return;\n    const { parentDoc, channelName } = await this.prepareParentDoc(\n      threadChannelId\n    );\n    const formattedMessages = await this.prepareChildMessages(threadChannelId);\n\n    const parentMessage = this.buildParentMessage(\n      parentDoc,\n      result,\n      channelName,\n      threadChannelId\n    );\n\n    this.assignThreadChannel(result, parentMessage, formattedMessages);\n    this.addFallbackMessageIfNeeded(result, threadChannelId);\n    this.handleResponsiveThreadChannelView();\n  }\n\n  /**\n   * Loads the parent document from the message service\n   * and determines its channel name if needed.\n   *\n   * @param {string} threadChannelId - The ID for the thread channel.\n   * @returns {Promise}\n   */\n  private async prepareParentDoc(threadChannelId: string) {\n    const parentDoc = await this.loadParentDoc(threadChannelId);\n    const channelName = await this.loadChannelNameIfNeeded(parentDoc);\n    return { parentDoc, channelName };\n  }\n\n  /**\n   * Loads child messages and formats them into a normalized structure.\n   *\n   * @param {string} threadChannelId - The ID for the thread channel.\n   * @returns {Promise} The formatted messages.\n   */\n  private async prepareChildMessages(threadChannelId: string): Promise {\n    const childMessages = await this.loadChildMessages(threadChannelId);\n    return this.formatThreadMessages(childMessages);\n  }\n\n  /**\n   * Assigns the final data to 'selectedThreadChannel'.\n   *\n   * @param {any} result - The original search result or context.\n   * @param {any} parentMessage - The built parent message object.\n   * @param {any[]} formattedMessages - The list of formatted child messages.\n   */\n  private assignThreadChannel(\n    result: any,\n    parentMessage: any,\n    formattedMessages: any[]\n  ): void {\n    this.selectedThreadChannel = {\n      ...result,\n      parentMessage,\n      messages: formattedMessages,\n    };\n  }\n\n  /** Prepares the component state for opening a thread channel from search */\n  private prepThreadChannelSearch(result: any): void {\n    if (this.selectedThread) {\n      this.closeThread();\n    }\n    this.isThreadChannelFromSearch = true;\n    this.isPrivateChat = false;\n    this.isSearchActive = false;\n    this.showWelcomeContainer = false;\n    this.selectedChannel = null;\n    this.selectedMember = null;\n    // Logically no change, just moved code out of original method\n  }\n\n  /** Retrieves the correct threadChannel ID from the search result */\n  private getThreadChannelId(result: any): string | null {\n    const threadChannelId =\n      result.threadChannelId || result.parentId || result.id;\n    if (!threadChannelId) {\n      return null;\n    }\n    return threadChannelId;\n  }\n\n  /** Loads the parent document from the message service */\n  private async loadParentDoc(\n    threadChannelId: string\n  ): Promise {\n    const doc = (await this.messageService.getMessage(\n      'thread-channel',\n      threadChannelId\n    )) as ThreadChannelParentDoc | null;\n    if (!doc) {\n    }\n    return doc;\n  }\n\n  /** Loads the channel name if missing in the parentDoc */\n  private async loadChannelNameIfNeeded(\n    parentDoc: ThreadChannelParentDoc | null\n  ): Promise {\n    let channelName = parentDoc?.channelName || 'Unbekannt';\n    if (!parentDoc?.channelName && parentDoc?.channelId) {\n      const channelData = await this.channelService.getChannelById(\n        parentDoc.channelId\n      );\n      channelName = channelData?.name || 'Unbekannt';\n    }\n    return channelName;\n  }\n\n  /** Loads child messages from the message service */\n  private async loadChildMessages(threadChannelId: string): Promise {\n    const msgs = await this.messageService.getMessagesOnce(\n      'thread-channel',\n      threadChannelId\n    );\n    return msgs || [];\n  }\n\n  /** Formats child messages to ensure certain properties exist */\n  private formatThreadMessages(childMessages: any[]): any[] {\n    return (childMessages || []).map((msg) => ({\n      ...msg,\n      content: msg.content ?? { text: 'Kein Text', emojis: [] },\n      timestamp: msg.timestamp || new Date(),\n    }));\n  }\n\n  /** Builds the parent message object from doc + result data */\n  private buildParentMessage(\n    parentDoc: ThreadChannelParentDoc | null,\n    result: any,\n    channelName: string,\n    threadChannelId: string\n  ) {\n    return {\n      id: threadChannelId,\n      text: parentDoc?.content?.text ?? result?.content?.text ?? 'Kein Text',\n      senderName: parentDoc?.senderName || result.senderName || 'Unbekannt',\n      senderAvatar:\n        parentDoc?.senderAvatar ||\n        result.senderAvatar ||\n        'assets/img/default-avatar.png',\n      timestamp: parentDoc?.timestamp || result.timestamp || new Date(),\n      replyCount: parentDoc?.replyCount || result.replyCount || 0,\n      channelName,\n      channelId: parentDoc?.channelId || null,\n      content: parentDoc?.content ?? { text: 'Kein Text', emojis: [] },\n    };\n  }\n\n  /** If the search result has a different ID than the threadChannelId, add fallback data */\n  private addFallbackMessageIfNeeded(\n    result: any,\n    threadChannelId: string\n  ): void {\n    if (result.id !== threadChannelId) {\n      const fallbackContent = result.content ?? {\n        text: 'Kein Text',\n        emojis: [],\n      };\n      const fallbackTimestamp = result.timestamp || new Date();\n      this.selectedThreadChannel.messages.push({\n        ...result,\n        content: fallbackContent,\n        timestamp: fallbackTimestamp,\n      });\n    }\n  }\n\n  /** Adjusts UI if on a small screen */\n  private handleResponsiveThreadChannelView(): void {\n    if (window.innerWidth  {\n      const element = document.getElementById(`message-${messageId}`);\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        element.classList.add('highlight');\n        setTimeout(() => element.classList.remove('highlight'), 2000);\n      } else if (retries > 0) {\n        this.scrollToMessage(messageId, retries - 1);\n      }\n    }, 300);\n  }\n\n  /**\n   * Opens a thread view for a specific message within the chat.\n   * If on mobile, switches to 'thread'.\n   *\n   * @param {any} message - The message object to open as a thread.\n   */\n  openThread(message: any): void {\n    this.resetThreadState();\n    if (this.isThreadAlreadyOpen(message)) return;\n\n    this.setupSelectedThread(message);\n    this.highlightThreadMessageAsync(message);\n\n    if (window.innerWidth  {\n      this.selectedThread = message;\n      setTimeout(() => {\n        const threadComponent = document.querySelector('app-thread') as any;\n        if (threadComponent?.highlightThreadMessage) {\n          threadComponent.highlightThreadMessage(message.id);\n        }\n      }, 300);\n    }, 50);\n  }\n\n  // ------------------------------------------------------------------------------------\n  // 4) SPLIT METHODS FOR: openThreadFromSearch (~40 lines)\n  // ------------------------------------------------------------------------------------\n\n  /**\n   * Opens a thread from a search result, deactivating private/chat contexts\n   * and setting up the thread environment. On mobile, switches to 'thread'.\n   *\n   * @param {any} message - The message object found in the search to open as a thread.\n   */\n  async openThreadFromSearch(message: any): Promise {\n    this.resetContextForSearchThread();\n    const threadId = this.determineThreadId(message);\n\n    let recipientName = message.recipientName || message.senderName;\n    if (!recipientName && message.recipientId) {\n      recipientName = await this.fetchRecipientName(message.recipientId);\n    }\n\n    this.selectedThread = {\n      ...message,\n      recipientName: recipientName || 'Unbekannt',\n      recipientId: message.recipientId || message.senderId,\n      threadId: threadId,\n    };\n\n    this.isThreadActive = true;\n    this.isThreadFromSearch = true;\n    this.handleMobileViewForSearchThread();\n  }\n\n  /** Resets the environment before opening a search thread */\n  private resetContextForSearchThread(): void {\n    this.closeThreadChannel();\n    this.isPrivateChat = false;\n    this.showWelcomeContainer = false;\n    this.selectedChannel = null;\n    this.selectedMember = null;\n  }\n\n  /** Determines the correct thread ID from the message */\n  private determineThreadId(message: any): string {\n    return message.threadId || message.parentId || message.id;\n  }\n\n  /** Adjusts the mobile view and header for a search-based thread */\n  private handleMobileViewForSearchThread(): void {\n    if (window.innerWidth  {\n        setTimeout(() => {\n          this.scrollToMessage(result.id);\n        }, 500);\n      });\n  }\n\n  /**\n   * Fetches the recipient's name from Firestore if it's not already\n   * cached locally. Returns 'Unbekannt' if the user is not found.\n   *\n   * @param {string} recipientId - The unique ID of the recipient to look up.\n   * @returns {Promise} A promise that resolves to the recipient's name\n   *                            or \"Unbekannt\" if not found.\n   */\n  private async fetchRecipientName(recipientId: string): Promise {\n    if (!recipientId) return 'Unbekannt';\n\n    if (this.recipientCache.has(recipientId)) {\n      return this.recipientCache.get(recipientId)!;\n    }\n\n    try {\n      const user = await this.userService.getUserById(recipientId);\n      const recipientName = user?.name || 'Unbekannt';\n\n      this.recipientCache.set(recipientId, recipientName);\n      return recipientName;\n    } catch (error) {\n      return 'Unbekannt';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserService handles user-related logic in Firestore and Firebase Auth,\nincluding profile updates, authentication state changes, and real-time listeners.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                getAllUsersLive\n                            \n                            \n                                getAllUsersRealTime\n                            \n                            \n                                    Async\n                                getCurrentUserData\n                            \n                            \n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsersByFirstLetter\n                            \n                            \n                                    Private\n                                    Async\n                                handleLogout\n                            \n                            \n                                    Private\n                                    Async\n                                handleNoUserSignedIn\n                            \n                            \n                                    Private\n                                    Async\n                                handleSignedInUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Private\n                                    Async\n                                performEmailUpdate\n                            \n                            \n                                    Private\n                                    Async\n                                reauthenticateUser\n                            \n                            \n                                    Private\n                                    Async\n                                sendVerificationEmail\n                            \n                            \n                                    Async\n                                updateEmailInFirestore\n                            \n                            \n                                    Async\n                                updateUserAvatar\n                            \n                            \n                                    Async\n                                updateUserEmail\n                            \n                            \n                                    Async\n                                updateUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, storage: Storage, router: Router, appStateService: AppStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appStateService\n                                                  \n                                                        \n                                                                        AppStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersLive\n                        \n                    \n                \n            \n            \n                \ngetAllUsersLive(callback: (users: any[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersRealTime\n                        \n                    \n                \n            \n            \n                \ngetAllUsersRealTime(callback: (users: any[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:48\n                        \n                    \n\n\n            \n                \n                        getCurrentUserData retrieves the currently signed-in user's Firestore doc,\nsets them as online, and resolves with their user data, or rejects if no user is signed in.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsersByFirstLetter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsersByFirstLetter(firstLetter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstLetter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:278\n                        \n                    \n\n\n            \n                \n                        Performs the logout steps: checks if user doc exists, deletes or marks offline, then signs out.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleNoUserSignedIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleNoUserSignedIn(user: User | null, reject: (reason: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Handles the case of no user being signed in: sets isOnline to false if possible, then rejects.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reject\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleSignedInUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSignedInUser(user: User, resolve: (value: any) => void, reject: (reason: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Handles the case of a signed-in user: fetches Firestore doc, sets isOnline to true, resolves if found.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resolve\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reject\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:263\n                        \n                    \n\n\n            \n                \n                        logout signs out the current user, optionally deletes a 'Guest' user doc,\nand marks the user offline in Firestore, then navigates to the login page.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        performEmailUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    performEmailUpdate(user: User, newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Updates the user's email address in Firebase Auth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        reauthenticateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    reauthenticateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendVerificationEmail(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Sends a verification email to the updated email address.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmailInFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmailInFirestore(uid: string, newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAvatar(avatarDataUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                avatarDataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserEmail(newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:102\n                        \n                    \n\n\n            \n                \n                        updateUserEmail re-authenticates the current user, updates their email in both Auth and Firestore,\nand sends a verification email with the given actionCodeSettings.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserName(newName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  updateDoc,\n  doc,\n  getDoc,\n  collection,\n  getDocs,\n  query,\n  where,\n  onSnapshot,\n  deleteDoc\n} from '@angular/fire/firestore';\nimport {\n  getAuth,\n  EmailAuthProvider,\n  reauthenticateWithCredential,\n  User,\n  onAuthStateChanged,\n  sendEmailVerification,\n  updateEmail,\n  signOut,\n} from 'firebase/auth';\nimport { Storage } from '@angular/fire/storage';\nimport { Router } from '@angular/router';\nimport { AppStateService } from './app-state.service';\n\n/**\n * UserService handles user-related logic in Firestore and Firebase Auth,\n * including profile updates, authentication state changes, and real-time listeners.\n */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(\n    private firestore: Firestore,\n    private storage: Storage,\n    private router: Router,\n    private appStateService: AppStateService\n  ) {}\n\n  /**\n   * getCurrentUserData retrieves the currently signed-in user's Firestore doc,\n   * sets them as online, and resolves with their user data, or rejects if no user is signed in.\n   */\n  async getCurrentUserData(): Promise {\n    const auth = getAuth();\n    return new Promise((resolve, reject) => {\n      onAuthStateChanged(auth, async (user) => {\n        if (user && user.uid) {\n          await this.handleSignedInUser(user, resolve, reject);\n        } else {\n          await this.handleNoUserSignedIn(user, reject);\n        }\n      });\n    });\n  }\n\n  /** Handles the case of a signed-in user: fetches Firestore doc, sets isOnline to true, resolves if found. */\n  private async handleSignedInUser(\n    user: User,\n    resolve: (value: any) => void,\n    reject: (reason?: any) => void\n  ): Promise {\n    try {\n      const userDocRef = doc(this.firestore, 'users', user.uid);\n      const userDocSnap = await getDoc(userDocRef);\n  \n      if (!userDocSnap.exists()) {\n        return reject(new Error('User not found.'));\n      }\n      await updateDoc(userDocRef, { isOnline: true });\n      resolve({ ...userDocSnap.data(), id: user.uid });\n\n    } catch (error) {\n      reject(error);\n    }\n  }\n\n  /** Handles the case of no user being signed in: sets isOnline to false if possible, then rejects. */\n  private async handleNoUserSignedIn(\n    user: User | null,\n    reject: (reason?: any) => void\n  ): Promise {\n    try {\n      if (user?.uid) {\n        const userRef = doc(this.firestore, 'users', user.uid);\n        await updateDoc(userRef, { isOnline: false });\n      }\n    } catch (error) {\n      // Intentionally empty to match original logic\n    }\n    reject(new Error('No user signed in.'));\n  }\n\n  /**\n   * updateUserEmail re-authenticates the current user, updates their email in both Auth and Firestore,\n   * and sends a verification email with the given actionCodeSettings.\n   */\n  async updateUserEmail(newEmail: string): Promise {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (!user || !user.uid) throw new Error('No user signed in.');\n\n    try {\n      await this.reauthenticateUser(user);\n      await this.performEmailUpdate(user, newEmail);\n      localStorage.setItem('newEmail', newEmail);\n      await this.updateEmailInFirestore(user.uid, newEmail);\n      await this.sendVerificationEmail(user);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      } else {\n        throw new Error(String(error));\n      }\n    }\n  }\n\n  /** Updates the user's email address in Firebase Auth. */\n  private async performEmailUpdate(\n    user: User,\n    newEmail: string\n  ): Promise {\n    await updateEmail(user, newEmail);\n  }\n\n  /** Sends a verification email to the updated email address. */\n  private async sendVerificationEmail(user: User): Promise {\n    const actionCodeSettings = {\n      url: 'http://localhost:4200/verify-email',\n      handleCodeInApp: true,\n    };\n    await sendEmailVerification(user, actionCodeSettings);\n  }\n\n  async updateEmailInFirestore(uid: string, newEmail: string): Promise {\n    const userDocRef = doc(this.firestore, 'users', uid);\n    await updateDoc(userDocRef, { email: newEmail });\n  }\n\n  private async reauthenticateUser(user: User): Promise {\n    const password = prompt(\n      'Bitte geben Sie Ihr Passwort ein, um fortzufahren:'\n    );\n    if (password) {\n      const credential = EmailAuthProvider.credential(user.email!, password);\n      try {\n        await reauthenticateWithCredential(user, credential);\n      } catch (error) {\n        throw new Error(\n          'Reauthentifizierung fehlgeschlagen. Bitte überprüfen Sie Ihr Passwort.'\n        );\n      }\n    } else {\n      throw new Error('Passwort erforderlich für die Reauthentifizierung.');\n    }\n  }\n\n  async updateUserAvatar(avatarDataUrl: string): Promise {\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if (user && user.uid) {\n      const userDocRef = doc(this.firestore, 'users', user.uid);\n      await updateDoc(userDocRef, {\n        avatarUrl: avatarDataUrl,\n      });\n    } else {\n      throw new Error('Kein Benutzer angemeldet.');\n    }\n  }\n\n  async updateUserName(newName: string): Promise {\n    const auth = getAuth();\n    const user = auth.currentUser;\n\n    if (user && user.uid) {\n      const userDocRef = doc(this.firestore, 'users', user.uid);\n      await updateDoc(userDocRef, {\n        name: newName,\n      });\n    } else {\n      throw new Error('Kein Benutzer angemeldet.');\n    }\n  }\n\n  async getAllUsers(): Promise {\n    const usersCollection = collection(this.firestore, 'users');\n    const querySnapshot = await getDocs(usersCollection);\n    const users: any[] = [];\n    querySnapshot.forEach((doc) => {\n      users.push({ id: doc.id, ...doc.data() });\n    });\n    return users;\n  }\n\n  async getUsersByFirstLetter(firstLetter: string): Promise {\n    const usersCollection = collection(this.firestore, 'users');\n\n    const q = query(\n      usersCollection,\n      where('name', '>=', firstLetter),\n      where('name', ' {\n      users.push(doc.data());\n    });\n\n    return users;\n  }\n\n  getCurrentUserId(): string | null {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    return user ? user.uid : null;\n  }\n  \n  async getUserById(userId: string): Promise {\n    const userDocRef = doc(this.firestore, 'users', userId);\n    const userDocSnap = await getDoc(userDocRef);\n    if (userDocSnap.exists()) {\n      return userDocSnap.data();\n    } else {\n      throw new Error('Benutzer nicht gefunden.');\n    }\n  }\n\n  getAllUsersRealTime(callback: (users: any[]) => void): void {\n    const usersCollection = collection(this.firestore, 'users');\n    onSnapshot(usersCollection, (snapshot) => {\n      const users = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      callback(users);\n    });\n  }\n\n  getAllUsersLive(callback: (users: any[]) => void): () => void {\n    const usersCollection = collection(this.firestore, 'users');\n\n    const unsubscribe = onSnapshot(usersCollection, (snapshot) => {\n      const users = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      callback(users);\n    });\n    return unsubscribe;\n  }\n\n  /**\n   * logout signs out the current user, optionally deletes a 'Guest' user doc,\n   * and marks the user offline in Firestore, then navigates to the login page.\n   */\n  async logout(): Promise {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (!user) return;\n\n    try {\n      await this.handleLogout(user);\n      this.appStateService.setShowWelcomeContainer(true);\n      this.router.navigate(['/login']);\n    } catch {\n      // Intentionally empty to match original logic\n    }\n  }\n\n  /** Performs the logout steps: checks if user doc exists, deletes or marks offline, then signs out. */\n  private async handleLogout(user: User): Promise {\n    const auth = getAuth();\n    const userDocRef = doc(this.firestore, 'users', user.uid);\n    const userDocSnap = await getDoc(userDocRef);\n\n    if (!userDocSnap.exists()) {\n      await signOut(auth);\n      return;\n    }\n\n    const userData = userDocSnap.data() as any;\n    if (userData.name && userData.name.startsWith('Guest')) {\n      await deleteDoc(userDocRef);\n    } else {\n      await updateDoc(userDocRef, { isOnline: false });\n    }\n\n    await signOut(auth);\n  }\n\n  \n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/verify-email/verify-email.component.ts\n\n\n\n    \n        Description\n    \n    \n        The VerifyEmailComponent listens for email verification links from Firebase,\nattempts to verify the user's email, and updates the email in Firebase Auth.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                HeaderComponent\n                            RouterModule\n                                FooterComponent\n                \n            \n\n            \n                styleUrls\n                ./verify-email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editableUserEmail\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Private\n                                    Async\n                                submitSignInLink\n                            \n                            \n                                    Private\n                                    Async\n                                verifySignInLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/verify-email/verify-email.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructs the component, injecting the Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/verify-email/verify-email.component.ts:70\n                        \n                    \n\n\n            \n                \n                        OnInit checks if the current URL is a valid sign-in link, attempts to verify the email,\nand if successful, updates the email in Firebase and redirects to chat.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/verify-email/verify-email.component.ts:90\n                        \n                    \n\n\n            \n                \n                        onSubmit can be triggered if there's a form for manually entering the email.\nIt will similarly verify the email link and update the user's email address.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        submitSignInLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitSignInLink(firebaseAuth: any, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/verify-email/verify-email.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Signs in with the provided editableUserEmail, sets a success message, updates the email in Firebase,\nremoves it from localStorage, and navigates to the chat page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firebaseAuth\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifySignInLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifySignInLink(firebaseAuth: any, storedEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/verify-email/verify-email.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Signs in with the existing email link, sets a success message, updates the email in Firebase,\nremoves it from localStorage, and navigates to the chat page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firebaseAuth\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                storedEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editableUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/verify-email/verify-email.component.ts:44\n                        \n                    \n\n            \n                \n                    A variable for editing the user's email in a form (if needed).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/verify-email/verify-email.component.ts:49\n                        \n                    \n\n            \n                \n                    Stores the email retrieved from localStorage if the user was updating it.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/verify-email/verify-email.component.ts:59\n                        \n                    \n\n            \n                \n                    An error message displayed if verification fails.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/verify-email/verify-email.component.ts:54\n                        \n                    \n\n            \n                \n                    A success message displayed after successful verification.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  getAuth,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  updateEmail,\n} from 'firebase/auth';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from '../header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from '../footer/footer.component';\n\n/**\n * The VerifyEmailComponent listens for email verification links from Firebase,\n * attempts to verify the user's email, and updates the email in Firebase Auth.\n */\n@Component({\n  selector: 'app-verify-email',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HeaderComponent,\n    RouterModule,\n    FooterComponent,\n  ],\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss'],\n})\nexport class VerifyEmailComponent implements OnInit {\n  /**\n   * A variable for editing the user's email in a form (if needed).\n   */\n  editableUserEmail: string = '';\n\n  /**\n   * Stores the email retrieved from localStorage if the user was updating it.\n   */\n  email: string | null = null;\n\n  /**\n   * A success message displayed after successful verification.\n   */\n  successMessage: string = '';\n\n  /**\n   * An error message displayed if verification fails.\n   */\n  errorMessage: string = '';\n\n  /**\n   * Constructs the component, injecting the Router for navigation.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * OnInit checks if the current URL is a valid sign-in link, attempts to verify the email,\n   * and if successful, updates the email in Firebase and redirects to chat.\n   */\n  async ngOnInit() {\n    const firebaseAuth = getAuth();\n    const storedEmail = localStorage.getItem('newEmail');\n    this.email = storedEmail;\n    if (!isSignInWithEmailLink(firebaseAuth, window.location.href)) {\n      this.errorMessage = 'Invalid verification link.';\n      return;\n    }\n    if (!storedEmail) return;\n    try {\n      await this.verifySignInLink(firebaseAuth, storedEmail);\n    } catch (error) {\n      this.errorMessage = 'Error verifying the email.';\n    }\n  }\n\n  /**\n   * onSubmit can be triggered if there's a form for manually entering the email.\n   * It will similarly verify the email link and update the user's email address.\n   */\n  async onSubmit() {\n    const firebaseAuth = getAuth();\n    if (!isSignInWithEmailLink(firebaseAuth, window.location.href)) return;\n    try {\n      await this.submitSignInLink(firebaseAuth, this.editableUserEmail);\n    } catch (error) {\n      this.errorMessage = 'Error verifying the email.';\n    }\n  }\n\n  /**\n   * Signs in with the existing email link, sets a success message, updates the email in Firebase,\n   * removes it from localStorage, and navigates to the chat page.\n   */\n  private async verifySignInLink(\n    firebaseAuth: any,\n    storedEmail: string\n  ): Promise {\n    await signInWithEmailLink(firebaseAuth, storedEmail, window.location.href);\n    this.successMessage = 'E-Mail successfully verified.';\n    const user = firebaseAuth.currentUser;\n    if (!user) return;\n    await updateEmail(user, storedEmail);\n    localStorage.removeItem('newEmail');\n    this.router.navigate(['/chat']);\n  }\n\n  /**\n   * Signs in with the provided editableUserEmail, sets a success message, updates the email in Firebase,\n   * removes it from localStorage, and navigates to the chat page.\n   */\n  private async submitSignInLink(\n    firebaseAuth: any,\n    email: string\n  ): Promise {\n    await signInWithEmailLink(firebaseAuth, email, window.location.href);\n    this.successMessage = 'Email successfully verified.';\n    const user = firebaseAuth.currentUser;\n    if (!user) return;\n    await updateEmail(user, email);\n    localStorage.removeItem('newEmail');\n    this.router.navigate(['/chat']);\n  }\n}\n  \n\n    \n\n    \n        \n\n  Verifizierung der E-Mail-Adresse\n  \n    Bitte geben Sie Ihre E-Mail-Adresse ein, um den Verifizierungsprozess\n    abzuschließen:\n  \n  Verifiziere E-Mail für: {{ email }}\n\n  \n    E-Mail-Adresse:\n    \n    E-Mail bestätigen\n  \n\n  {{ errorMessage }}\n  {{ successMessage }}\n\n\n\n    \n\n    \n                \n                    ./verify-email.component.scss\n                \n                @import \"./../../styles.scss\";\n\n.container {\n  @include dFlex(center, center, null);\n  width: 100%;\n  background-color: $lightblue;\n  padding: 160px 0;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.login-container {\n  text-align: center;\n  background-color: white;\n  border-radius: 30px;\n  box-shadow: 0px 2px 10px 0px #00000014;\n  max-width: 606px;\n  width: 100%;\n  position: relative;\n\n  .errorMessage {\n    width: 100%;\n    display: flex;\n    align-items: center;\n  }\n\n  .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 40px 40px;\n\n    .box {\n      @include dFlex(null, null, 20px);\n      flex-direction: column;\n      max-width: 512px;\n      width: 100%;\n    }\n\n    .konto-container {\n      @include dFlex(null, center, null);\n      flex-direction: row-reverse;\n    }\n\n    .image-container {\n      position: absolute;\n      top: 45px;\n      left: 32px;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      transition: background-color 0.3s;\n      overflow: hidden;\n      z-index: 1;\n      align-content: center;\n\n      &:hover {\n        filter: brightness(100%);\n        background-color: $lightblue;\n      }\n\n      img {\n        object-fit: cover;\n        border-radius: 50%;\n        transition: transform 0.3s;\n        cursor: pointer;\n\n        &:hover {\n          filter: brightness(0) saturate(100%) invert(35%) sepia(62%)\n            saturate(2733%) hue-rotate(225deg) brightness(93%) contrast(104%);\n        }\n      }\n    }\n\n    h2 {\n      color: $button-blue;\n      font-size: 46px;\n      font-weight: 700;\n      margin: 0;\n      flex-grow: 1;\n      text-align: center;\n      max-width: 491px;\n      width: 100%;\n      line-height: 55.2px;\n    }\n\n    p {\n      color: black;\n      font-size: 20px;\n      font-weight: 400;\n      margin: 0;\n    }\n\n    a {\n      color: $middleblue;\n      font-size: 18px;\n      font-weight: 400;\n      text-decoration: none;\n      transition: background-color 0.3s, border-radius 0.3s, padding 0.3s;\n    }\n\n    .button-container {\n      @include dFlex(flex-end, null, null);\n      max-width: 500px;\n      width: 100%;\n\n      .error-message p {\n        color: red !important;\n        font-weight: bold;\n        width: 70%;\n      }\n\n      .success-message p {\n        color: green;\n        font-weight: bold;\n      }\n    }\n\n    form {\n      max-width: 500px;\n      width: 100%;\n\n      input {\n        background: $lightblue;\n        border-radius: 100px;\n        color: #686868;\n        font-size: 18px;\n        font-weight: 500;\n        height: 60px;\n        width: 100%;\n        border: 1px solid transparent;\n        cursor: pointer;\n        box-sizing: border-box;\n        max-width: 500px;\n\n        &:hover {\n          border-color: #686868;\n          transition: border-color 0.3s;\n        }\n\n        &:focus,\n        &:focus-within {\n          outline: none;\n          border-color: $button-blue;\n        }\n\n        &:not(:focus) {\n          &:has(+ input:focus) {\n            border-color: blue;\n          }\n        }\n      }\n\n      .privacy-box {\n        @include dFlex(center, center, 8px);\n        width: 100%;\n\n        p {\n          @include dFlex(null, center, 4px);\n          color: #686868;\n          font-size: 20px;\n          font-weight: 400;\n          width: 100%;\n          max-width: 354px;\n          margin-top: 40px;\n        }\n      }\n\n      .error-message {\n        font-size: 14px;\n        color: #ed1e79;\n        font-weight: 400;\n        text-align: left;\n        text-align: center;\n        width: 100%;\n        max-width: 320px;\n        align-items: flex-end;\n        display: flex;\n      }\n\n      .input-container {\n        margin-top: 40px;\n      }\n\n      .email-icon {\n        background-image: url(\"/assets/img/mail.png \");\n        background-repeat: no-repeat;\n        background-position: 15px center;\n        background-size: 24px 24px;\n        color: black;\n        transition: background-image 0.3s ease;\n        padding-left: 70px;\n      }\n\n      .filled {\n        &.email-icon {\n          background-image: url(\"/assets/img/black-mail.png\");\n        }\n      }\n    }\n  }\n}\n\n.button-anmelden {\n  width: 170px;\n  font-size: 16px;\n  margin-top: 40px;\n}\n\n.registration-ok {\n  max-width: 441px;\n  gap: 28px;\n}\n\n@media (max-width: 780px) {\n  .login-container .login {\n    form {\n      .privacy-box p {\n        margin-top: 20px;\n        font-size: 14px;\n      }\n    }\n  }\n\n  .login-container .login .image-container {\n    width: unset;\n  }\n\n  .box {\n    @include dFlex(null, null, 10px);\n    flex-direction: column;\n    max-width: 345px;\n    width: 100px;\n  }\n\n  .login-container .login .image-container {\n    left: 22px;\n  }\n\n  .login-container {\n    width: unset;\n  }\n\n  .container {\n    padding: 10rem 2rem;\n    box-sizing: border-box;\n  }\n\n  .login-container .login p {\n    margin: 0 auto;\n    padding: unset;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    max-width: 320px;\n  }\n\n  .login-container .login form .error-message {\n    font-size: 11px;\n  }\n\n  .login-container .login form .input-container input {\n    font-size: 14px;\n  }\n\n  .login-container .login form .input-container {\n    margin-top: 20px;\n  }\n\n  .button-container {\n    gap: 30px;\n  }\n\n  .login-container .login .box {\n    gap: 20px;\n    max-width: 346px;\n  }\n\n  .login-container .login form {\n    width: 100%;\n    max-width: 320px;\n  }\n\n  .login-container .login {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .login-container .login h2 {\n    line-height: 35.2px;\n  }\n\n  .login-container .login h2 {\n    font-size: 36px;\n  }\n\n  .button-anmelden {\n    margin-top: 20px;\n  }\n}\n\n@media (max-width: 520px) {\n  .login-container .login .image-container {\n    top: unset;\n  }\n\n  .registration-ok {\n    padding: unset;\n  }\n\n  .login-container .login h2 {\n    font-size: 30px;\n    width: 100%;\n    max-width: 300px;\n    line-height: 35.2px;\n  }\n\n  .login-container .login .box {\n    gap: 10px;\n  }\n\n  .login-container .login .image-container {\n    height: 30px;\n  }\n\n  .login-container .login .konto-container {\n    flex-direction: column;\n  }\n\n  .login-container .login p {\n    width: 300px;\n    justify-content: center;\n  }\n\n  .login-container .login .button-container {\n    gap: 10px;\n  }\n\n  .login-container .login {\n    overflow: hidden;\n    padding: unset;\n  }\n\n  .login-container {\n    padding: 20px;\n    overflow: hidden;\n  }\n\n  .login-container .login form .input-container input {\n    height: 40px;\n  }\n\n  .login-container .login form {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 390px) {\n  .login-container .login {\n    width: 260px;\n  }\n\n  .login-container .login p {\n    width: 260px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Verifizierung der E-Mail-Adresse      Bitte geben Sie Ihre E-Mail-Adresse ein, um den Verifizierungsprozess    abzuschließen:    Verifiziere E-Mail für: {{ email }}      E-Mail-Adresse:        E-Mail bestätigen    {{ errorMessage }}  {{ successMessage }}'\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomeScreenComponent.html":{"url":"components/WelcomeScreenComponent.html","title":"component - WelcomeScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomeScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-screen/welcome-screen.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-screen\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./welcome-screen.component.html\n            \n\n\n\n            \n                styleUrl\n                ./welcome-screen.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-screen',\n  standalone: true,\n  imports: [],\n  templateUrl: './welcome-screen.component.html',\n  styleUrl: './welcome-screen.component.scss'\n})\nexport class WelcomeScreenComponent {\n\n}\n\n    \n\n    \n        \n  \n    Willkommen bei DAbubble!\n    Deine Features im Überblick:\n\n    \n      Direkt-Nachrichten schreiben\n      Channels erstellen und beitreten\n      Auf Channel-Nachrichten in Threads antworten\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Willkommen bei DAbubble!    Deine Features im Überblick:          Direkt-Nachrichten schreiben      Channels erstellen und beitreten      Auf Channel-Nachrichten in Threads antworten      '\n    var COMPONENTS = [{'name': 'AddMembersDialogComponent', 'selector': 'app-add-members-dialog'},{'name': 'AddMembersDialogMobileComponent', 'selector': 'app-add-members-dialog-mobile'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthActionComponent', 'selector': 'app-auth-action'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelDialogComponent', 'selector': 'app-channel-dialog'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHeaderComponent', 'selector': 'app-chat-header'},{'name': 'DevspaceComponent', 'selector': 'app-devspace'},{'name': 'DirectMessagesComponent', 'selector': 'app-direct-messages'},{'name': 'EditChannelDialogComponent', 'selector': 'app-edit-channel-dialog'},{'name': 'EntwicklerteamComponent', 'selector': 'app-entwicklerteam'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'InnerChannelComponent', 'selector': 'app-inner-channel'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MemberListDialogComponent', 'selector': 'app-member-list-dialog'},{'name': 'MembersDialogComponent', 'selector': 'app-mitglieder-dialog'},{'name': 'MemberSectionDialogComponent', 'selector': 'app-member-section-dialog'},{'name': 'NewPasswortComponent', 'selector': 'app-new-passwort'},{'name': 'PasswortResetComponent', 'selector': 'app-passwort-reset'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'PrivateMessagesComponent', 'selector': 'app-private-messages'},{'name': 'ProfilDialogComponent', 'selector': 'app-profil-dialog'},{'name': 'SearchFieldComponent', 'selector': 'app-search-field'},{'name': 'SelectedMembersDialogComponent', 'selector': 'app-selected-members-dialog'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'ThreadChannelComponent', 'selector': 'app-thread-channel'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'},{'name': 'WelcomeScreenComponent', 'selector': 'app-welcome-screen'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomeScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts\n            \n            component\n            AddMembersDialogMobileComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/add-members-dialog-mobile/add-members-dialog-mobile.component.ts\n            \n            interface\n            AddMembersMobileData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/add-members-dialog/add-members-dialog.component.ts\n            \n            component\n            AddMembersDialogComponent\n            \n                83 %\n                (25/30)\n            \n        \n        \n            \n                \n                src/app/add-members-dialog/add-members-dialog.component.ts\n            \n            interface\n            AddMembersDialogData\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/app-state.service.ts\n            \n            injectable\n            AppStateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-action/auth-action.component.ts\n            \n            component\n            AuthActionComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/avatar/avatar.component.ts\n            \n            component\n            AvatarComponent\n            \n                46 %\n                (12/26)\n            \n        \n        \n            \n                \n                src/app/channel-dialog/channel-dialog.component.ts\n            \n            component\n            ChannelDialogComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/channel.service.ts\n            \n            injectable\n            ChannelService\n            \n                95 %\n                (44/46)\n            \n        \n        \n            \n                \n                src/app/chat-header/chat-header.component.ts\n            \n            component\n            ChatHeaderComponent\n            \n                92 %\n                (97/105)\n            \n        \n        \n            \n                \n                src/app/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                65 %\n                (67/102)\n            \n        \n        \n            \n                \n                src/app/chat/chat.component.ts\n            \n            interface\n            ThreadChannelParentDoc\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/devspace/devspace.component.ts\n            \n            component\n            DevspaceComponent\n            \n                90 %\n                (76/84)\n            \n        \n        \n            \n                \n                src/app/direct-messages/direct-messages.component.ts\n            \n            component\n            DirectMessagesComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/edit-channel-dialog/edit-channel-dialog.component.ts\n            \n            component\n            EditChannelDialogComponent\n            \n                97 %\n                (34/35)\n            \n        \n        \n            \n                \n                src/app/entwicklerteam/entwicklerteam.component.ts\n            \n            component\n            EntwicklerteamComponent\n            \n                82 %\n                (138/167)\n            \n        \n        \n            \n                \n                src/app/entwicklerteam/entwicklerteam.component.ts\n            \n            interface\n            MessageContent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/entwicklerteam/entwicklerteam.component.ts\n            \n            interface\n            ThreadChannelParentDoc\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inner-channel/inner-channel.component.ts\n            \n            component\n            InnerChannelComponent\n            \n                80 %\n                (17/21)\n            \n        \n        \n            \n                \n                src/app/intro/intro.component.ts\n            \n            component\n            IntroComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (27/30)\n            \n        \n        \n            \n                \n                src/app/member-list-dialog/member-list-dialog.component.ts\n            \n            component\n            MemberListDialogComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/member-list-dialog/member-list-dialog.component.ts\n            \n            interface\n            MemberListDialogData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/member-section-dialog/member-section-dialog.component.ts\n            \n            component\n            MemberSectionDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/member.model.ts\n            \n            interface\n            Member\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/members-dialog/members-dialog.component.ts\n            \n            component\n            MembersDialogComponent\n            \n                100 %\n                (33/33)\n            \n        \n        \n            \n                \n                src/app/message.models.ts\n            \n            interface\n            BroadcastMessageData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/message.models.ts\n            \n            interface\n            ChannelMessageData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/message.models.ts\n            \n            interface\n            FirestoreMessageData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/message.models.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/message.models.ts\n            \n            interface\n            MessageContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/message.service.ts\n            \n            injectable\n            MessageService\n            \n                95 %\n                (62/65)\n            \n        \n        \n            \n                \n                        src/app/message.service.ts\n            \n            type alias\n            MessageType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/message.service.ts\n            \n            type alias\n            ReplyCountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/new-passwort/new-passwort.component.ts\n            \n            component\n            NewPasswortComponent\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/passwort-reset/passwort-reset.component.ts\n            \n            component\n            PasswortResetComponent\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/privacy/privacy.component.ts\n            \n            component\n            PrivacyComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/private-messages/private-messages.component.ts\n            \n            component\n            PrivateMessagesComponent\n            \n                59 %\n                (87/147)\n            \n        \n        \n            \n                \n                src/app/private-messages/private-messages.component.ts\n            \n            interface\n            MessageContent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/profil-dialog/profil-dialog.component.ts\n            \n            component\n            ProfilDialogComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profil-dialog/profil-dialog.component.ts\n            \n            interface\n            ProfileData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/search-field/search-field.component.ts\n            \n            component\n            SearchFieldComponent\n            \n                92 %\n                (100/108)\n            \n        \n        \n            \n                \n                src/app/search-field/search-field.component.ts\n            \n            interface\n            EmojiItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/search-field/search-field.component.ts\n            \n            interface\n            MessageContent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/selected-members-dialog/selected-members-dialog.component.ts\n            \n            component\n            SelectedMembersDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/thread-channel/thread-channel.component.ts\n            \n            component\n            ThreadChannelComponent\n            \n                92 %\n                (112/121)\n            \n        \n        \n            \n                \n                src/app/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                92 %\n                (119/129)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                45 %\n                (9/20)\n            \n        \n        \n            \n                \n                src/app/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/welcome-screen/welcome-screen.component.ts\n            \n            component\n            WelcomeScreenComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/cdk : ^17.3.10\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/material : ^17.3.10\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            cors : ^2.8.5\n        \n            firebase : ^10.12.5\n        \n            perfect-scrollbar : ^1.5.5\n        \n            rxjs : ~7.8.0\n        \n            simplebar : ^6.2.7\n        \n            simplebar-angular : ^3.2.6\n        \n            tslib : ^2.3.0\n        \n            validator : ^13.12.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDABubble\nDABubble is an Angular-based chat application (TypeScript + SCSS) that uses Firebase (Firestore & Auth) as its backend. It enables real-time communication in channels (Channels), threads, and private messages (direct messages). Additionally, users can customize their profile (avatar, name, email address).\nTable of Contents\n\nOverview  \nFeatures  \nTechnologies  \nInstallation  \nUsage  \nTests  \nScreenshots (Optional)  \nProject Structure  \nContributing  \nLicense\nDocumentation (Optional, using Compodoc)\n\n\nOverview\nThe DABubble app was created to provide an intuitive and responsive chat experience. Users can write messages in channels or thread-channels and invite other members. Additionally, there are private messages (1:1 chats) and threads for in-depth conversations.\nThere is also a guest mode for those who prefer not to register. Users can personalize their profiles by adjusting their avatar, display name, and email address.\n\nFeatures\n\nChannels & Threads  \n\nChannels with multiple participants and real-time updates  \nThreads or thread-channels for structured, topic-specific discussions\n\n\nPrivate Messages (DM)  \n\n1:1 communication  \nThread support in private chats\n\n\nProfile Management  \n\nEdit avatar/profile picture, name, and email  \nOnline/offline status in real time\n\n\nMessage Editing  \n\nEdit or delete messages, add emojis, upload images\n\n\nAuthentication  \n\nEmail/password registration or guest login  \nPassword reset  \nLegal notice (Impressum) and privacy policy\n\n\nResponsive Design  \n\nDesktop and mobile support  \nNo separate mobile app required\n\n\n\n\nTechnologies\n\nAngular (TypeScript + SCSS)  \nFirebase  \nFirestore (real-time database)  \nFirebase Auth (registration & login)  \nOptional: Firebase Storage (images)\n\n\nAngular CLI (e.g., version 17.x)\n\n(Adjust the version number to match your actual environment.)\n\nInstallation\nPrerequisites\n\nNode.js (version 16 or higher)  \nNPM or Yarn  \nAngular CLI (optional)  \nFirebase account (for Firestore/Auth)\n\nSteps\n\nClone the repository  Example :git clone https://github.com/Seldir193/DABubble.git\ncd dabubble\nnpm install\n\nScreenshots (Optional)\nBelow are some sample screenshots of the application:\n\n1. Channel Overview\n\nThis screenshot shows an overview of the channels in which multiple members can chat in real time.\n\n\n\n2. Thread-Channel Feature\n\nThis example illustrates how to start a sub-discussion (thread) within a channel—helpful for separating topics from the main chat.\n\n\n\n3. Private Messages\n\nHere you can see direct (1:1) messages where you can also use emojis, images, and threads.\n\n\n\n4. Thread Messages\n\nThis example shows how you can hold a sub-discussion (thread) within a channel, separate from the main chat.\n\n\n\nUsage\n\nStarting the Application  \n\nRun ng serve or start it in your IDE (e.g., Visual Studio Code) using an Angular CLI command.  \nOpen http://localhost:4200 in your browser.  \nThe application automatically recompiles and reloads when you make changes to the source files.\n\n\nRegistration or Guest Login  \n\nOn first launch, you can create an account (email/password) or log in as a guest.  \nGuest users have limited profile features.\n\n\nChannels & Threads  \n\nClick the “+” icon to create a new channel, invite members, and start chatting.  \nClick on a message to start a thread or to attach images/emojis.\n\n\nPrivate Messages  \n\nSelect a user to start a direct (1:1) message. You can also use threads here for more in-depth discussions.\n\n\nEdit Your Profile  \n\nClick your avatar icon (top right) to change your name, email, or avatar, and to manage your online status.\n\n\nPrivacy Policy & Legal Notice  \n\nAccessible via the footer link or the menu, containing legal notices and contact info.\n\n\nPassword Reset  \n\nUse “Forgot Password?” to request a new password (email verification required).\n\n\n\n\nTests\nUnit Tests (Jasmine/Karma)\nTo run the unit tests (using Jasmine/Karma), ensure that you have installed all required dependencies. Then execute:\nng test\nProject Structure\nDABubble/├─ src/│  ├─ app/│  │  ├─ components/│  │  │  ├─ chat-component.html│  │  │  ├─ add-members-dialog.html│  │  │  ├─ add-members-dialog-mobile.html│  │  │  ├─ auth-action.html│  │  │  ├─ avatar.html│  │  │  ├─ channel-dialog.html│  │  │  ├─ chat-header.html│  │  │  ├─ devspace.html│  │  │  ├─ direct-messages.html│  │  │  ├─ edit-channel-dialog.html│  │  │  ├─ entwicklerteam.html│  │  │  ├─ footer.html│  │  │  ├─ header.html│  │  │  ├─ imprint.html│  │  │  ├─ inner-channel.html│  │  │  ├─ intro.html│  │  │  ├─ login.html│  │  │  ├─ members-list-dialog.html│  │  │  ├─ member-section-dialog.html│  │  │  ├─ members-dialog.html│  │  │  ├─ new-passwort.html│  │  │  ├─ passwort-reset.html│  │  │  ├─ privacy.html│  │  │  ├─ private-messages.html│  │  │  ├─ profil-dialog.html│  │  │  ├─ search-field.html│  │  │  ├─ search-result-dialog.html│  │  │  ├─ selected-mebers-dialog.html│  │  │  ├─ signup.html│  │  │  ├─ thread.html│  │  │  ├─ thread-channel.html│  │  │  ├─ verify-email.html│  │  │  └─ welcome-screen.html│  │  ││  │  │  /* Note:\n│  │  │     Each .html file has a corresponding .ts & .scss,\n│  │  │     e.g. \"chat-component.ts\" and \"chat-component.scss\" */\n│  │  ├─ services/\n│  │  │  ├─ user.service.ts\n│  │  │  ├─ message.service.ts\n│  │  │  ├─ channel.service.ts\n│  │  │  └─ app-state.service.ts\n│  │  ├─ pages/\n│  │  │  ├─ app.component.html\n│  │  │  ├─ app.component.scss\n│  │  │  ├─ app.component.spec.ts\n│  │  │  └─ app.component.ts\n│  │  ├─ app.config.ts\n│  │  ├─ app.routes.ts\n│  │  ├─ message.model.ts\n│  │  └─ member.models.ts\n│  ├─ environments/\n│  │  ├─ environment.ts\n│  │  └─ environment.prod.ts\n│  ├─ main.ts\n│  ├─ index.html\n│  └─ ...\n├─ angular.json\n├─ package.json\n├─ README.md\n└─ ...\n\nContributing\nContributions are welcome! Fork the repository, create a new branch, and submit a pull request.\nPlease ensure that your code follows these guidelines:\n\nClean Code principles: Write simple, understandable, and maintainable code.\n\n\nLicense\nThis project is licensed under the MIT License. For more details, see the LICENSE file.\n\nDocumentation (Optional, using Compodoc)\nIf you want to generate code documentation for the DABubble project, Compodoc can produce an interactive HTML site based on your Angular components, services, and JSDoc comments.\n\nInstall DependenciesMake sure you have installed all dependencies, including dev dependencies:Example :npm install\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageType   (src/.../message.service.ts)\n                        \n                        \n                            ReplyCountsMap   (src/.../message.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/message.service.ts\n    \n    \n        \n            \n                \n                    \n                    MessageType\n                \n            \n            \n                \n                    MessageType enumerates the recognized message categories like private, thread, or thread-channel.\n\n                \n            \n            \n                \n                        \"text\" | \"private\" | \"thread\" | \"thread-channel\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ReplyCountsMap\n                \n            \n            \n                \n                    ReplyCountsMap is used to store reply counts (plus the latest response time)\nfor multiple parent message IDs, used primarily for live updates.\n\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideFirebaseApp(() => initializeApp(environment.firebaseConfig)),\n    provideFirestore(() => getFirestore()),\n    provideAuth(() => getAuth()),\n    provideStorage(() => getStorage()),\n    ReactiveFormsModule, provideAnimationsAsync(),\n    MatInputModule, MatFormFieldModule, MatDialogModule,BrowserAnimationsModule,\n    MatButtonModule,\n    provideAnimations(),\n    { provide: LOCALE_ID, useValue: 'de-DE' }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAgxRDY1OkM0C4HTChULxB0cf3oiyTG7Go',\n    authDomain: 'dabubble-3b22e.firebaseapp.com',\n    projectId: 'dabubble-3b22e',\n    storageBucket: 'dabubble-3b22e.appspot.com',\n    messagingSenderId: '837671090070',\n    appId: '1:837671090070:web:f294fc70edfcf2caeccfb7',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAgxRDY1OkM0C4HTChULxB0cf3oiyTG7Go',\n    authDomain: 'dabubble-3b22e.firebaseapp.com',\n    projectId: 'dabubble-3b22e',\n    storageBucket: 'dabubble-3b22e.appspot.com',\n    messagingSenderId: '837671090070',\n    appId: '1:837671090070:web:f294fc70edfcf2caeccfb7',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
